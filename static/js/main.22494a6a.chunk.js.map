{"version":3,"sources":["js/components/WhiteSquareBackground.jsx","js/utility/trackConversions.js","js/components/TileButtons.jsx","js/components/square.js","js/utility/utilityFunctions.js","js/generation/generateMap.js","js/utility/colorFunctions.js","js/render/mapBackground.js","js/components/map.js","js/components/waveButton.js","js/generation/generateIcon.js","js/utility/localStorage.js","js/components/game.js","js/components/dropdown.js","js/render/deleteMapConfirmScreen.js","js/render/returnToMainMenuBtn.js","js/render/loadMapScreen.js","js/render/howToPlayScreen.js","js/render/startMapScreen.js","js/render/aboutScreen.js","js/render/mainMenuScreen.js","js/components/app.js","index.js","img/curvedtrack.png","img/straighttrack.png"],"names":["WhiteSquareBackground","props","transitionSpeed","className","style","position","top","left","height","width","background","zIndex","transition","opacity","convertDirectionArrayToRailTypes","dirArr","previousTileRailType","currentHoverTileRailType","length","convertRailTypeToTrackImage","railType","trackData","trackType","straighttrack","trackRotation","curvedtrack","convertButtonClassToRailType","e","target","classList","contains","CornerButton","corner","AxisButton","edge","CentreButton","TileButtons","map","el","key","x","Square","squareStyling","trackText","boxStyling","useState","tile","hoverTrack","setHoverTrack","getMouseEventObject","y","tileClass","getTileClassFromEvent","mouseButton","buttons","squareHoverStart","mouseEventObject","hoverStartEvent","setHoverGhostTrack","squareHoverEnd","hoverEndEvent","currentTarget","includes","trackImage","backgroundImage","transform","setHoverTrackImage","setPlacedTrackImage","filter","highlighted","border","onContextMenu","preventDefault","onMouseOver","onMouseLeave","onMouseDown","leftClickEvent","rightClickEvent","bothClickEvent","squareMouseDown","onMouseUp","button","leftReleaseEvent","rightReleaseEvent","squareMouseUp","color","fillState","convertFillStateToColor","text","randomIntFromInterval","min","max","Math","floor","random","findIndexOfArrayInMatrix","array","matrix","index","i","compareArrays","arr1","arr2","arrEqual","every","v","getIndexOfLongestArrayInMatrix","curMaxLength","isNonEmptyArray","Array","isArray","removeDuplicateArraysFromMatrix","loopIndex","removeArraysFromMatrix","arrays","forEach","arr","getRandomSeed","pow","generateNewMap","mapWidth","mapHeight","mapSeed","pathFindingDisabled","seedrandom","global","trainTrackMap","tracks","headerLabels","allTiles","generateMapTiles","moveDirections","getDirectionOfEachMove","railTypes","directionsToTrackRailType","defaultTilesIndices","generateDefaultTileIndices","generateMapHeaders","isDefaultTrack","push","defaultTrack","generateStartEndPoints","startCoordinate","endCoordinate","generatedTiles","mapComplete","lastMove","nextMove","newMove","getLegalMoves","coordinate","legalMoves","removeOutOfBoundsMoves","getAdjacentTiles","removeMovesToVisitedTiles","fill","moves","tiles","move","boo","remove","currentCoordinate","checkIfOnlyLegalMoveIsExit","mutateMoveArray","checkIfPossibleToReachTarget","moveMutateFunctions","removeSealingMoves","removeAroundExitMoves","removeHookMoves","removeMovesWithLessTilesFromExit","mutatedMoveArray","currentFunc","getSurroundingTiles","tileArray","a","b","getTilesAdjacentAndExit","adjacentTiles","getTilesSurroundingExit","checkIfTilesAdjacent","tileOne","tileTwo","chooseSurroundOrAdjacentExitTiles","checkIfMoveIsAroundExitTile","tilesAroundExit","moveIsAdjExit","checkIfMapCovered","checkIfMoveSeals","modifier","mapCoverage","nextLegalMoves","pathSealed","getMoveWithMoreTilesAwayFromExit","paths","getShortestPathBreadthFirstSearch","longestIndex","moveWithMore","prospectiveMove","hitTiles","shortestPath","nextPathMove","visitedTiles","iteration","newTiles","startIndex","removedObstacleArray","slice","addPathToArray","checkIfMoveWillBeHook","getTilesInEachDirection","currentTile","tilesInEachDirection","sign","ceil","directionTiles","lastThreeTiles","getLastSpecifiedAmountOfTiles","checkIfMoveArrayFormsHook","getSeriesOfDirectionsFromMoveArray","directions","unshift","findDirectionFromMove","numberOfTiles","reverse","moveArray","movesFormHook","startingTile","targetTile","possibleToReach","takenTiles","spreadInAllDirections","edges","getEdgeCoordinatesClockwiseOrder","splice","coordinates","mapHeaders","getStartingDirection","currentMoveDir","getEndingDirection","start","possibleStartDirections","getPossibleStartDirections","end","possibleEndDirections","getPossibleEndDirections","possibleDirections","dirs","railTypeArray","indices","getAllTwoByTwoDefaultIndices","getStartAndEndIndices","Set","defaultCoordinates","iterateThroughEachPossibleSquare","removeDefaultTilesWithMoreThanOneAdjacent","nonDefaultTrackTiles","getSquareDefaultCoordinates","concat","currentDefaultTiles","moreThanOneAdj","getAdjacentDefaultTileCount","adjTiles","xOffset","yOffset","getRandomNonDuplicateCoordinatesFromMatrix","filterForFullSquares","splitMapIntoSquares","squares","rec","checkIfSquareIsFull","tileCount","recTile","getTwoByTwoSquare","square","currentMove","moveDirection","moveOne","moveTwo","moveCalc","generateRandomRGBColor","minValue","r","g","colorToWhiteArray","hexColor","numberOfShades","colorArray","colorMatrix","colorStepValues","getColorStepValues","createColorMatrixByStep","replace","match","parseInt","Number","convertHexToRgbArray","value","toString","join","MapBackground","numberOfShapes","backgroundShapes","backgroundShapeStyle","backgroundColor","animation","Map","currentHoverTile","useRef","currentHoverTileClass","previousHoverTile","previousHoverTileClass","previousValueOfLeftClickTile","initialLeftClickValue","leftClickDragArray","rightClickDragValue","determineIfToPlaceT","placeTile","checkIfCurrentTileIsConnectedToLast","current","getConnectedAdjacentTracksDirections","adjTile","adjacentTracks","pushAdjTileIfExist","adjRail","getRailTypeOfCoordinate","checkIfTileIsDefault","getAdjacentTracks","adj","connectedDirection","undefined","placeMultipleTiles","newTileObjArray","async","newPlacedTrackArray","filterPlacedTracksOfNewTiles","setPlacedTracks","checkIfPlacedTilesAllCorrect","nonConflictingPlacedTracks","placedTracks","track","placedTrackConflict","removePlacedTrack","trackCoordinates","filteredTracks","trackDefaultTile","getAllDefaultTiles","defaultTileArr","getRowColumnFillstate","axis","defaultTiles","axisNum","placedTrackCount","tilesOnAxis","correctTileCount","winning","correctTile","placed","getCorrectTileCount","defaultTileCount","placedRailTrackCount","setGameCompleteState","activeMouseEventsObject","controlsActive","tileValue","setRightClickDragValue","determineRemoveOrPlaceX","placeTrackIfLeftClickNoDrag","hasChanged","checkIfHoverTileChanged","updateHoverTileState","hoverAdjacent","checkIfHoverToAdjacent","shift","newCorner","findIndex","calculateDragDirection","tilesToPlace","newCoordinate","dragDirection","connectedDirections","initialDirection","convertConnectedRailToCorner","getNewCornerTiles","railShouldChange","startType","nextCoordinate","shouldStartRailChange","placedDraggedTrack","hoverWhileHoldingLeftMouseButton","hoverWhileHoldingRightMouseButton","hoverWhileHoldingBothMouseButtons","senderClassname","emptyMouseEventsObject","renderHeadingTile","headerLabel","renderMapTile","railImage","mapSolutionVisible","placeCompletedMapTrack","defaultTile","defaultTilesHighlighted","defaultRailType","renderCompleteTrack","renderEmptyTile","placeGameActiveMapTrack","renderDefaultTrack","placeUserPlacedTrack","useEffect","mapComponents","generatedMapComponents","gameComplete","placeColumnHeader","placeRowHeader","mapVisible","placeMainMapTile","renderTransparentTile","generateMapComponents","WaveButton","onClick","hovered","setHoveredState","buttonPressed","btnDefaultStyle","overflow","cursor","borderRadius","outline","boxShadow","textStyle","rectangleStyle","rectangleArray","recCount","blueRecColors","purpleRecColors","curRecStyle","id","createRectangleArray","btnStyle","generateMapIcon","mapObject","complete","options","headers","dimensions","cutOut","generateCanvas","canvas","image","toDataURL","generateCompletedMapIcon","generateMapBackground","getRotationFromRailType","rotation","drawHeaderBox","drawHeaderBoxBackground","drawHeaderBoxText","getHeaderBoxText","cutOutBackgroundBox","context","clearRect","iconTileWidth","boxWidth","iconTileHeight","boxHeight","strokeRect","headerText","fillStyle","font","textAlign","textBaseline","fillText","fillRect","document","createElement","gridMapWidth","gridMapHeight","getContext","loadImage","curvedTrackImage","straightTrackImage","drawRotatedImage","save","translate","rotate","PI","drawImage","restore","drawStraightImage","imgURL","Promise","resolve","reject","img","Image","onload","onerror","src","getLocalStorageMaps","localMaps","JSON","parse","window","localStorage","getItem","Game","clipboard","gameWon","setGameWinState","mapSaveName","setMapSaveName","winPopUp","savePopUp","saveBoxCutOut","defaultHighlights","solutionVisible","display","setDisplay","gameState","balloonCount","balloonCloud","balloonContainer","delay","balloonStyle","animationDelay","renderWinDisplayBackground","onChange","mapToSave","newMapArray","setItem","stringify","saveMapToLocal","name","size","val","alt","draggable","select","execCommand","ref","readOnly","unselectable","resize","seed","inGameNewMap","quitGame","Dropdown","placeholder","onHover","listOpen","setListOpen","defaultValue","setDefaultValue","hoveredOption","setHoveredOption","containerStyle","lineHeight","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","listItemStyle","borderTop","addEventListener","whileDropdownOpenClick","removeEventListener","optionSelected","item","optionHovered","fontSize","right","dropDownList","renderDropDownList","DeleteMapConfirmScreen","deleteModeOnAll","mapIcon","console","log","deleteMapSeed","deleteLocalSavedMap","quitToLoadScreen","ReturnToMainMenuBtn","setCurrentScreen","renderSavedMapsDropdownValues","dropDownValues","pathFinding","LoadMapScreen","screenState","setScreenState","setMapIcon","setGameState","displaySavedGameMapIcon","active","HowToPlayScreen","maps","setMaps","emptyMap","completeMap","empty","getMaps","getMapSizeOptions","mapSizeOptions","mapSize","StartMapScreen","selectedMap","padding","type","checked","generateMap","AboutScreen","href","MainMenuScreen","App","currentScreen","mapSeedInput","getElementById","switchToScreen","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.22494a6a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const WhiteSquareBackground = (props) => {\n\tlet transitionSpeed;\n\tif (props.className === 'table-heading') transitionSpeed = 0;\n\tif (props.className === 'emptyTile') transitionSpeed = 1;\n\tif (props.className === 'transparentTile') transitionSpeed = 0;\n\n\treturn (\n\t\t<div\n\t\t\tclassName={'white-background'}\n\t\t\tstyle={{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '0',\n\t\t\t\tleft: '0',\n\t\t\t\theight: '100%',\n\t\t\t\twidth: '100%',\n\t\t\t\tbackground: 'white',\n\t\t\t\tzIndex: '-2',\n\t\t\t\ttransition: `opacity ${transitionSpeed}s`,\n\t\t\t\topacity:\n\t\t\t\t\tprops.className === 'table-heading' ||\n\t\t\t\t\tprops.className === 'emptyTile' ||\n\t\t\t\t\tprops.className === 'transparentTile'\n\t\t\t\t\t\t? '0'\n\t\t\t\t\t\t: '1'\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default WhiteSquareBackground;\n","import curvedtrack from '../../img/curvedtrack.png';\nimport straighttrack from '../../img/straighttrack.png';\n\nexport const convertDirectionArrayToRailTypes = (dirArr) => {\n\tlet previousTileRailType, currentHoverTileRailType;\n\n\tif (dirArr.length === 1) {\n\t\tif (dirArr[0] % 2 === 0) previousTileRailType = 'vertical';\n\t\tif (dirArr[0] % 2 === 1) previousTileRailType = 'horizontal';\n\n\t\tcurrentHoverTileRailType = previousTileRailType;\n\t}\n\tif (dirArr.length === 2) {\n\t\tif (dirArr[0] % 2 === 0 && dirArr[1] % 2 === 0) previousTileRailType = 'vertical';\n\t\tif (dirArr[0] % 2 === 1 && dirArr[1] % 2 === 1) previousTileRailType = 'horizontal';\n\n\t\tif ((dirArr[0] === 0 && dirArr[1] === 1) || (dirArr[0] === 3 && dirArr[1] === 2))\n\t\t\tpreviousTileRailType = 'bottomRightCorner';\n\t\tif ((dirArr[0] === 1 && dirArr[1] === 2) || (dirArr[0] === 0 && dirArr[1] === 3))\n\t\t\tpreviousTileRailType = 'bottomLeftCorner';\n\t\tif ((dirArr[0] === 2 && dirArr[1] === 3) || (dirArr[0] === 1 && dirArr[1] === 0))\n\t\t\tpreviousTileRailType = 'topLeftCorner';\n\t\tif ((dirArr[0] === 3 && dirArr[1] === 0) || (dirArr[0] === 2 && dirArr[1] === 1))\n\t\t\tpreviousTileRailType = 'topRightCorner';\n\n\t\tcurrentHoverTileRailType = dirArr[1] % 2 === 0 ? 'vertical' : 'horizontal';\n\t}\n\treturn [ previousTileRailType, currentHoverTileRailType ];\n};\n\nexport const convertRailTypeToTrackImage = (railType) => {\n\tlet trackData;\n\tswitch (railType) {\n\t\tcase 'vertical':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: straighttrack,\n\t\t\t\ttrackRotation: 0\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'horizontal':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: straighttrack,\n\t\t\t\ttrackRotation: 90\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'bottomLeftCorner':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: curvedtrack,\n\t\t\t\ttrackRotation: 0\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'topLeftCorner':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: curvedtrack,\n\t\t\t\ttrackRotation: 90\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'topRightCorner':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: curvedtrack,\n\t\t\t\ttrackRotation: 180\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'bottomRightCorner':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: curvedtrack,\n\t\t\t\ttrackRotation: 270\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'T':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: railType,\n\t\t\t\ttrackRotation: 'none'\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'X':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: railType,\n\t\t\t\ttrackRotation: 'none'\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttrackData = { trackType: 'none', trackRotation: 'none' };\n\t}\n\treturn trackData;\n};\n\nexport const convertButtonClassToRailType = (e) => {\n\tlet railType;\n\tif (e.target.classList.contains('axisButton')) {\n\t\tif (e.target.classList.contains('top') || e.target.classList.contains('bottom')) {\n\t\t\trailType = 'vertical';\n\t\t}\n\t\tif (e.target.classList.contains('right') || e.target.classList.contains('left')) {\n\t\t\trailType = 'horizontal';\n\t\t}\n\t}\n\tif (e.target.classList.contains('cornerButton')) {\n\t\tif (e.target.classList.contains('top-left')) {\n\t\t\trailType = 'topLeftCorner';\n\t\t}\n\t\tif (e.target.classList.contains('top-right')) {\n\t\t\trailType = 'topRightCorner';\n\t\t}\n\t\tif (e.target.classList.contains('bottom-left')) {\n\t\t\trailType = 'bottomLeftCorner';\n\t\t}\n\t\tif (e.target.classList.contains('bottom-right')) {\n\t\t\trailType = 'bottomRightCorner';\n\t\t}\n\t}\n\tif (e.target.classList.contains('centreButton')) {\n\t\trailType = 'T';\n\t}\n\treturn railType;\n};\n","import React from 'react';\n\nconst CornerButton = (props) => {\n\treturn <div className={`cornerButton ${props.corner}`} />;\n};\n\nconst AxisButton = (props) => {\n\treturn <div className={`axisButton ${props.edge}`} />;\n};\n\nconst CentreButton = () => {\n\treturn <div className={`centreButton`} />;\n};\n\nexport const TileButtons = (props) => {\n\tconst corners = [ 'top-left', 'top-right', 'bottom-left', 'bottom-right' ];\n\tconst edges = [ 'top', 'right', 'bottom', 'left' ];\n\treturn [\n\t\tcorners.map((el) => <CornerButton corner={el} key={el} />),\n\t\tedges.map((el) => <AxisButton edge={el} key={el} />),\n\t\t<CentreButton key={props.x} />\n\t];\n};\n","import React, { useState } from 'react';\nimport WhiteSquareBackground from './WhiteSquareBackground';\nimport { convertRailTypeToTrackImage, convertButtonClassToRailType } from '../utility/trackConversions';\nimport { TileButtons } from './TileButtons';\n\nexport const Square = (props) => {\n\tconst [ hoverTrack, setHoverTrack ] = useState({\n\t\ttile: '-',\n\t\trailType: '-'\n\t});\n\n\t///////////// SQUARE - MOUSE EVENTS FUNCTIONS /////////////\n\n\tfunction getMouseEventObject(e) {\n\t\tconst mouseEventObject = {\n\t\t\ttile: [ props.x, props.y ],\n\t\t\trailType: convertButtonClassToRailType(e),\n\t\t\ttileClass: getTileClassFromEvent(e),\n\t\t\tmouseButton: e.buttons\n\t\t};\n\t\treturn mouseEventObject;\n\t}\n\n\tfunction squareHoverStart(e) {\n\t\tconst mouseEventObject = getMouseEventObject(e);\n\t\tprops.hoverStartEvent(mouseEventObject);\n\t\tif (e.buttons === 0) {\n\t\t\tsetHoverGhostTrack(mouseEventObject);\n\t\t}\n\t}\n\n\tfunction squareHoverEnd(e) {\n\t\tconst tileClass = getTileClassFromEvent(e);\n\t\tremoveHoverGhostTrack();\n\t\tprops.hoverEndEvent(tileClass);\n\t}\n\n\tfunction squareMouseDown(e) {\n\t\tconst mouseEventObject = getMouseEventObject(e);\n\t\tif (mouseEventObject.mouseButton === 1) {\n\t\t\tprops.leftClickEvent(mouseEventObject);\n\t\t}\n\t\tif (mouseEventObject.mouseButton === 2) {\n\t\t\tprops.rightClickEvent(mouseEventObject);\n\t\t}\n\t\tif (mouseEventObject.mouseButton === 3) {\n\t\t\tprops.bothClickEvent(mouseEventObject);\n\t\t}\n\t}\n\n\tfunction squareMouseUp(e) {\n\t\tconst mouseEventObject = getMouseEventObject(e);\n\t\tif (e.button === 0) {\n\t\t\tprops.leftReleaseEvent(mouseEventObject);\n\t\t}\n\t\tif (e.button === 2) {\n\t\t\tprops.rightReleaseEvent();\n\t\t}\n\t}\n\n\t///////////// SQUARE - HOVER GHOST TRACK FUNCTIONS /////////////\n\n\tfunction setHoverGhostTrack(mouseEventObject) {\n\t\tsetHoverTrack({\n\t\t\ttile: mouseEventObject.tile,\n\t\t\trailType: mouseEventObject.railType\n\t\t});\n\t}\n\n\tfunction removeHoverGhostTrack() {\n\t\tsetHoverTrack({\n\t\t\ttile: '-',\n\t\t\trailType: '-'\n\t\t});\n\t}\n\n\t///////////// SQUARE - CLASSNAME CONVERSION FUNCTIONS /////////////\n\n\tfunction getTileClassFromEvent(e) {\n\t\tconst classList = e.currentTarget.className;\n\t\tlet tileClass;\n\t\tif (classList.includes('mapTile')) tileClass = 'mapTile';\n\t\tif (classList.includes('defaultTrack')) tileClass = 'defaultTrack';\n\t\tif (classList.includes('table-heading')) tileClass = 'table-heading';\n\t\treturn tileClass;\n\t}\n\n\t///////////// SQUARE - HEADING FUNCTIONS /////////////\n\n\tfunction convertFillStateToColor(fillState) {\n\t\tswitch (fillState) {\n\t\t\tcase 'underfilled':\n\t\t\t\treturn 'black';\n\t\t\tcase 'full':\n\t\t\t\treturn 'green';\n\t\t\tcase 'overfilled':\n\t\t\t\treturn 'red';\n\t\t\tdefault:\n\t\t\t\treturn 'black';\n\t\t}\n\t}\n\n\t///////////// SQUARE - RAIL IMAGE FUNCTIONS /////////////\n\n\tfunction setHoverTrackImage() {\n\t\tlet squareStyling, trackText;\n\t\tconst trackImage = convertRailTypeToTrackImage(hoverTrack.railType);\n\t\tif (trackImage.trackType !== 'T') {\n\t\t\tsquareStyling = {\n\t\t\t\tbackgroundImage: `url(${trackImage.trackType})`,\n\t\t\t\ttransform: `rotate(${trackImage.trackRotation}deg)`,\n\t\t\t\topacity: 0.5\n\t\t\t};\n\t\t} else {\n\t\t\ttrackText = trackImage.trackType;\n\t\t\tsquareStyling = {\n\t\t\t\topacity: 0.5\n\t\t\t};\n\t\t}\n\t\treturn [ squareStyling, trackText ];\n\t}\n\n\tfunction setPlacedTrackImage() {\n\t\tlet squareStyling, trackText;\n\t\tif (props.trackData.trackType !== 'T' && props.trackData.trackType !== 'X') {\n\t\t\tsquareStyling = {\n\t\t\t\tbackgroundImage: `url(${props.trackData.trackType})`,\n\t\t\t\ttransform: `rotate(${props.trackData.trackRotation}deg)`,\n\t\t\t\topacity: 1\n\t\t\t};\n\t\t} else {\n\t\t\ttrackText = props.trackData.trackType;\n\t\t\tsquareStyling = {\n\t\t\t\topacity: 1\n\t\t\t};\n\t\t}\n\t\treturn [ squareStyling, trackText ];\n\t}\n\n\tfunction setDefaultTrackImage() {\n\t\tlet squareStyling;\n\t\tsquareStyling = {\n\t\t\tbackgroundImage: `url(${props.trackData.trackType})`,\n\t\t\ttransform: `rotate(${props.trackData.trackRotation}deg)`,\n\t\t\topacity: 1,\n\t\t\tfilter: props.highlighted ? 'hue-rotate(200deg) saturate(10)' : 'none',\n\t\t\ttransition: 'filter 1s ease-in-out'\n\t\t};\n\t\treturn [ squareStyling, null ];\n\t}\n\n\t///////////// SQUARE - RENDER FUNCTIONS /////////////\n\n\tfunction squareIsHoverTile() {\n\t\treturn props.x === hoverTrack.tile[0] && props.y === hoverTrack.tile[1];\n\t}\n\n\tlet squareStyling, trackText, boxStyling;\n\n\tif (!props.trackData && squareIsHoverTile()) {\n\t\t[ squareStyling, trackText ] = setHoverTrackImage();\n\t}\n\n\tif (props.className === 'mapTile') {\n\t\tif (props.trackData) {\n\t\t\t[ squareStyling, trackText ] = setPlacedTrackImage();\n\t\t}\n\t}\n\n\tif (\n\t\t(props.trackData && props.className === 'defaultTrack') ||\n\t\t(props.trackData && props.className === 'completeTrack')\n\t) {\n\t\t[ squareStyling, trackText ] = setDefaultTrackImage();\n\t}\n\n\tif (props.className === 'transparentTile') {\n\t\tboxStyling = { border: 'none' };\n\t\tsquareStyling = { border: 'none' };\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`square ${props.className}`}\n\t\t\tonContextMenu={(e) => e.preventDefault()}\n\t\t\tonMouseOver={props.className !== 'table-heading' ? (e) => squareHoverStart(e) : null}\n\t\t\tonMouseLeave={props.className !== 'table-heading' ? (e) => squareHoverEnd(e) : null}\n\t\t\tonMouseDown={props.className !== 'table-heading' ? (e) => squareMouseDown(e) : null}\n\t\t\tonMouseUp={props.className !== 'table-heading' ? (e) => squareMouseUp(e) : null}\n\t\t>\n\t\t\t<div className={`tile-button-container`} style={boxStyling}>\n\t\t\t\t<TileButtons {...props} />\n\t\t\t\t<p className=\"boxLabel\" style={{ color: convertFillStateToColor(props.fillState) }}>\n\t\t\t\t\t{props.text}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div className={'tile-display'} style={squareStyling}>\n\t\t\t\t{trackText}\n\t\t\t</div>\n\t\t\t<WhiteSquareBackground {...props} />\n\t\t</div>\n\t);\n};\n\nexport default Square;\n","///UTILITY FUNCTIONS\n\nexport const randomIntFromInterval = (min, max) => {\n\treturn Math.floor(Math.random() * (max - min + 1) + min); // min and max included\n};\n\nexport const removeArrayValue = (array, value) => {\n\tif (isNonEmptyArray(array)) {\n\t\tconst index = array.indexOf(value);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t\treturn array;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport const findIndexOfArrayInMatrix = (array, matrix) => {\n\tlet index = -1;\n\tfor (let i = 0; i < matrix.length; i++) {\n\t\tif (compareArrays(array, matrix[i])) index = i;\n\t}\n\treturn index;\n};\n\nexport const compareArrays = (arr1, arr2) => {\n\tlet arrEqual = false;\n\tif (arr1.length === arr2.length) {\n\t\tarrEqual = arr1.every((v, i) => v === arr2[i]);\n\t}\n\treturn arrEqual;\n};\n\nexport const getIndexOfLongestArrayInMatrix = (matrix) => {\n\tlet index = -1;\n\tlet curMaxLength = 0;\n\tfor (let i = 0; i < matrix.length; i++) {\n\t\tif (matrix[i].length > curMaxLength) {\n\t\t\tindex = i;\n\t\t\tcurMaxLength = matrix[i].length;\n\t\t}\n\t}\n\treturn index;\n};\n\nexport const isNonEmptyArray = (array) => {\n\t//return false if equal to [] or data type other than array\n\treturn Array.isArray(array) && array.length > 0;\n};\n\nexport const print = (value) => {\n\tconsole.log(JSON.parse(JSON.stringify(value)));\n};\n\nexport const removeDuplicateArraysFromMatrix = (matrix) => {\n\treturn matrix.filter((el, loopIndex) => {\n\t\tconst elIndex = findIndexOfArrayInMatrix(el, matrix);\n\t\tif (loopIndex === elIndex) return true;\n\t\telse return false;\n\t});\n};\n\nexport const removeArraysFromMatrix = (arrays, matrix) => {\n\tarrays.forEach(function(arr) {\n\t\tmatrix = matrix.filter((el) => !compareArrays(el, arr));\n\t});\n\treturn matrix;\n};\n\nexport const getRandomSeed = () => {\n\treturn Math.floor(Math.random() * Math.pow(10, 15));\n};\n","import seedrandom from 'seedrandom';\n\nimport {\n\trandomIntFromInterval,\n\tcompareArrays,\n\tisNonEmptyArray,\n\tfindIndexOfArrayInMatrix,\n\tgetIndexOfLongestArrayInMatrix,\n\tremoveDuplicateArraysFromMatrix,\n\tremoveArraysFromMatrix\n} from '../utility/utilityFunctions';\n\nexport const generateNewMap = (mapWidth, mapHeight, mapSeed, pathFindingDisabled = false) => {\n\tseedrandom(mapSeed, { global: true });\n\n\tlet trainTrackMap = {\n\t\ttracks: [],\n\t\theaderLabels: []\n\t};\n\n\tconst allTiles = generateMapTiles();\n\tconst moveDirections = getDirectionOfEachMove(allTiles);\n\tconst railTypes = directionsToTrackRailType(moveDirections);\n\tconst defaultTilesIndices = generateDefaultTileIndices(allTiles);\n\n\ttrainTrackMap.headerLabels = generateMapHeaders(allTiles);\n\n\tfor (let i = 0; i < allTiles.length; i++) {\n\t\tlet isDefaultTrack = defaultTilesIndices.includes(i);\n\n\t\ttrainTrackMap.tracks.push({\n\t\t\ttile: allTiles[i],\n\t\t\trailType: railTypes[i],\n\t\t\tdefaultTrack: isDefaultTrack\n\t\t});\n\t}\n\treturn trainTrackMap;\n\n\tfunction generateMapTiles() {\n\t\tconst [ startCoordinate, endCoordinate ] = generateStartEndPoints();\n\t\tlet generatedTiles = [ startCoordinate ];\n\t\tlet mapComplete = false;\n\t\tlet lastMove = startCoordinate;\n\t\twhile (!mapComplete) {\n\t\t\tlet nextMove = newMove(lastMove, generatedTiles, endCoordinate);\n\t\t\tgeneratedTiles.push(nextMove);\n\t\t\tlastMove = nextMove;\n\t\t\tif (compareArrays(nextMove, endCoordinate)) {\n\t\t\t\tmapComplete = true;\n\t\t\t}\n\t\t}\n\t\treturn generatedTiles;\n\t}\n\n\tfunction getLegalMoves(coordinate, generatedTiles) {\n\t\tconst adjacentMoves = getAdjacentTiles(coordinate);\n\t\tlet legalMoves = removeOutOfBoundsMoves(adjacentMoves);\n\t\tlegalMoves = removeMovesToVisitedTiles(legalMoves, generatedTiles);\n\t\treturn legalMoves;\n\t}\n\n\tfunction getAdjacentTiles(coordinate) {\n\t\treturn Array(4).fill(coordinate).map((el, i) => [ el[0] + (i - 1) % 2, el[1] + (i - 2) % 2 ]);\n\t}\n\n\tfunction removeOutOfBoundsMoves(moves) {\n\t\treturn moves.filter((el) => el[0] >= 0 && el[1] >= 0 && el[0] < mapWidth && el[1] < mapHeight);\n\t}\n\n\tfunction removeMovesToVisitedTiles(moves, tiles) {\n\t\tlet legalMoves = moves.filter(function(move) {\n\t\t\tlet boo = false;\n\t\t\ttiles.forEach(function(remove) {\n\t\t\t\tif (compareArrays(move, remove)) {\n\t\t\t\t\tboo = true;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn !boo;\n\t\t});\n\t\treturn legalMoves;\n\t}\n\n\tfunction newMove(currentCoordinate, generatedTiles, endCoordinate) {\n\t\tlet nextMove;\n\t\tlet legalMoves = getLegalMoves(currentCoordinate, generatedTiles);\n\n\t\tif (checkIfOnlyLegalMoveIsExit(legalMoves, endCoordinate)) {\n\t\t\tnextMove = endCoordinate;\n\t\t} else {\n\t\t\tlegalMoves = legalMoves.filter((move) => checkIfPossibleToReachTarget(move, endCoordinate, generatedTiles));\n\t\t\tlegalMoves = mutateMoveArray(legalMoves, generatedTiles, endCoordinate);\n\t\t\tnextMove = legalMoves[randomIntFromInterval(0, legalMoves.length - 1)];\n\t\t}\n\t\treturn nextMove;\n\t}\n\n\tfunction checkIfOnlyLegalMoveIsExit(legalMoves, endCoordinate) {\n\t\treturn legalMoves.length === 1 && compareArrays(legalMoves[0], endCoordinate);\n\t}\n\n\tfunction mutateMoveArray(legalMoves, generatedTiles, endCoordinate) {\n\t\tlet moveMutateFunctions = [ removeSealingMoves, removeAroundExitMoves, removeHookMoves ];\n\n\t\tif (!pathFindingDisabled) moveMutateFunctions.push(removeMovesWithLessTilesFromExit);\n\n\t\tfor (let i = 0; i < moveMutateFunctions.length; i++) {\n\t\t\tlet currentFunc = moveMutateFunctions[i];\n\t\t\tlet mutatedMoveArray = currentFunc(legalMoves, generatedTiles, endCoordinate);\n\t\t\tif (!isNonEmptyArray(mutatedMoveArray)) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tlegalMoves = mutatedMoveArray;\n\t\t\t}\n\t\t}\n\t\treturn legalMoves;\n\t}\n\n\t////////////////////////////////////////////////////////////\n\t////////////////////// NEW SECTION /////////////////////////\n\t////////////////////////////////////////////////////////////\n\n\tfunction getSurroundingTiles(coordinate) {\n\t\tlet tileArray = [];\n\t\tfor (let a = -1; a <= 1; a++) {\n\t\t\tfor (let b = -1; b <= 1; b++) {\n\t\t\t\ttileArray.push([ coordinate[0] + a, coordinate[1] + b ]);\n\t\t\t}\n\t\t}\n\t\treturn tileArray;\n\t}\n\n\tfunction getTilesAdjacentAndExit(endCoordinate) {\n\t\tconst adjacentTiles = getAdjacentTiles(endCoordinate);\n\t\treturn removeOutOfBoundsMoves([ ...adjacentTiles, endCoordinate ]);\n\t}\n\n\tfunction getTilesSurroundingExit(endCoordinate) {\n\t\tconst adjacentTiles = getSurroundingTiles(endCoordinate);\n\t\treturn removeOutOfBoundsMoves([ ...adjacentTiles, endCoordinate ]);\n\t}\n\n\tfunction checkIfTilesAdjacent(tileOne, tileTwo) {\n\t\tconst adjacentTiles = getTilesAdjacentAndExit(tileTwo);\n\t\tconst tileIsAdjacent = findIndexOfArrayInMatrix(tileOne, adjacentTiles) !== -1;\n\t\treturn tileIsAdjacent;\n\t}\n\n\tfunction chooseSurroundOrAdjacentExitTiles(move, endCoordinate) {\n\t\tif (checkIfTilesAdjacent(move, endCoordinate)) {\n\t\t\treturn getTilesSurroundingExit(endCoordinate);\n\t\t} else {\n\t\t\treturn getTilesAdjacentAndExit(endCoordinate);\n\t\t}\n\t}\n\n\tfunction checkIfMoveIsAroundExitTile(move, endCoordinate) {\n\t\tconst tilesAroundExit = chooseSurroundOrAdjacentExitTiles(move, endCoordinate);\n\t\tlet moveIsAdjExit = false;\n\t\ttilesAroundExit.forEach(function(tile) {\n\t\t\tif (compareArrays(move, tile)) moveIsAdjExit = true;\n\t\t});\n\t\treturn moveIsAdjExit;\n\t}\n\n\tfunction removeAroundExitMoves(legalMoves, generatedTiles, endCoordinate) {\n\t\tlegalMoves = legalMoves.filter((move) => !checkIfMoveIsAroundExitTile(move, endCoordinate));\n\t\treturn legalMoves;\n\t}\n\n\tfunction removeSealingMoves(legalMoves, generatedTiles, endCoordinate) {\n\t\tif (!checkIfMapCovered(generatedTiles, 0.5)) {\n\t\t\tlegalMoves = legalMoves.filter((move) => !checkIfMoveSeals(move, generatedTiles, endCoordinate));\n\t\t}\n\t\treturn legalMoves;\n\t}\n\n\tfunction checkIfMapCovered(generatedTiles, modifier) {\n\t\tconst mapCoverage = modifier * mapWidth * mapHeight;\n\t\treturn generatedTiles.length >= mapCoverage;\n\t}\n\n\tfunction checkIfMoveSeals(move, generatedTiles, endCoordinate) {\n\t\tconst nextLegalMoves = getLegalMoves(move, generatedTiles);\n\t\tlet pathSealed = false;\n\t\tnextLegalMoves.forEach((nextMove) => {\n\t\t\tif (!checkIfPossibleToReachTarget(nextMove, endCoordinate, [ ...generatedTiles, move ])) {\n\t\t\t\tpathSealed = true;\n\t\t\t}\n\t\t});\n\t\treturn pathSealed;\n\t}\n\n\tfunction getMoveWithMoreTilesAwayFromExit(legalMoves, generatedTiles, endCoordinate) {\n\t\tlet paths = [];\n\t\tlegalMoves.forEach(function(el) {\n\t\t\tpaths.push(getShortestPathBreadthFirstSearch(el, endCoordinate, generatedTiles));\n\t\t});\n\t\tconst longestIndex = getIndexOfLongestArrayInMatrix(paths);\n\t\tconst moveForLongest = paths[longestIndex][0];\n\t\treturn moveForLongest;\n\t}\n\n\tfunction removeMovesWithLessTilesFromExit(legalMoves, generatedTiles, endCoordinate) {\n\t\tconst moveWithMore = getMoveWithMoreTilesAwayFromExit(legalMoves, generatedTiles, endCoordinate);\n\t\tif (isNonEmptyArray(moveWithMore)) return [ moveWithMore ];\n\t\telse return legalMoves;\n\t}\n\n\tfunction getShortestPathBreadthFirstSearch(prospectiveMove, target, hitTiles) {\n\t\tlet shortestPath;\n\t\tfunction nextPathMove(move, visitedTiles, target, iteration) {\n\t\t\tvisitedTiles.push(move);\n\t\t\tconst newTiles = getLegalMoves(move, visitedTiles);\n\t\t\tif (isNonEmptyArray(newTiles)) {\n\t\t\t\tnewTiles.forEach(function(el) {\n\t\t\t\t\titeration--;\n\t\t\t\t\tif (compareArrays(el, target)) addPathToArray(prospectiveMove, target, [ ...visitedTiles ]);\n\t\t\t\t\telse if (iteration > 0) nextPathMove(el, [ ...visitedTiles ], target, iteration);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction addPathToArray(prospectiveMove, target, visitedTiles) {\n\t\t\tconst startIndex = findIndexOfArrayInMatrix(prospectiveMove, visitedTiles);\n\t\t\tconst removedObstacleArray = visitedTiles.slice(startIndex);\n\t\t\tshortestPath = [ ...removedObstacleArray, target ];\n\t\t}\n\n\t\tlet i = 0;\n\t\twhile (!isNonEmptyArray(shortestPath)) {\n\t\t\ti++;\n\t\t\tnextPathMove(prospectiveMove, [ hitTiles ], target, i);\n\t\t}\n\t\treturn shortestPath;\n\t}\n\n\t////////////////////////////////////////////////////////////\n\t////////////////////////////////////////////////////////////\n\t////////////////////////////////////////////////////////////\n\n\tfunction removeHookMoves(legalMoves, generatedTiles, endCoordinate) {\n\t\tif (generatedTiles.length > 2) {\n\t\t\tlegalMoves = legalMoves.filter((move) => !checkIfMoveWillBeHook(move, generatedTiles));\n\t\t}\n\t\treturn legalMoves;\n\t}\n\n\t//Single goal but structure is obtuse and variable naming is vague\n\tfunction getTilesInEachDirection(currentTile, generatedTiles) {\n\t\tlet tilesInEachDirection = [];\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tlet sign = Math.ceil((i % 3) / 2) * 2 + 1; //\n\t\t\tlet lineTiles = generatedTiles.filter((tile) => tile[i % 2] === currentTile[i % 2]);\n\t\t\tlet directionTiles = lineTiles.filter(\n\t\t\t\t(tile) => tile[(i + 1) % 2] * -sign < currentTile[(i + 1) % 2] * -sign\n\t\t\t);\n\t\t\ttilesInEachDirection.push(directionTiles);\n\t\t}\n\t\treturn tilesInEachDirection;\n\t}\n\n\tfunction checkIfMoveWillBeHook(prospectiveMove, generatedTiles) {\n\t\tconst lastThreeTiles = getLastSpecifiedAmountOfTiles(3, generatedTiles);\n\t\tconst prospectiveLastFourTiles = [ prospectiveMove, ...lastThreeTiles ];\n\t\tconst dirArr = getSeriesOfDirectionsFromMoveArray(prospectiveLastFourTiles);\n\t\tlet wasHook = checkIfMoveArrayFormsHook(dirArr);\n\t\treturn wasHook;\n\t}\n\n\tfunction getSeriesOfDirectionsFromMoveArray(moves) {\n\t\tlet directions = [];\n\t\tfor (let i = 0; i < moves.length - 1; i++) {\n\t\t\tdirections.unshift(findDirectionFromMove(moves[i], moves[i + 1]));\n\t\t}\n\t\treturn directions;\n\t}\n\n\tfunction getLastSpecifiedAmountOfTiles(numberOfTiles, tiles) {\n\t\treturn tiles.slice(Math.max(tiles.length - numberOfTiles, 0)).reverse();\n\t}\n\n\tfunction checkIfMoveArrayFormsHook(moveArray) {\n\t\tlet movesFormHook = false;\n\t\tif (\n\t\t\tcompareArrays(moveArray, [ 0, 1, 2 ]) ||\n\t\t\tcompareArrays(moveArray, [ 1, 2, 3 ]) ||\n\t\t\tcompareArrays(moveArray, [ 2, 3, 0 ]) ||\n\t\t\tcompareArrays(moveArray, [ 3, 0, 1 ])\n\t\t) {\n\t\t\tmovesFormHook = true;\n\t\t}\n\t\tif (\n\t\t\tcompareArrays(moveArray, [ 3, 2, 1 ]) ||\n\t\t\tcompareArrays(moveArray, [ 2, 1, 0 ]) ||\n\t\t\tcompareArrays(moveArray, [ 1, 0, 3 ]) ||\n\t\t\tcompareArrays(moveArray, [ 0, 3, 2 ])\n\t\t) {\n\t\t\tmovesFormHook = true;\n\t\t}\n\t\treturn movesFormHook;\n\t}\n\n\tfunction checkIfPossibleToReachTarget(startingTile, targetTile, generatedTiles) {\n\t\tlet possibleToReach = false;\n\t\tif (compareArrays(startingTile, targetTile)) {\n\t\t\tpossibleToReach = true;\n\t\t} else {\n\t\t\tlet takenTiles = [ ...generatedTiles ];\n\t\t\ttakenTiles.push(spreadInAllDirections(startingTile, takenTiles));\n\t\t\ttakenTiles.forEach(function(el) {\n\t\t\t\tif (compareArrays(el, targetTile)) possibleToReach = true;\n\t\t\t});\n\t\t}\n\t\treturn possibleToReach;\n\t}\n\n\tfunction spreadInAllDirections(prospectiveMove, hitTiles) {\n\t\tconst newTiles = getLegalMoves(prospectiveMove, hitTiles);\n\t\tif (isNonEmptyArray(newTiles)) {\n\t\t\tnewTiles.forEach(function(el) {\n\t\t\t\thitTiles.push(el);\n\t\t\t\thitTiles.push(spreadInAllDirections(el, hitTiles));\n\t\t\t});\n\t\t}\n\t\treturn hitTiles;\n\t}\n\n\tfunction generateStartEndPoints() {\n\t\tlet edges = getEdgeCoordinatesClockwiseOrder();\n\t\tlet startCoordinate = edges.splice(Math.floor(Math.random() * edges.length), 1)[0];\n\t\tlet endCoordinate = edges.splice(Math.floor(Math.random() * edges.length), 1)[0];\n\t\treturn [ startCoordinate, endCoordinate ];\n\t}\n\n\tfunction getEdgeCoordinatesClockwiseOrder() {\n\t\tlet coordinates = [];\n\t\tfor (let x = 0; x < mapWidth - 1; x++) coordinates.push([ x, 0 ]); //top\n\t\tfor (let y = 0; y < mapHeight - 1; y++) coordinates.push([ mapWidth - 1, y ]); //right\n\t\tfor (let x = mapWidth - 1; x > 0; x--) coordinates.push([ x, mapHeight - 1 ]); //bottom\n\t\tfor (let y = mapHeight - 1; y > 0; y--) coordinates.push([ 0, y ]); //left\n\t\treturn coordinates;\n\t}\n\n\tfunction generateMapHeaders(allTiles) {\n\t\tlet mapHeaders = { x: [], y: [] };\n\t\tfor (let i = 0; i < mapWidth; i++) {\n\t\t\tmapHeaders.x.push(getTilesInEachDirection([ i, -1 ], allTiles)[2].length);\n\t\t}\n\t\tfor (let i = 0; i < mapHeight; i++) {\n\t\t\tmapHeaders.y.push(getTilesInEachDirection([ -1, i ], allTiles)[1].length);\n\t\t}\n\t\treturn mapHeaders;\n\t}\n\n\tfunction getDirectionOfEachMove(allTiles) {\n\t\tlet directions = [];\n\t\tdirections.push(getStartingDirection(allTiles[0]));\n\t\tfor (let i = 0; i < allTiles.length - 1; i++) {\n\t\t\tlet currentMoveDir = findDirectionFromMove(allTiles[i + 1], allTiles[i]);\n\t\t\tdirections.push(currentMoveDir);\n\t\t}\n\t\tdirections.push(getEndingDirection(allTiles[allTiles.length - 1]));\n\t\treturn directions;\n\t}\n\n\tfunction getStartingDirection(start) {\n\t\tconst possibleStartDirections = getPossibleStartDirections(start);\n\t\treturn possibleStartDirections[randomIntFromInterval(0, possibleStartDirections.length - 1)];\n\t}\n\n\tfunction getEndingDirection(end) {\n\t\tconst possibleEndDirections = getPossibleEndDirections(end);\n\t\treturn possibleEndDirections[randomIntFromInterval(0, possibleEndDirections.length - 1)];\n\t}\n\n\tfunction getPossibleStartDirections(start) {\n\t\tlet possibleDirections = [];\n\t\tif (start[0] === 0) possibleDirections.push(1); // comes in from left\n\t\tif (start[1] === 0) possibleDirections.push(2); // comes in from top\n\t\tif (start[0] === mapWidth - 1) possibleDirections.push(3); // comes in from right\n\t\tif (start[1] === mapHeight - 1) possibleDirections.push(0); // comes in from bottom\n\t\treturn possibleDirections;\n\t}\n\n\tfunction getPossibleEndDirections(end) {\n\t\tlet possibleDirections = [];\n\t\tif (end[0] === 0) possibleDirections.push(3); // leaves via left\n\t\tif (end[1] === 0) possibleDirections.push(0); // leaves via top\n\t\tif (end[0] === mapWidth - 1) possibleDirections.push(1); // leaves via right\n\t\tif (end[1] === mapHeight - 1) possibleDirections.push(2); // leaves via bottom\n\t\treturn possibleDirections;\n\t}\n\n\tfunction directionsToTrackRailType(dirs) {\n\t\tlet railTypeArray = [];\n\t\tfor (let i = 0; i < dirs.length; i++) {\n\t\t\tif ((dirs[i] === 0 && dirs[i + 1] === 0) || (dirs[i] === 2 && dirs[i + 1] === 2))\n\t\t\t\trailTypeArray.push('vertical');\n\t\t\tif ((dirs[i] === 1 && dirs[i + 1] === 1) || (dirs[i] === 3 && dirs[i + 1] === 3))\n\t\t\t\trailTypeArray.push('horizontal');\n\t\t\tif ((dirs[i] === 2 && dirs[i + 1] === 1) || (dirs[i] === 3 && dirs[i + 1] === 0))\n\t\t\t\trailTypeArray.push('topRightCorner');\n\t\t\tif ((dirs[i] === 3 && dirs[i + 1] === 2) || (dirs[i] === 0 && dirs[i + 1] === 1))\n\t\t\t\trailTypeArray.push('bottomRightCorner');\n\t\t\tif ((dirs[i] === 0 && dirs[i + 1] === 3) || (dirs[i] === 1 && dirs[i + 1] === 2))\n\t\t\t\trailTypeArray.push('bottomLeftCorner');\n\t\t\tif ((dirs[i] === 1 && dirs[i + 1] === 0) || (dirs[i] === 2 && dirs[i + 1] === 3))\n\t\t\t\trailTypeArray.push('topLeftCorner');\n\t\t}\n\t\treturn railTypeArray;\n\t}\n\n\tfunction generateDefaultTileIndices(allTiles) {\n\t\tlet indices = [];\n\t\tindices.push(...getAllTwoByTwoDefaultIndices(allTiles));\n\t\tindices.push(...getStartAndEndIndices(allTiles));\n\t\treturn [ ...new Set(indices) ];\n\t}\n\n\tfunction getStartAndEndIndices(allTiles) {\n\t\treturn [ 0, allTiles.length - 1 ];\n\t}\n\n\tfunction getAllTwoByTwoDefaultIndices(allTiles) {\n\t\tlet defaultCoordinates = iterateThroughEachPossibleSquare(allTiles);\n\t\tdefaultCoordinates = removeDefaultTilesWithMoreThanOneAdjacent(defaultCoordinates);\n\t\tconst defaultIndices = defaultCoordinates.map((el) => findIndexOfArrayInMatrix(el, allTiles));\n\t\treturn defaultIndices;\n\t}\n\n\tfunction iterateThroughEachPossibleSquare() {\n\t\tlet nonDefaultTrackTiles = allTiles;\n\t\tlet defaultCoordinates = [];\n\t\tfor (let y = 0; y < 2; y++) {\n\t\t\tfor (let x = 0; x < 2; x++) {\n\t\t\t\tconst coordinates = getSquareDefaultCoordinates(nonDefaultTrackTiles, x, y);\n\t\t\t\tdefaultCoordinates.push(coordinates);\n\t\t\t\tnonDefaultTrackTiles = removeArraysFromMatrix(coordinates, allTiles);\n\t\t\t}\n\t\t}\n\t\treturn [].concat(...defaultCoordinates);\n\t}\n\n\tfunction removeDefaultTilesWithMoreThanOneAdjacent(defaultCoordinates) {\n\t\tlet currentDefaultTiles = [ ...defaultCoordinates ];\n\t\treturn defaultCoordinates.filter(function(tile) {\n\t\t\tconst adjDefTileCount = getAdjacentDefaultTileCount(tile, currentDefaultTiles);\n\t\t\tconst moreThanOneAdj = adjDefTileCount > 1;\n\t\t\tif (moreThanOneAdj) currentDefaultTiles = removeArraysFromMatrix([ tile ], currentDefaultTiles);\n\t\t\treturn !moreThanOneAdj;\n\t\t});\n\t}\n\n\tfunction getAdjacentDefaultTileCount(tile, currentDefaultTiles) {\n\t\tconst adjTiles = getAdjacentTiles(tile);\n\t\tconst nonDefTiles = removeArraysFromMatrix(currentDefaultTiles, adjTiles);\n\t\treturn 4 - nonDefTiles.length;\n\t}\n\n\tfunction getSquareDefaultCoordinates(nonDefaultTrackTiles, xOffset, yOffset) {\n\t\tconst squares = splitMapIntoSquares(xOffset, yOffset);\n\t\tconst fullSquares = filterForFullSquares(nonDefaultTrackTiles, squares);\n\t\tconst defaultCoordinates = getRandomNonDuplicateCoordinatesFromMatrix(fullSquares);\n\t\treturn defaultCoordinates;\n\t}\n\n\tfunction getRandomNonDuplicateCoordinatesFromMatrix(matrix) {\n\t\tconst coordinates = matrix.map((el) => el[randomIntFromInterval(0, el.length - 1)]);\n\t\treturn removeDuplicateArraysFromMatrix(coordinates);\n\t}\n\n\tfunction filterForFullSquares(allTiles, squares) {\n\t\tconst fullSquares = squares.filter((rec) => checkIfSquareIsFull(rec, allTiles));\n\t\treturn fullSquares;\n\t}\n\n\tfunction checkIfSquareIsFull(rec, allTiles) {\n\t\tlet tileCount = 0;\n\t\trec.forEach(function(recTile) {\n\t\t\tallTiles.forEach(function(tile) {\n\t\t\t\tif (compareArrays(recTile, tile)) tileCount++;\n\t\t\t});\n\t\t});\n\t\treturn tileCount === 4;\n\t}\n\n\tfunction splitMapIntoSquares(xOffset, yOffset) {\n\t\tlet squares = [];\n\t\tfor (let y = yOffset; y < mapHeight - 1 - yOffset; y += 2) {\n\t\t\tfor (let x = xOffset; x < mapWidth - 1 - xOffset; x += 2) {\n\t\t\t\tsquares.push(getTwoByTwoSquare(x, y));\n\t\t\t}\n\t\t}\n\t\treturn squares;\n\t}\n\n\tfunction getTwoByTwoSquare(x, y) {\n\t\tlet square = [];\n\t\tfor (let b = 0; b < 2; b++) {\n\t\t\tfor (let a = 0; a < 2; a++) {\n\t\t\t\tsquare.push([ a + x, b + y ]);\n\t\t\t}\n\t\t}\n\t\treturn square;\n\t}\n};\n\nexport const findDirectionFromMove = (currentMove, lastMove) => {\n\tlet moveDirection;\n\tconst moveCalc = differenceBetweenTwoMoves(currentMove, lastMove);\n\tif (compareArrays(moveCalc, [ 0, -1 ])) moveDirection = 0; //= 'up';\n\tif (compareArrays(moveCalc, [ 1, 0 ])) moveDirection = 1; //= 'right';\n\tif (compareArrays(moveCalc, [ 0, 1 ])) moveDirection = 2; //= 'down';\n\tif (compareArrays(moveCalc, [ -1, 0 ])) moveDirection = 3; //= 'left';\n\treturn moveDirection;\n};\n\nfunction differenceBetweenTwoMoves(moveOne, moveTwo) {\n\treturn [ moveOne[0] - moveTwo[0], moveOne[1] - moveTwo[1] ];\n}\n","import { randomIntFromInterval } from './utilityFunctions';\n\nexport const generateRandomRGBColor = () => {\n\tlet minValue = 100;\n\tconst modAmount = 0.8;\n\tconst r = randomIntFromInterval(minValue, 255);\n\tr > 255 - minValue / 2 ? (minValue *= modAmount) : (minValue /= modAmount);\n\tconst g = randomIntFromInterval(minValue, 255);\n\tg > 255 - minValue / 2 ? (minValue *= modAmount) : (minValue /= modAmount);\n\tconst b = randomIntFromInterval(minValue, 255);\n\treturn `rgb(${[ r, g, b ]})`;\n};\n\nexport const colorToWhiteArray = (hexColor, numberOfShades) => {\n\tconst colorArray = convertHexToRgbArray(hexColor);\n\tconst colorMatrix = createColorMatrixByStep(colorArray, Math.ceil(numberOfShades));\n\treturn colorMatrix.map((el) => convertRgbArrayToHex(el));\n};\n\nfunction convertHexToRgbArray(hexColor) {\n\tconst parseStringAsArray = hexColor.replace('#', '').match(/.{1,2}/g);\n\treturn parseStringAsArray.map((el) => parseInt(Number(`0x${el}`), 10));\n}\n\nfunction convertRgbArrayToHex(rgbArray) {\n\tconst hexCode = rgbArray\n\t\t.map(function(el) {\n\t\t\tconst value = el.toString(16);\n\t\t\tif (value === '0') return '00';\n\t\t\telse return value;\n\t\t})\n\t\t.join('');\n\treturn '#' + hexCode;\n}\n\nfunction getColorStepValues(colorArray, numberOfShades) {\n\treturn colorArray.map((el) => (255 - el) / (numberOfShades - 1));\n}\n\nfunction createColorMatrixByStep(colorArray, numberOfShades) {\n\tlet colorMatrix = [];\n\tconst colorStepValues = getColorStepValues(colorArray, numberOfShades);\n\tfor (let iteration = 0; iteration < numberOfShades; iteration++) {\n\t\tconst color = colorArray.map((el, index) => Math.floor(el + iteration * colorStepValues[index]));\n\t\tcolorMatrix.push(color);\n\t}\n\treturn colorMatrix;\n}\n","import React from 'react';\n\nimport { colorToWhiteArray } from '../utility/colorFunctions';\n\nexport const MapBackground = (props) => {\n\tconst numberOfShapes = 20;\n\tconst colorArray = colorToWhiteArray('#b19cd9', numberOfShapes + 1);\n\tlet backgroundShapes = [];\n\tfor (let i = 0; i < numberOfShapes; i++) {\n\t\tconst backgroundShapeStyle = {\n\t\t\tbackgroundColor: colorArray[i],\n\t\t\tanimation: `spin ${15 + 0.25 * (i + 1)}s infinite linear`,\n\t\t\theight: `${100 - 4 * i}%`,\n\t\t\twidth: `${100 - 4 * i}%`\n\t\t};\n\t\tbackgroundShapes.push(<div key={i} className=\"mapBackgroundShape\" style={backgroundShapeStyle} />);\n\t}\n\treturn <div className=\"mapBackgroundContainer\">{backgroundShapes}</div>;\n};\n\nexport default MapBackground;\n","import React, { useRef, useEffect } from 'react';\n\nimport Square from './square';\n\nimport { compareArrays, isNonEmptyArray } from '../utility/utilityFunctions';\nimport { convertDirectionArrayToRailTypes, convertRailTypeToTrackImage } from '../utility/trackConversions';\n\nimport { findDirectionFromMove } from '../generation/generateMap';\n\nimport MapBackground from '../render/mapBackground';\n\nexport const Map = (props) => {\n\tconst currentHoverTile = useRef([ null, null ]);\n\tconst currentHoverTileClass = useRef();\n\tconst previousHoverTile = useRef();\n\tconst previousHoverTileClass = useRef();\n\tconst previousValueOfLeftClickTile = useRef();\n\tconst initialLeftClickValue = useRef();\n\tconst leftClickDragArray = useRef();\n\tconst rightClickDragValue = useRef();\n\n\t///////////// MAP - MOUSE EVENTS FUNCTIONS /////////////\n\n\tfunction leftClickEvent(mouseEventObject) {\n\t\tpreviousValueOfLeftClickTile.current = getRailTypeOfCoordinate(mouseEventObject.tile);\n\t\tinitialLeftClickValue.current = mouseEventObject;\n\t\tleftClickDragArray.current = [ null, null, mouseEventObject.tile ];\n\t}\n\n\tfunction rightClickEvent(mouseEventObject) {\n\t\tsetRightClickDragValue(mouseEventObject);\n\t\tdetermineRemoveOrPlaceX(mouseEventObject);\n\t}\n\n\tfunction bothClickEvent(mouseEventObject) {\n\t\tdetermineIfToPlaceT(mouseEventObject);\n\t}\n\n\tfunction setRightClickDragValue(mouseEventObject) {\n\t\tconst tileValue = getRailTypeOfCoordinate(mouseEventObject.tile);\n\t\trightClickDragValue.current = tileValue === null ? 'X' : 'DELETE';\n\t}\n\n\tfunction determineRemoveOrPlaceX(mouseEventObject) {\n\t\tif (mouseEventObject.tileClass === 'mapTile') {\n\t\t\tif (getRailTypeOfCoordinate(mouseEventObject.tile)) {\n\t\t\t\tremovePlacedTrack(mouseEventObject.tile);\n\t\t\t} else {\n\t\t\t\tplaceTile(mouseEventObject.tile, rightClickDragValue.current);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction leftReleaseEvent(mouseEventObject) {\n\t\tif (isNonEmptyArray(leftClickDragArray.current)) {\n\t\t\tplaceTrackIfLeftClickNoDrag(mouseEventObject);\n\t\t\tleftClickDragArray.current = [];\n\t\t}\n\t}\n\n\tfunction rightReleaseEvent() {\n\t\trightClickDragValue.current = undefined;\n\t}\n\n\tfunction checkIfHoverTileChanged(mouseEventObject) {\n\t\tlet hasChanged = false;\n\t\tif (!compareArrays(mouseEventObject.tile, currentHoverTile.current)) {\n\t\t\thasChanged = true;\n\t\t}\n\t\treturn hasChanged;\n\t}\n\n\tfunction updateHoverTileState(mouseEventObject) {\n\t\tpreviousHoverTile.current = currentHoverTile.current;\n\t\tcurrentHoverTile.current = mouseEventObject.tile;\n\t\tcurrentHoverTileClass.current = mouseEventObject.tileClass;\n\t}\n\n\tfunction placeTrackIfLeftClickNoDrag(mouseEventObject) {\n\t\tif (\n\t\t\tcompareArrays(initialLeftClickValue.current.tile, currentHoverTile.current) &&\n\t\t\tmouseEventObject.tileClass === 'mapTile'\n\t\t) {\n\t\t\tplaceTile(mouseEventObject.tile, mouseEventObject.railType);\n\t\t}\n\t}\n\n\tfunction hoverStartEvent(mouseEventObject) {\n\t\tif (checkIfHoverTileChanged(mouseEventObject)) {\n\t\t\tupdateHoverTileState(mouseEventObject);\n\t\t\tif (mouseEventObject.mouseButton === 1 && checkIfHoverToAdjacent()) {\n\t\t\t\thoverWhileHoldingLeftMouseButton(mouseEventObject);\n\t\t\t}\n\t\t\tif (mouseEventObject.mouseButton === 2) {\n\t\t\t\thoverWhileHoldingRightMouseButton(mouseEventObject);\n\t\t\t}\n\t\t\tif (mouseEventObject.mouseButton === 3) {\n\t\t\t\thoverWhileHoldingBothMouseButtons(mouseEventObject);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction checkIfHoverToAdjacent() {\n\t\tlet hoverAdjacent = true;\n\t\tif (currentHoverTile.current[0] > previousHoverTile.current[0] + 1) {\n\t\t\thoverAdjacent = false;\n\t\t}\n\t\tif (currentHoverTile.current[0] < previousHoverTile.current[0] - 1) {\n\t\t\thoverAdjacent = false;\n\t\t}\n\t\tif (currentHoverTile.current[1] > previousHoverTile.current[1] + 1) {\n\t\t\thoverAdjacent = false;\n\t\t}\n\t\tif (currentHoverTile.current[1] < previousHoverTile.current[1] - 1) {\n\t\t\thoverAdjacent = false;\n\t\t}\n\t\treturn hoverAdjacent;\n\t}\n\n\tfunction hoverEndEvent(senderClassname) {\n\t\tpreviousHoverTileClass.current = senderClassname;\n\t}\n\n\tfunction hoverWhileHoldingLeftMouseButton(mouseEventObject) {\n\t\tif (isNonEmptyArray(leftClickDragArray.current)) {\n\t\t\tleftClickDragArray.current.shift();\n\t\t\tleftClickDragArray.current.push(mouseEventObject.tile);\n\t\t\tplacedDraggedTrack(mouseEventObject.tile);\n\t\t}\n\t}\n\n\tfunction hoverWhileHoldingRightMouseButton(mouseEventObject) {\n\t\tif (rightClickDragValue.current === 'X') {\n\t\t\tif (mouseEventObject.tileClass === 'mapTile') {\n\t\t\t\tplaceTile(mouseEventObject.tile, rightClickDragValue.current);\n\t\t\t}\n\t\t} else if (rightClickDragValue.current === 'DELETE') {\n\t\t\tremovePlacedTrack(mouseEventObject.tile);\n\t\t}\n\t}\n\n\tfunction hoverWhileHoldingBothMouseButtons(mouseEventObject) {\n\t\tdetermineIfToPlaceT(mouseEventObject);\n\t}\n\n\tfunction determineIfToPlaceT(mouseEventObject) {\n\t\tif (mouseEventObject.mouseButton === 3) {\n\t\t\tif (mouseEventObject.tileClass === 'mapTile') {\n\t\t\t\tplaceTile(mouseEventObject.tile, 'T');\n\t\t\t}\n\t\t}\n\t}\n\n\t///////////// MAP - MOUSE DRAG CONTROL FUNCTIONS /////////////\n\n\t// Needs to be refactored, far too long\n\tfunction placedDraggedTrack(coordinate) {\n\t\tconst directions = calculateDragDirection();\n\t\tconst railType = convertDirectionArrayToRailTypes(directions);\n\n\t\tlet tilesToPlace = [];\n\n\t\tlet newCorner;\n\t\t//Only change tile to new corner if on first drag\n\t\tif (compareArrays(previousHoverTile.current, initialLeftClickValue.current.tile)) {\n\t\t\tnewCorner = convertConnectedRailToCorner(coordinate);\n\t\t}\n\t\tif (isNonEmptyArray(newCorner)) {\n\t\t\ttilesToPlace.unshift(...getNewCornerTiles(newCorner));\n\t\t} else {\n\t\t\tif (previousHoverTileClass.current === 'mapTile') {\n\t\t\t\tlet railShouldChange = shouldStartRailChange(\n\t\t\t\t\tpreviousValueOfLeftClickTile.current,\n\t\t\t\t\tinitialLeftClickValue.current.tile,\n\t\t\t\t\tcoordinate\n\t\t\t\t);\n\t\t\t\t//Only replaces first coordinate if no tile present, but maintains snaking movement on later drags\n\n\t\t\t\tif (checkIfNotFirstDragTile() || checkIfFirstDragTileIsEmptyOrT() || railShouldChange) {\n\t\t\t\t\ttilesToPlace.unshift({ tile: previousHoverTile.current, railType: railType[0] });\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (currentHoverTileClass.current === 'mapTile' && !checkIfCurrentTileIsConnectedToLast()) {\n\t\t\t\ttilesToPlace.unshift({ tile: currentHoverTile.current, railType: railType[1] });\n\t\t\t}\n\t\t}\n\t\tplaceMultipleTiles(tilesToPlace);\n\t}\n\n\tfunction checkIfCurrentTileIsConnectedToLast() {\n\t\tlet moveDirection = findDirectionFromMove(previousHoverTile.current, currentHoverTile.current);\n\t\tlet connectedDirections = getConnectedAdjacentTracksDirections(previousHoverTile.current);\n\t\tlet connection = connectedDirections.includes(moveDirection);\n\t\treturn connection;\n\t}\n\n\tfunction checkIfFirstDragTileIsEmptyOrT() {\n\t\treturn !previousValueOfLeftClickTile.current || previousValueOfLeftClickTile.current === 'T';\n\t}\n\n\tfunction checkIfNotFirstDragTile() {\n\t\treturn !compareArrays(previousHoverTile.current, initialLeftClickValue.current.tile);\n\t}\n\n\tfunction getNewCornerTiles(newCorner) {\n\t\tlet tilesToPlace = [];\n\t\tif (previousHoverTileClass.current === 'mapTile') {\n\t\t\ttilesToPlace.unshift({ tile: previousHoverTile.current, railType: newCorner[0] });\n\t\t}\n\t\tif (currentHoverTileClass.current === 'mapTile' && !checkIfCurrentTileIsConnectedToLast()) {\n\t\t\ttilesToPlace.unshift({ tile: currentHoverTile.current, railType: newCorner[1] });\n\t\t}\n\t\treturn tilesToPlace;\n\t}\n\n\tfunction shouldStartRailChange(startType, startCoordinate, nextCoordinate) {\n\t\tlet railShouldChange = false;\n\t\tswitch (findDirectionFromMove(nextCoordinate, startCoordinate)) {\n\t\t\tcase 0:\n\t\t\t\tif (\n\t\t\t\t\tstartType === 'bottomLeftCorner' ||\n\t\t\t\t\tstartType === 'bottomRightCorner' ||\n\t\t\t\t\tstartType === 'horizontal'\n\t\t\t\t) {\n\t\t\t\t\trailShouldChange = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tif (startType === 'bottomLeftCorner' || startType === 'topLeftCorner' || startType === 'vertical') {\n\t\t\t\t\trailShouldChange = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tif (startType === 'topLeftCorner' || startType === 'topRightCorner' || startType === 'horizontal') {\n\t\t\t\t\trailShouldChange = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tif (startType === 'bottomRightCorner' || startType === 'topRightCorner' || startType === 'vertical') {\n\t\t\t\t\trailShouldChange = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t\treturn railShouldChange;\n\t}\n\n\tfunction convertConnectedRailToCorner(newCoordinate) {\n\t\tconst dragDirection = findDirectionFromMove(newCoordinate, previousHoverTile.current);\n\t\tlet connectedDirections = getConnectedAdjacentTracksDirections(previousHoverTile.current);\n\t\tif (isNonEmptyArray(connectedDirections)) {\n\t\t\tconst initialDirection = connectedDirections[randomInt(0, connectedDirections.length - 1)];\n\t\t\tconst directions = [ initialDirection, dragDirection ];\n\t\t\treturn convertDirectionArrayToRailTypes(directions);\n\t\t}\n\t}\n\n\tfunction getConnectedAdjacentTracksDirections(coordinate) {\n\t\t//checks which tiles are pointing towards the dragged tile\n\t\tconst adjacentTracks = getAdjacentTracks(coordinate);\n\t\tconst connectedDirectionArray = adjacentTracks\n\t\t\t.map(function(adj) {\n\t\t\t\tlet connectedDirection;\n\t\t\t\tif (adj.position === 0) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tadj.railType === 'vertical' ||\n\t\t\t\t\t\tadj.railType === 'bottomLeftCorner' ||\n\t\t\t\t\t\tadj.railType === 'bottomRightCorner'\n\t\t\t\t\t) {\n\t\t\t\t\t\tconnectedDirection = 2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (adj.position === 3) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tadj.railType === 'horizontal' ||\n\t\t\t\t\t\tadj.railType === 'bottomRightCorner' ||\n\t\t\t\t\t\tadj.railType === 'topRightCorner'\n\t\t\t\t\t) {\n\t\t\t\t\t\tconnectedDirection = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (adj.position === 2) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tadj.railType === 'vertical' ||\n\t\t\t\t\t\tadj.railType === 'topLeftCorner' ||\n\t\t\t\t\t\tadj.railType === 'topRightCorner'\n\t\t\t\t\t) {\n\t\t\t\t\t\tconnectedDirection = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (adj.position === 1) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tadj.railType === 'horizontal' ||\n\t\t\t\t\t\tadj.railType === 'topLeftCorner' ||\n\t\t\t\t\t\tadj.railType === 'bottomLeftCorner'\n\t\t\t\t\t) {\n\t\t\t\t\t\tconnectedDirection = 3;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn connectedDirection;\n\t\t\t})\n\t\t\t.filter((el) => el !== undefined);\n\t\treturn connectedDirectionArray;\n\t}\n\n\tfunction getAdjacentTracks(coordinate) {\n\t\tlet adjacentTracks = [];\n\t\tlet adjTile;\n\n\t\tconst pushAdjTileIfExist = (adjTile, position) => {\n\t\t\tlet adjRail = getRailTypeOfCoordinate(adjTile);\n\t\t\tif (!adjRail) adjRail = checkIfTileIsDefault(props.trainTrackMap, adjTile[0], adjTile[1]);\n\t\t\tif (adjRail) {\n\t\t\t\tadjacentTracks.push({\n\t\t\t\t\ttile: adjTile,\n\t\t\t\t\trailType: adjRail,\n\t\t\t\t\tposition\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tif (coordinate[0] > 0) {\n\t\t\tadjTile = [ coordinate[0] - 1, coordinate[1] ];\n\t\t\tpushAdjTileIfExist(adjTile, 3);\n\t\t}\n\t\tif (coordinate[0] < props.mapWidth) {\n\t\t\tadjTile = [ coordinate[0] + 1, coordinate[1] ];\n\t\t\tpushAdjTileIfExist(adjTile, 1);\n\t\t}\n\t\tif (coordinate[1] > 0) {\n\t\t\tadjTile = [ coordinate[0], coordinate[1] - 1 ];\n\t\t\tpushAdjTileIfExist(adjTile, 0);\n\t\t}\n\t\tif (coordinate[1] < props.mapHeight) {\n\t\t\tadjTile = [ coordinate[0], coordinate[1] + 1 ];\n\t\t\tpushAdjTileIfExist(adjTile, 2);\n\t\t}\n\n\t\treturn adjacentTracks;\n\t}\n\n\tfunction calculateDragDirection() {\n\t\tlet directions = [];\n\t\tconst tiles = leftClickDragArray.current;\n\t\tconst numberOfNulls = tiles.findIndex((el) => el !== null);\n\t\tfor (let i = numberOfNulls; i < tiles.length - 1; i++) {\n\t\t\tdirections.push(findDirectionFromMove(tiles[i + 1], tiles[i]));\n\t\t}\n\t\treturn directions;\n\t}\n\n\t///////////// MAP - TRACK PLACEMENT FUNCTIONS /////////////\n\n\tfunction placeTile(coordinate, value) {\n\t\tconst trackSquareInfo = {\n\t\t\ttile: coordinate,\n\t\t\trailType: value\n\t\t};\n\t\tplaceMultipleTiles([ trackSquareInfo ]);\n\t}\n\n\tasync function placeMultipleTiles(newTileObjArray) {\n\t\tlet newPlacedTrackArray = filterPlacedTracksOfNewTiles(newTileObjArray);\n\t\tnewTileObjArray.forEach(function(el) {\n\t\t\tif (el.railType) newPlacedTrackArray.push(el);\n\t\t});\n\t\tawait props.setPlacedTracks(newPlacedTrackArray);\n\t\tawait checkIfPlacedTilesAllCorrect(props.trainTrackMap);\n\t}\n\n\tfunction filterPlacedTracksOfNewTiles(newTiles) {\n\t\tlet nonConflictingPlacedTracks = [];\n\t\tprops.placedTracks.forEach(function(track) {\n\t\t\tlet placedTrackConflict = false;\n\t\t\tnewTiles.forEach(function(el) {\n\t\t\t\tif (compareArrays(track.tile, el.tile)) placedTrackConflict = true;\n\t\t\t});\n\t\t\tif (!placedTrackConflict) nonConflictingPlacedTracks.push(track);\n\t\t});\n\t\treturn nonConflictingPlacedTracks;\n\t}\n\n\tasync function removePlacedTrack(trackCoordinates) {\n\t\tconst filteredTracks = props.placedTracks.filter(function(track) {\n\t\t\treturn !(track.tile[0] === trackCoordinates[0] && track.tile[1] === trackCoordinates[1]);\n\t\t});\n\t\tawait props.setPlacedTracks(filteredTracks);\n\t\tawait checkIfPlacedTilesAllCorrect(props.trainTrackMap);\n\t}\n\n\t///////////// MAP - RETRIEVAL FUNCTIONS /////////////\n\n\tfunction getRailTypeOfCoordinate(trackCoordinates) {\n\t\tlet railType = null;\n\t\tprops.placedTracks.forEach(function(el) {\n\t\t\tif (el.tile[0] === trackCoordinates[0] && el.tile[1] === trackCoordinates[1]) railType = el.railType;\n\t\t});\n\t\treturn railType;\n\t}\n\n\tfunction checkIfTileIsDefault(trainTrackMap, x, y) {\n\t\tlet trackDefaultTile = null;\n\t\ttrainTrackMap.tracks.forEach(function(el) {\n\t\t\tif (el.tile[0] === x && el.tile[1] === y && el.defaultTrack) trackDefaultTile = el.railType;\n\t\t});\n\t\treturn trackDefaultTile;\n\t}\n\n\tfunction getAllDefaultTiles(trainTrackMap) {\n\t\tlet defaultTileArr = [];\n\t\ttrainTrackMap.tracks.forEach(function(el) {\n\t\t\tif (el.defaultTrack) defaultTileArr.push(el);\n\t\t});\n\t\treturn defaultTileArr;\n\t}\n\n\t///////////// MAP - HEADING FUNCTIONS /////////////\n\n\tfunction getRowColumnFillstate(axis, index) {\n\t\tlet fillState = 'underfilled';\n\t\tconst defaultTiles = getAllDefaultTiles(props.trainTrackMap);\n\t\tlet axisNum = axis === 'x' ? 0 : 1;\n\n\t\tlet placedTrackCount = defaultTiles.filter((el) => el.tile[axisNum] === index).length;\n\t\tconst tilesOnAxis = props.trainTrackMap.tracks.filter((el) => el.tile[axisNum] === index).length;\n\t\tprops.placedTracks.forEach(function(el) {\n\t\t\tif (el.tile[axisNum] === index && el.railType !== 'X') placedTrackCount++;\n\t\t});\n\n\t\tif (tilesOnAxis < placedTrackCount) {\n\t\t\tfillState = 'overfilled';\n\t\t} else if (tilesOnAxis === placedTrackCount) {\n\t\t\tfillState = 'full';\n\t\t}\n\t\treturn fillState;\n\t}\n\n\t///////////// MAP - WIN STATE FUNCTIONS /////////////\n\n\tfunction checkIfPlacedTilesAllCorrect(trainTrackMap) {\n\t\tconst correctTileCount = getCorrectTileCount(trainTrackMap, props.placedTracks);\n\t\tconst defaultTileCount = getAllDefaultTiles(trainTrackMap).length;\n\t\tconst placedRailTrackCount = getPlacedRailTrackCount();\n\t\tif (\n\t\t\tcorrectTileCount === trainTrackMap.tracks.length &&\n\t\t\ttrainTrackMap.tracks.length === placedRailTrackCount + defaultTileCount\n\t\t) {\n\t\t\tprops.setGameCompleteState(true);\n\t\t}\n\t}\n\n\tfunction getPlacedRailTrackCount() {\n\t\tconst placedTiles = props.placedTracks;\n\t\tconst placedRailTrackCount = placedTiles.filter((el) => el.railType !== 'X').length;\n\t\treturn placedRailTrackCount;\n\t}\n\n\tfunction getCorrectTileCount(trainTrackMap, placedTracks) {\n\t\treturn trainTrackMap.tracks.filter(function(winning) {\n\t\t\tlet correctTile = winning.defaultTrack;\n\t\t\tplacedTracks.forEach(function(placed) {\n\t\t\t\tif (compareArrays(winning.tile, placed.tile) && winning.railType === placed.railType)\n\t\t\t\t\tcorrectTile = true;\n\t\t\t});\n\t\t\treturn correctTile;\n\t\t}).length;\n\t}\n\n\t///////////// MAP - RENDER FUNCTIONS /////////////\n\n\tconst activeMouseEventsObject = {\n\t\tleftClickEvent: props.controlsActive ? leftClickEvent : () => null,\n\t\trightClickEvent: props.controlsActive ? rightClickEvent : () => null,\n\t\tbothClickEvent: props.controlsActive ? bothClickEvent : () => null,\n\t\tleftReleaseEvent: props.controlsActive ? leftReleaseEvent : () => null,\n\t\trightReleaseEvent: props.controlsActive ? rightReleaseEvent : () => null,\n\t\thoverStartEvent: props.controlsActive ? hoverStartEvent : () => null,\n\t\thoverEndEvent: props.controlsActive ? hoverEndEvent : () => null\n\t};\n\n\tconst emptyMouseEventsObject = {\n\t\tleftClickEvent: () => null,\n\t\trightClickEvent: () => null,\n\t\tbothClickEvent: () => null,\n\t\tleftReleaseEvent: () => null,\n\t\trightReleaseEvent: () => null,\n\t\thoverStartEvent: () => null,\n\t\thoverEndEvent: () => null,\n\t\tleftClickDragArray: null,\n\t\trightClickDragValue: null\n\t};\n\n\tfunction renderHeadingTile(x, y, headerLabel, fillState) {\n\t\treturn <Square className=\"table-heading\" key={x} x={x} y={y} text={headerLabel} fillState={fillState} />;\n\t}\n\n\tfunction renderMapTile(x, y, railImage, mapSolutionVisible) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tclassName=\"mapTile\"\n\t\t\t\tkey={x}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\tmapSolutionVisible={mapSolutionVisible}\n\t\t\t\ttrackData={railImage}\n\t\t\t\t{...activeMouseEventsObject}\n\t\t\t/>\n\t\t);\n\t}\n\n\tfunction renderDefaultTrack(x, y, defaultRailType, highlighted) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tclassName=\"defaultTrack\"\n\t\t\t\tkey={x}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\thighlighted={highlighted}\n\t\t\t\ttrackData={convertRailTypeToTrackImage(defaultRailType)}\n\t\t\t\t{...activeMouseEventsObject}\n\t\t\t/>\n\t\t);\n\t}\n\n\tfunction renderCompleteTrack(x, y, defaultRailType, highlighted) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tclassName=\"completeTrack\"\n\t\t\t\tkey={x}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\thighlighted={highlighted}\n\t\t\t\ttrackData={convertRailTypeToTrackImage(defaultRailType)}\n\t\t\t\t{...emptyMouseEventsObject}\n\t\t\t/>\n\t\t);\n\t}\n\n\tfunction renderEmptyTile(x, y) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tclassName=\"emptyTile\"\n\t\t\t\tkey={x}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\thighlighted={false}\n\t\t\t\ttrackData={convertRailTypeToTrackImage(null)}\n\t\t\t\t{...emptyMouseEventsObject}\n\t\t\t/>\n\t\t);\n\t}\n\n\tfunction renderTransparentTile(x, y) {\n\t\treturn (\n\t\t\t<Square\n\t\t\t\tclassName=\"transparentTile\"\n\t\t\t\tkey={x}\n\t\t\t\tx={x}\n\t\t\t\ty={y}\n\t\t\t\thighlighted={false}\n\t\t\t\ttrackData={convertRailTypeToTrackImage(null)}\n\t\t\t\t{...emptyMouseEventsObject}\n\t\t\t/>\n\t\t);\n\t}\n\n\t///////////// MAP - MAP COMPONENT GENERATION FUNCTIONS /////////////\n\n\tfunction placeColumnHeader(trainTrackMap, x, y) {\n\t\tconst headerLabel = trainTrackMap.headerLabels.x[x];\n\t\tconst fillState = props.gameComplete ? 'full' : getRowColumnFillstate('x', x);\n\t\treturn renderHeadingTile(x, y - 1, headerLabel, fillState);\n\t}\n\n\tfunction placeRowHeader(trainTrackMap, x, y) {\n\t\tconst headerLabel = trainTrackMap.headerLabels.y[y - 1];\n\t\tconst fillState = props.gameComplete ? 'full' : getRowColumnFillstate('y', y - 1);\n\t\treturn renderHeadingTile(x, y - 1, headerLabel, fillState);\n\t}\n\n\tfunction placeCompletedMapTrack(trainTrackMap, x, y) {\n\t\tlet defaultTile;\n\t\tlet highlighted = false;\n\t\ttrainTrackMap.tracks.forEach(function(el) {\n\t\t\tif (el.tile[0] === x && el.tile[1] === y - 1) {\n\t\t\t\tdefaultTile = el.railType;\n\t\t\t\tif (props.defaultTilesHighlighted && el.defaultTrack) highlighted = true;\n\t\t\t}\n\t\t});\n\t\tif (defaultTile) {\n\t\t\treturn renderCompleteTrack(x, y - 1, defaultTile, highlighted);\n\t\t} else {\n\t\t\treturn renderEmptyTile(x, y - 1);\n\t\t}\n\t}\n\n\tfunction placeUserPlacedTrack(x, y) {\n\t\tlet railImage;\n\t\tprops.placedTracks.forEach(function(el) {\n\t\t\tif (el.tile[0] === x && el.tile[1] === y - 1) {\n\t\t\t\trailImage = convertRailTypeToTrackImage(el.railType);\n\t\t\t}\n\t\t});\n\t\tif (railImage) {\n\t\t\treturn renderMapTile(x, y - 1, railImage);\n\t\t} else {\n\t\t\treturn renderMapTile(x, y - 1, null);\n\t\t}\n\t}\n\n\tfunction placeGameActiveMapTrack(trainTrackMap, x, y) {\n\t\tconst defaultTile = checkIfTileIsDefault(trainTrackMap, x, y - 1);\n\t\tif (defaultTile) {\n\t\t\treturn renderDefaultTrack(x, y - 1, defaultTile, props.defaultTilesHighlighted);\n\t\t} else {\n\t\t\treturn placeUserPlacedTrack(x, y);\n\t\t}\n\t}\n\n\tfunction placeMainMapTile(trainTrackMap, x, y) {\n\t\tif (props.gameComplete || props.mapSolutionVisible) {\n\t\t\treturn placeCompletedMapTrack(trainTrackMap, x, y);\n\t\t} else {\n\t\t\treturn placeGameActiveMapTrack(trainTrackMap, x, y);\n\t\t}\n\t}\n\n\tfunction generateMapComponents(trainTrackMap) {\n\t\tlet generatedMapComponents = [];\n\t\tfor (let y = 0; y < props.mapHeight + 1; y++) {\n\t\t\tgeneratedMapComponents.push(\n\t\t\t\t<div className=\"mapRow\" key={y}>\n\t\t\t\t\t{[ ...Array(props.mapWidth + 1) ].map((el, x) => {\n\t\t\t\t\t\tif (y === 0) {\n\t\t\t\t\t\t\treturn placeColumnHeader(trainTrackMap, x, y);\n\t\t\t\t\t\t} else if (x === props.mapWidth) {\n\t\t\t\t\t\t\treturn placeRowHeader(trainTrackMap, x, y);\n\t\t\t\t\t\t} else if (!props.mapVisible) {\n\t\t\t\t\t\t\treturn renderTransparentTile(x, y - 1);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn placeMainMapTile(trainTrackMap, x, y);\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn generatedMapComponents;\n\t}\n\n\tuseEffect(\n\t\t() => {\n\t\t\tcheckIfPlacedTilesAllCorrect(props.trainTrackMap);\n\t\t},\n\t\t[ props.placedTracks ]\n\t);\n\n\t///////////// MAP - MAIN RENDER FUNCTION /////////////\n\n\tconst trainTrackMap = props.trainTrackMap;\n\tconst mapComponents = generateMapComponents(trainTrackMap);\n\n\treturn (\n\t\t<div className=\"map\">\n\t\t\t{mapComponents}\n\t\t\t<MapBackground />\n\t\t</div>\n\t);\n};\nfunction randomInt(min, max) {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\nexport default Map;\n","import React, { useState } from 'react';\nimport { colorToWhiteArray } from '../utility/colorFunctions';\n\nconst WaveButton = ({ className, onClick, text }) => {\n\tconst [ hovered, setHoveredState ] = useState(false);\n\tconst [ buttonPressed, setPressedState ] = useState(false);\n\n\tconst btnDefaultStyle = {\n\t\tposition: 'relative',\n\t\toverflow: 'hidden',\n\t\tcursor: 'pointer',\n\t\tbackground: 'none',\n\t\tzIndex: '0',\n\t\tborderRadius: '1rem',\n\t\tborder: '1px #ccc solid',\n\t\toutline: 'none',\n\t\ttransition: '0.3s',\n\t\ttop: '0px',\n\t\tboxShadow: '0px 5px 0px 2px #eee'\n\t};\n\n\tconst btnPressedStyle = {\n\t\ttransition: '0.1s',\n\t\ttop: '10px',\n\t\tboxShadow: 'none'\n\t};\n\n\tconst cubicBezierText = 'cubic-bezier(0,2.53,.53,-1.51)';\n\tconst textStyle = {\n\t\tzIndex: '1',\n\t\tcolor: hovered ? 'white' : 'black',\n\t\ttransition: hovered ? `color ${1}s ${cubicBezierText}` : `color 0s`\n\t};\n\n\tconst rectangleStyle = {\n\t\ttop: '0%',\n\t\tleft: '-30%',\n\t\theight: '350%',\n\t\twidth: '70rem',\n\t\tposition: 'absolute',\n\t\tzIndex: '-1',\n\t\tborderRadius: '50rem'\n\t};\n\n\tconst rectangleCount = 5;\n\n\tconst startRotation = 30;\n\tconst rotationOffset = 2;\n\tconst endRotation = -15 + rectangleCount * rotationOffset;\n\tconst startTransition = 1.5;\n\tconst endTransition = 3;\n\tconst transitionOffset = 0.1;\n\tconst cubicBezierFunction = 'cubic-bezier(0,1.84,0,.32)';\n\n\tlet rectangleArray = createRectangleArray(rectangleCount);\n\n\tfunction createRectangleArray(recCount) {\n\t\tlet rectangleArray = [];\n\t\tconst blueRecColors = colorToWhiteArray('#5bb1cd', recCount * 1.2);\n\t\tconst purpleRecColors = colorToWhiteArray('#800080', recCount * 1.2);\n\t\tfor (let i = 0; i < recCount; i++) {\n\t\t\tconst curRecStyle = {\n\t\t\t\tbackground: `linear-gradient(1turn,${blueRecColors[blueRecColors.length - i - 1]},${purpleRecColors[\n\t\t\t\t\tpurpleRecColors.length - i - 1\n\t\t\t\t]})`,\n\t\t\t\ttransform: hovered\n\t\t\t\t\t? `rotate(${endRotation + rotationOffset * i}deg) skewY(0deg)`\n\t\t\t\t\t: `rotate(${startRotation + rotationOffset * i}deg) skewY(45deg)`,\n\t\t\t\ttransition: hovered\n\t\t\t\t\t? `all ${startTransition + transitionOffset * i}s ${cubicBezierFunction}`\n\t\t\t\t\t: `all ${endTransition}s ${cubicBezierFunction}`\n\t\t\t};\n\t\t\trectangleArray.push(\n\t\t\t\t<div key={i} style={{ ...rectangleStyle, ...curRecStyle }} className=\"rectangle\" id={`rec${i}`} />\n\t\t\t);\n\t\t}\n\t\treturn rectangleArray;\n\t}\n\n\tconst btnStyle = buttonPressed ? { ...btnDefaultStyle, ...btnPressedStyle } : btnDefaultStyle;\n\n\tfunction renderButtonWhiteBackground() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tzIndex: '-2',\n\t\t\t\t\ttop: '0',\n\t\t\t\t\tleft: '0',\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tbackgroundColor: 'white'\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<button\n\t\t\tstyle={btnStyle}\n\t\t\tclassName={className}\n\t\t\tonMouseOver={() => setHoveredState(true)}\n\t\t\tonMouseLeave={() => (!buttonPressed ? setHoveredState(false) : null)}\n\t\t\tonClick={() => {\n\t\t\t\tsetHoveredState(true);\n\t\t\t\t// setPressedState(true);\n\t\t\t\t// const menuBtn = onClick.toString().match(/(?:Screen|setGameState)/g);\n\t\t\t\t// const waitTime = menuBtn ? 600 : 100;\n\t\t\t\t// setTimeout(() => setPressedState(false), 200);\n\t\t\t\t// setTimeout(onClick, waitTime);\n\t\t\t\tonClick();\n\t\t\t}}\n\t\t>\n\t\t\t{rectangleArray}\n\t\t\t<div style={textStyle}>{text}</div>\n\t\t\t{renderButtonWhiteBackground()}\n\t\t</button>\n\t);\n};\n\nexport default WaveButton;\n","import curvedtrack from '../../img/curvedtrack.png';\nimport straighttrack from '../../img/straighttrack.png';\n\nexport const generateMapIcon = async (mapObject, complete) => {\n\tconst options = {\n\t\theaders: true,\n\t\tcomplete: false,\n\t\tdimensions: 250,\n\t\tcutOut: false\n\t};\n\tconst canvas = await generateCanvas(mapObject, options);\n\tconst image = canvas.toDataURL('image/png');\n\treturn image;\n};\n\nexport const generateCompletedMapIcon = async (mapObject) => {\n\tconst options = {\n\t\theaders: true,\n\t\tcomplete: true,\n\t\tdimensions: 250,\n\t\tcutOut: false\n\t};\n\tconst canvas = await generateCanvas(mapObject, options);\n\tconst image = canvas.toDataURL('image/png');\n\treturn image;\n};\n\nexport const generateMapBackground = async (mapObject) => {\n\tconst options = {\n\t\theaders: false,\n\t\tcomplete: false,\n\t\tdimensions: 64 * mapObject.headerLabels.x.length,\n\t\tcutOut: true\n\t};\n\tconst canvas = await generateCanvas(mapObject, options);\n\tconst image = canvas.toDataURL('image/png');\n\treturn image;\n};\n\nconst getRotationFromRailType = (railType) => {\n\tlet rotation;\n\tswitch (railType) {\n\t\tcase 'horizontal':\n\t\t\trotation = 90;\n\t\t\tbreak;\n\t\tcase 'topLeftCorner':\n\t\t\trotation = 90;\n\t\t\tbreak;\n\t\tcase 'topRightCorner':\n\t\t\trotation = 180;\n\t\t\tbreak;\n\t\tcase 'bottomRightCorner':\n\t\t\trotation = 270;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\trotation = 0;\n\t}\n\treturn rotation;\n};\n\nconst generateCanvas = async (mapObject, options) => {\n\tlet canvas = document.createElement('canvas');\n\n\tconst mapWidth = mapObject.headerLabels.x.length;\n\tconst mapHeight = mapObject.headerLabels.y.length;\n\n\tcanvas.width = options.dimensions;\n\tcanvas.height = options.dimensions;\n\tconst gridMapWidth = mapWidth + options.headers;\n\tconst gridMapHeight = mapHeight + options.headers;\n\tconst iconTileWidth = canvas.width / gridMapWidth;\n\tconst iconTileHeight = canvas.height / gridMapHeight;\n\n\tlet context = canvas.getContext('2d');\n\n\tlet curvedTrackImage = await loadImage(curvedtrack);\n\tlet straightTrackImage = await loadImage(straighttrack);\n\n\tconst drawRotatedImage = (el) => {\n\t\tlet rotation = getRotationFromRailType(el.railType);\n\t\tcontext.save();\n\t\tcontext.translate(\n\t\t\tel.tile[0] * iconTileWidth + iconTileWidth / 2,\n\t\t\t(el.tile[1] + options.headers) * iconTileHeight + iconTileHeight / 2\n\t\t);\n\t\tcontext.rotate(rotation * (Math.PI / 180));\n\t\tcontext.drawImage(\n\t\t\tel.railType === 'vertical' || el.railType === 'horizontal' ? straightTrackImage : curvedTrackImage,\n\t\t\t-iconTileWidth / 2,\n\t\t\t-iconTileHeight / 2,\n\t\t\ticonTileWidth,\n\t\t\ticonTileHeight\n\t\t);\n\t\tcontext.restore();\n\t};\n\n\tconst drawStraightImage = (el) => {\n\t\tcontext.drawImage(\n\t\t\tel.railType === 'vertical' || el.railType === 'horizontal' ? straightTrackImage : curvedTrackImage,\n\t\t\tel.tile[0] * iconTileWidth,\n\t\t\t(el.tile[1] + options.headers) * iconTileHeight,\n\t\t\ticonTileWidth,\n\t\t\ticonTileHeight\n\t\t);\n\t};\n\n\tcontext.fillStyle = 'white';\n\tcontext.fillRect(0, 0, canvas.width, canvas.height);\n\n\tmapObject.tracks.forEach((el) => {\n\t\tif (options.complete || el.defaultTrack) {\n\t\t\tif (\n\t\t\t\tel.railType === 'horizontal' ||\n\t\t\t\tel.railType === 'topLeftCorner' ||\n\t\t\t\tel.railType === 'topRightCorner' ||\n\t\t\t\tel.railType === 'bottomRightCorner'\n\t\t\t) {\n\t\t\t\tdrawRotatedImage(el);\n\t\t\t} else {\n\t\t\t\tdrawStraightImage(el);\n\t\t\t}\n\t\t}\n\t});\n\n\t(function drawGrid() {\n\t\tfor (let i = 0; i < gridMapWidth * gridMapHeight; i++) {\n\t\t\tlet x = i % gridMapWidth;\n\t\t\tlet y = Math.floor(i / gridMapHeight);\n\t\t\tif (options.headers && (x === mapWidth || y === 0)) drawHeaderBox(x, y);\n\t\t\tcontext.fillStyle = 'black';\n\t\t\tcontext.strokeRect(x * iconTileWidth, y * iconTileHeight, iconTileWidth, iconTileHeight);\n\t\t}\n\t})();\n\n\tfunction drawHeaderBox(x, y) {\n\t\tdrawHeaderBoxBackground(x, y);\n\t\tif ((y === 0 && x !== mapWidth) || (x === mapWidth && y !== 0)) drawHeaderBoxText(x, y);\n\t}\n\n\tfunction drawHeaderBoxBackground(x, y) {\n\t\tcontext.fillStyle = '#FFE4B5';\n\t\tcontext.fillRect(x * iconTileWidth, y * iconTileHeight, iconTileWidth, iconTileHeight);\n\t}\n\n\tfunction drawHeaderBoxText(x, y) {\n\t\tcontext.fillStyle = 'black';\n\t\tcontext.font = '1.5rem Georgia';\n\t\tcontext.textAlign = 'center';\n\t\tcontext.textBaseline = 'middle';\n\t\tcontext.fillText(getHeaderBoxText(x, y), (x + 0.5) * iconTileWidth, (y + 0.5) * iconTileHeight);\n\t}\n\n\tfunction getHeaderBoxText(x, y) {\n\t\tlet headerText = 'ERROR';\n\t\tif (y === 0 && x !== mapWidth) headerText = mapObject.headerLabels.x[x];\n\t\tif (x === mapWidth && y !== 0) headerText = mapObject.headerLabels.y[y - 1];\n\t\treturn headerText;\n\t}\n\n\tfunction cutOutBackgroundBox() {\n\t\tconst boxWidth = 250;\n\t\tconst boxHeight = 150;\n\t\tcontext.clearRect(\n\t\t\t(mapWidth + 1) * iconTileWidth / 2 - boxWidth / 2,\n\t\t\t(mapHeight - 1) * iconTileHeight / 2 - boxHeight / 2,\n\t\t\tboxWidth,\n\t\t\tboxHeight\n\t\t);\n\t\tcontext.strokeRect(\n\t\t\t(mapWidth + 1) * iconTileWidth / 2 - boxWidth / 2,\n\t\t\t(mapHeight - 1) * iconTileHeight / 2 - boxHeight / 2,\n\t\t\tboxWidth,\n\t\t\tboxHeight\n\t\t);\n\t}\n\n\tif (options.cutOut) cutOutBackgroundBox();\n\n\treturn canvas;\n};\n\nconst loadImage = (imgURL) => {\n\treturn new Promise((resolve, reject) => {\n\t\tlet img = new Image();\n\t\timg.onload = () => resolve(img);\n\t\timg.onerror = reject;\n\t\timg.src = imgURL;\n\t});\n};\n","import { isNonEmptyArray } from './utilityFunctions';\n\nexport const saveMapToLocal = async (mapToSave) => {\n\tlet localMaps = JSON.parse(window.localStorage.getItem('savedMaps'));\n\tif (isNonEmptyArray(localMaps)) {\n\t\tconst newMapArray = [ ...localMaps, mapToSave ];\n\t\tawait window.localStorage.setItem('savedMaps', JSON.stringify(newMapArray));\n\t} else {\n\t\tawait window.localStorage.setItem('savedMaps', JSON.stringify([ mapToSave ]));\n\t}\n};\n\nexport const getLocalStorageMaps = () => {\n\tlet localMaps = JSON.parse(window.localStorage.getItem('savedMaps'));\n\tif (!isNonEmptyArray(localMaps)) localMaps = [];\n\treturn localMaps;\n};\n\nexport const deleteLocalSavedMap = async (deleteMapSeed) => {\n\tconst localMaps = getLocalStorageMaps();\n\tconst newMapArray = localMaps.filter((el) => el.seed !== deleteMapSeed);\n\tawait window.localStorage.setItem('savedMaps', JSON.stringify(newMapArray));\n};\n\nexport const deleteAllLocalSavedMaps = async () => {\n\tawait window.localStorage.setItem('savedMaps', JSON.stringify([]));\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport Map from './map';\nimport WaveButton from './waveButton';\nimport { generateMapBackground } from '../generation/generateIcon';\nimport { randomIntFromInterval } from '../utility/utilityFunctions';\nimport { generateRandomRGBColor } from '../utility/colorFunctions';\nimport { saveMapToLocal } from '../utility/localStorage';\n\nexport const Game = (props) => {\n\tconst clipboard = useRef(null);\n\n\tconst [ gameWon, setGameWinState ] = useState(false);\n\tconst [ mapSaveName, setMapSaveName ] = useState(null);\n\tconst [ placedTracks, setPlacedTracks ] = useState([]);\n\n\tconst [ display, setDisplay ] = useState({\n\t\twinPopUp: false,\n\t\tsavePopUp: false,\n\t\tsaveBoxCutOut: null,\n\t\tdefaultHighlights: false,\n\t\tsolutionVisible: false\n\t});\n\n\tfunction renderGameWinDisplay() {\n\t\treturn (\n\t\t\t<div key={'gameWinDisplay'} className=\"winDisplay\" onContextMenu={(e) => e.preventDefault()}>\n\t\t\t\t<h2 key={'winText'} className=\"winText\">\n\t\t\t\t\tYou Win!\n\t\t\t\t</h2>\n\t\t\t\t<button\n\t\t\t\t\tkey={'closeWinDisplay'}\n\t\t\t\t\tclassName={'closePopUpWindow'}\n\t\t\t\t\tonClick={() => setDisplay({ ...display, winPopUp: false })}\n\t\t\t\t>\n\t\t\t\t\tX\n\t\t\t\t</button>\n\t\t\t\t<div key={'balloonContainer'} className={'balloonContainer'}>\n\t\t\t\t\t{renderWinDisplayBackground()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tfunction renderWinDisplayBackground() {\n\t\tconst balloonCount = props.gameState.balloonCloud ? 300 : 1;\n\t\tlet balloonContainer = [];\n\t\tfor (let i = 0; i < balloonCount; i++) {\n\t\t\tconst color = generateRandomRGBColor();\n\t\t\tconst left = props.gameState.balloonCloud ? randomIntFromInterval(-20, 100) : 50;\n\t\t\tconst delay = props.gameState.balloonCloud ? randomIntFromInterval(0, 10000) : 0;\n\t\t\tconst balloonStyle = {\n\t\t\t\tleft: `${left}%`,\n\t\t\t\tbackgroundColor: color,\n\t\t\t\tcolor: color,\n\t\t\t\topacity: 0,\n\t\t\t\tanimationDelay: `${delay}ms`\n\t\t\t};\n\t\t\tballoonContainer.push(\n\t\t\t\t<div key={i} className=\"balloon\" style={balloonStyle}>\n\t\t\t\t\t<div key={`balloonString${i}`} className={'balloonString'}>\n\t\t\t\t\t\t؁\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn balloonContainer;\n\t}\n\n\tfunction renderSaveMapDisplay() {\n\t\treturn (\n\t\t\t<div key={'saveMapDisplay'} className=\"saveMapDisplay\" onContextMenu={(e) => e.preventDefault()}>\n\t\t\t\t<p>Enter a name to save map as:</p>\n\t\t\t\t<button\n\t\t\t\t\tkey={'closeSaveMapDisplay'}\n\t\t\t\t\tclassName={'closePopUpWindow'}\n\t\t\t\t\tonClick={() => setDisplay({ ...display, savePopUp: false })}\n\t\t\t\t>\n\t\t\t\t\tX\n\t\t\t\t</button>\n\t\t\t\t<input\n\t\t\t\t\tkey={'saveNameInputBox'}\n\t\t\t\t\tclassName={'saveNameInputBox'}\n\t\t\t\t\tonChange={(e) => setMapSaveName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tkey={'confirmSaveMapBtn'}\n\t\t\t\t\tclassName={'confirmSaveMapBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsaveMapToLocal({ name: mapSaveName, ...props.gameState });\n\t\t\t\t\t\tsetMapSaveName(null);\n\t\t\t\t\t\tsetDisplay({ ...display, savePopUp: false });\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Save Map'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tfunction renderOptionsButtons() {\n\t\treturn (\n\t\t\t<div className=\"inGameOptions\">\n\t\t\t\t<div className=\"topRowInGameButtons\">\n\t\t\t\t\t<WaveButton\n\t\t\t\t\t\tkey={'resetMapBtn'}\n\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\tsetGameWinState(false);\n\t\t\t\t\t\t\tsetPlacedTracks([]);\n\t\t\t\t\t\t\tsetDisplay({ ...display, winPopUp: false, solutionVisible: false });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttext={'Reset Map'}\n\t\t\t\t\t/>\n\t\t\t\t\t<WaveButton\n\t\t\t\t\t\tkey={'highlightDefaultTilesBtn'}\n\t\t\t\t\t\tonClick={() => setDisplay({ ...display, defaultHighlights: !display.defaultHighlights })}\n\t\t\t\t\t\ttext={display.defaultHighlights ? 'Hide Default Tiles' : 'Show Default Tiles'}\n\t\t\t\t\t/>\n\t\t\t\t\t<WaveButton\n\t\t\t\t\t\tkey={'showMapSolutionBtn'}\n\t\t\t\t\t\tonClick={() => setDisplay({ ...display, solutionVisible: !display.solutionVisible })}\n\t\t\t\t\t\ttext={display.solutionVisible ? 'Hide Map Solution' : 'Show Map Solution'}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"bottomRowInGameButtons\">\n\t\t\t\t\t<div className=\"mapSeedOptionContainer\">\n\t\t\t\t\t\t<WaveButton\n\t\t\t\t\t\t\tstyle={{ zIndex: '4' }}\n\t\t\t\t\t\t\tclassName=\"mapSeedBtn\"\n\t\t\t\t\t\t\tkey=\"mapSeedBtn\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tclipboard.current.select();\n\t\t\t\t\t\t\t\tdocument.execCommand('copy');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttext={'🌱'}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"mapSeedExplanation\">\n\t\t\t\t\t\t\t<span>Copy map seed to clipboard</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tref={clipboard}\n\t\t\t\t\t\t\treadOnly\n\t\t\t\t\t\t\tunselectable=\"on\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\t\t\tresize: 'none',\n\t\t\t\t\t\t\t\tcursor: 'default'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalue={props.gameState.seed}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<WaveButton\n\t\t\t\t\t\tkey={'saveMapBtn'}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetDisplay({ ...display, savePopUp: true, winPopUp: false });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttext={'Save Map'}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WaveButton\n\t\t\t\t\t\tkey={'newMapBtn'}\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetGameWinState(false);\n\t\t\t\t\t\t\tsetPlacedTracks([]);\n\t\t\t\t\t\t\tsetDisplay({ ...display, winPopUp: false, solutionVisible: false });\n\t\t\t\t\t\t\tprops.inGameNewMap();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\ttext={'New Map'}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<WaveButton key={'quitBtn'} onClick={() => props.quitGame()} text={'Quit Game'} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tuseEffect(\n\t\t() => {\n\t\t\tasync function addCutOutToScreen() {\n\t\t\t\tif (display.savePopUp) {\n\t\t\t\t\tsetDisplay({ ...display, saveBoxCutOut: await generateMapBackground(props.gameState.mapObject) });\n\t\t\t\t} else {\n\t\t\t\t\tsetDisplay({ ...display, saveBoxCutOut: null });\n\t\t\t\t}\n\t\t\t}\n\t\t\taddCutOutToScreen();\n\t\t},\n\t\t[ display.savePopUp ]\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"gameMapContainer\">\n\t\t\t\t{display.winPopUp ? renderGameWinDisplay() : null}\n\t\t\t\t{display.savePopUp ? renderSaveMapDisplay() : null}\n\t\t\t\t<Map\n\t\t\t\t\tkey={props.mapSeed}\n\t\t\t\t\tclassName=\"gameMap\"\n\t\t\t\t\tdefaultTilesHighlighted={display.defaultHighlights}\n\t\t\t\t\tmapSolutionVisible={display.solutionVisible}\n\t\t\t\t\ttrainTrackMap={props.gameState.mapObject}\n\t\t\t\t\tmapHeight={props.gameState.size}\n\t\t\t\t\tmapWidth={props.gameState.size}\n\t\t\t\t\tsetGameCompleteState={(val) => {\n\t\t\t\t\t\tsetGameWinState(val);\n\t\t\t\t\t\tsetDisplay({ ...display, winPopUp: val });\n\t\t\t\t\t}}\n\t\t\t\t\tgameComplete={gameWon}\n\t\t\t\t\tcontrolsActive={!display.savePopUp}\n\t\t\t\t\tmapVisible={!display.saveBoxCutOut}\n\t\t\t\t\tsetPlacedTracks={(val) => setPlacedTracks(val)}\n\t\t\t\t\tplacedTracks={placedTracks}\n\t\t\t\t/>\n\t\t\t\t<img\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tdraggable=\"false\"\n\t\t\t\t\tsrc={display.saveBoxCutOut}\n\t\t\t\t\tclassName=\"saveBoxMapCutout\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: '64px',\n\t\t\t\t\t\tleft: '0px',\n\t\t\t\t\t\tborder: display.saveBoxCutOut ? '1px solid black' : 'none'\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{renderOptionsButtons()}\n\t\t</div>\n\t);\n};\n\nexport default Game;\n","import React, { useEffect, useState } from 'react';\n\nconst Dropdown = ({ style, placeholder, options, onChange, onHover, className }) => {\n\tconst [ listOpen, setListOpen ] = useState(false);\n\tconst [ defaultValue, setDefaultValue ] = useState(placeholder);\n\tconst [ hoveredOption, setHoveredOption ] = useState(null);\n\n\tconst containerStyle = {\n\t\tbackground: '#fff',\n\t\tborder: '1px #aaa solid',\n\t\tlineHeight: style.height,\n\t\t...style,\n\t\tposition: 'relative',\n\t\tWebkitUserSelect: 'none',\n\t\tMozUserSelect: 'none',\n\t\tmsUserSelect: 'none',\n\t\tuserSelect: 'none',\n\t\tborderRadius: listOpen ? '1rem 1rem 0 0' : '1rem',\n\t\tboxShadow: '0px 5px 0px 2px #eee',\n\t\tcursor: 'pointer'\n\t};\n\n\tconst listItemStyle = {\n\t\t...containerStyle,\n\t\tborderTop: 'none'\n\t};\n\n\tconst renderDropDownList = (options) => {\n\t\tlet dropDownList = [];\n\t\toptions.forEach((item, i) => {\n\t\t\tdropDownList.push(\n\t\t\t\t<div\n\t\t\t\t\tclassName={'dropdown'}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...listItemStyle,\n\t\t\t\t\t\tbackground: hoveredOption === i ? '#9999FF' : '#fff',\n\t\t\t\t\t\tcolor: hoveredOption === i ? 'white' : 'black',\n\t\t\t\t\t\tborderRadius: i === options.length - 1 ? '0 0 1rem 1rem' : '0'\n\t\t\t\t\t}}\n\t\t\t\t\tkey={`dropdownOption${i}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\toptionSelected(item);\n\t\t\t\t\t\tsetDefaultValue(item.display);\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseOver={() => {\n\t\t\t\t\t\toptionHovered(item.mapObject);\n\t\t\t\t\t\tsetHoveredOption(i);\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\toptionHovered(null);\n\t\t\t\t\t\tsetHoveredOption(null);\n\t\t\t\t\t}}\n\t\t\t\t\tonContextMenu={(e) => e.preventDefault()}\n\t\t\t\t>\n\t\t\t\t\t{item.display}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn dropDownList;\n\t};\n\n\tconst renderDropdownArrow = () => {\n\t\tconst arrowStyling = { fontSize: '0.75rem', position: 'absolute', right: '5%' };\n\t\treturn <span style={arrowStyling}>▼</span>;\n\t};\n\n\tuseEffect(() => {\n\t\tif (listOpen) {\n\t\t\tdocument.addEventListener('mousedown', whileDropdownOpenClick);\n\t\t} else {\n\t\t\tdocument.removeEventListener('mousedown', whileDropdownOpenClick);\n\t\t}\n\t\treturn () => document.removeEventListener('mousedown', whileDropdownOpenClick);\n\t});\n\n\tconst whileDropdownOpenClick = (e) => {\n\t\tif (e.target.className === 'dropdown') {\n\t\t\treturn;\n\t\t}\n\t\tsetListOpen(false);\n\t\tonHover(false);\n\t};\n\n\tconst optionSelected = (item, mapObject, pathFindingDisabled) => {\n\t\tonChange(item, mapObject, pathFindingDisabled);\n\t\tsetListOpen(false);\n\t};\n\n\tconst optionHovered = (item) => {\n\t\tonHover(item);\n\t};\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<div\n\t\t\t\tclassName={'dropdown'}\n\t\t\t\tstyle={{ ...containerStyle, backgroundColor: '#fff' }}\n\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\tif (e.buttons === 1) setListOpen(!listOpen);\n\t\t\t\t}}\n\t\t\t\tonContextMenu={(e) => e.preventDefault()}\n\t\t\t>\n\t\t\t\t{defaultValue}\n\t\t\t\t{renderDropdownArrow()}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{listOpen ? renderDropDownList(options) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport WaveButton from '../components/waveButton';\n\nimport { deleteLocalSavedMap, deleteAllLocalSavedMaps } from '../utility/localStorage';\n\nexport const DeleteMapConfirmScreen = (props) => {\n\treturn (\n\t\t<div className=\"deleteConfirmScreen\">\n\t\t\t<h3 className=\"deleteConfirmLabel\">\n\t\t\t\tAre you sure you want to delete {props.deleteModeOnAll ? 'ALL saved maps?' : 'the following saved map?'}\n\t\t\t</h3>\n\t\t\t<img\n\t\t\t\talt=\"\"\n\t\t\t\tsrc={props.deleteModeOnAll ? null : props.mapIcon}\n\t\t\t\tstyle={{ display: props.deleteModeOnAll ? 'none' : 'block' }}\n\t\t\t\tclassName=\"confirmDeleteIcon\"\n\t\t\t/>\n\t\t\t<div className=\"deleteButtons\">\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"confirmDeleteBtn\"\n\t\t\t\t\tkey={'confirmDeleteBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tconsole.log(props);\n\t\t\t\t\t\tif (props.deleteModeOnAll) deleteAllLocalSavedMaps();\n\t\t\t\t\t\telse deleteLocalSavedMap(props.gameState.seed);\n\t\t\t\t\t\tprops.quitToLoadScreen();\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Confirm'}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"cancelDeleteBtn\"\n\t\t\t\t\tkey={'cancelDeleteBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.quitToLoadScreen();\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Cancel'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DeleteMapConfirmScreen;\n","import React from 'react';\nimport WaveButton from '../components/waveButton';\n\nexport const ReturnToMainMenuBtn = (props) => {\n\treturn (\n\t\t<WaveButton\n\t\t\tclassName=\"returnToMainMenuBtn\"\n\t\t\tkey={'returnToMainMenuBtn'}\n\t\t\tonClick={() => {\n\t\t\t\tprops.setCurrentScreen('mainMenu');\n\t\t\t}}\n\t\t\ttext={'Return To Main Menu'}\n\t\t/>\n\t);\n};\n\nexport default ReturnToMainMenuBtn;\n","import React, { useState } from 'react';\nimport WaveButton from '../components/waveButton';\nimport Dropdown from '../components/dropdown';\nimport DeleteMapConfirmScreen from '../render/deleteMapConfirmScreen';\nimport { generateMapIcon } from '../generation/generateIcon';\nimport ReturnToMainMenuBtn from './returnToMainMenuBtn';\n\nimport { getLocalStorageMaps } from '../utility/localStorage';\n\nfunction renderSavedMapsDropdownValues() {\n\tconst localMaps = getLocalStorageMaps();\n\tlet dropDownValues = [];\n\tlocalMaps.forEach(async (el) => {\n\t\tdropDownValues.push({\n\t\t\tdisplay: el.name,\n\t\t\tseed: el.seed,\n\t\t\tsize: el.size,\n\t\t\tmapObject: el.mapObject,\n\t\t\tpathFinding: el.pathFinding\n\t\t});\n\t});\n\n\treturn dropDownValues;\n}\n\nexport const LoadMapScreen = (props) => {\n\tconst [ screenState, setScreenState ] = useState('load');\n\tconst [ mapIcon, setMapIcon ] = useState(null);\n\n\tasync function displaySavedGameMapIcon(mapObject) {\n\t\tsetMapIcon(mapObject ? await generateMapIcon(mapObject) : null);\n\t}\n\n\tif (screenState === 'load') {\n\t\treturn (\n\t\t\t<div className=\"loadMapSection\">\n\t\t\t\t<Dropdown\n\t\t\t\t\tclassName=\"loadMapDropdown\"\n\t\t\t\t\tstyle={{ width: '12rem', height: '2rem' }}\n\t\t\t\t\tplaceholder={'Select a map'}\n\t\t\t\t\toptions={renderSavedMapsDropdownValues()}\n\t\t\t\t\tonChange={(item) => {\n\t\t\t\t\t\tconst { display, ...mapObject } = item;\n\t\t\t\t\t\tprops.setGameState({ ...props.gameState, ...mapObject });\n\t\t\t\t\t}}\n\t\t\t\t\tonHover={(mapObject) => {\n\t\t\t\t\t\tif (mapObject !== null) displaySavedGameMapIcon(mapObject);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<img\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tsrc={mapIcon}\n\t\t\t\t\tclassName=\"mapIcon\"\n\t\t\t\t\tstyle={{ border: mapIcon ? '0.15rem #aaa solid' : 'none' }}\n\t\t\t\t/>\n\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"loadSaveMapBtn\"\n\t\t\t\t\tkey={'loadSaveMapBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (props.gameState.mapObject) props.setGameState({ ...props.gameState, active: true });\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Load Map'}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"deleteSaveMapBtn\"\n\t\t\t\t\tkey={'deleteSaveMapBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (mapIcon) setScreenState('deleteOne');\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Delete Map'}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"deleteAllSavedMapsBtn\"\n\t\t\t\t\tkey={'deleteAllSavedMapsBtn'}\n\t\t\t\t\tonClick={() => setScreenState('deleteAll')}\n\t\t\t\t\ttext={'Delete All Maps'}\n\t\t\t\t/>\n\t\t\t\t<ReturnToMainMenuBtn {...props} />\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tconst deleteModeOnAll = screenState === 'deleteOne' ? false : true;\n\t\treturn (\n\t\t\t<DeleteMapConfirmScreen\n\t\t\t\t{...props}\n\t\t\t\tmapIcon={mapIcon}\n\t\t\t\tdeleteModeOnAll={deleteModeOnAll}\n\t\t\t\tquitToLoadScreen={() => {\n\t\t\t\t\tsetMapIcon(null);\n\t\t\t\t\tsetScreenState('load');\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n};\n\nexport default LoadMapScreen;\n","import React, { useEffect, useState } from 'react';\nimport ReturnToMainMenuBtn from './returnToMainMenuBtn';\nimport { generateNewMap } from '../generation/generateMap';\nimport { generateMapIcon, generateCompletedMapIcon } from '../generation/generateIcon';\n\nexport const HowToPlayScreen = (props) => {\n\tconst [ maps, setMaps ] = useState(false);\n\n\tuseEffect(() => {\n\t\tasync function getMaps() {\n\t\t\tconst map = generateNewMap(6, 6, 986707260499975, true);\n\t\t\tconst emptyMap = await generateMapIcon(map, false);\n\t\t\tconst completeMap = await generateCompletedMapIcon(map, true);\n\t\t\tsetMaps({ empty: emptyMap, complete: completeMap });\n\t\t}\n\t\tgetMaps();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"howToPlayScreen\" key=\"howToPlayScreen\">\n\t\t\t<h2 className=\"howToPlayTitle\">How To Play</h2>\n\t\t\t<div className=\"howToPlayGrid\">\n\t\t\t\t<div className=\"howToPlayMapField\">\n\t\t\t\t\t<img className=\"howToPlayMap\" alt=\"\" src={maps.empty} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"howToPlayTextField\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe goal of the game is to create a train track path between the entrance and the exit of the\n\t\t\t\t\t\tboard.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tEach row and column must contain the specified amount of tracks in the corresponding header.\n\t\t\t\t\t\tHeaders display green if correct and red if overfilled.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Tracks cannot overlap. In order to win the path must be fully connected with no extra tracks.</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tDefault tiles (such as the entrance and exit) cannot be removed from the map. You can toggle the\n\t\t\t\t\t\tcolour of default tiles (blue/brown) in game.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"howToPlayMapField\">\n\t\t\t\t\t<img className=\"howToPlayMap\" alt=\"\" src={maps.complete} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"howToPlayTextField\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLeft clicking places a track. Hovering over different sections of a tile will show what type of\n\t\t\t\t\t\ttrack will be placed on left click.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tRight clicking places an X mark. X marks are useful for tiles where you know there is no track.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPressing both mouse buttons at the same time places a T mark. T marks are useful for tiles where\n\t\t\t\t\t\tyou know there is a track but are not sure which type.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Holding down a mouse button and dragging over other tiles will place multiple tracks/markers.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ReturnToMainMenuBtn {...props} />\n\t\t</div>\n\t);\n};\n\nexport default HowToPlayScreen;\n","import React, { useEffect } from 'react';\nimport WaveButton from '../components/waveButton';\nimport Dropdown from '../components/dropdown';\nimport ReturnToMainMenuBtn from './returnToMainMenuBtn';\nimport { getRandomSeed } from '../utility/utilityFunctions';\n\nfunction getMapSizeOptions() {\n\tlet mapSizeOptions = [];\n\tfor (let i = 0; i < 3; i++) {\n\t\tconst mapSize = 6 + i * 2;\n\t\tmapSizeOptions.push({\n\t\t\tdisplay: `${mapSize}x${mapSize}`,\n\t\t\tvalue: mapSize\n\t\t});\n\t}\n\treturn mapSizeOptions;\n}\n\nexport const StartMapScreen = (props) => {\n\tuseEffect(() => {\n\t\tprops.setGameState({ ...props.gameState, seed: getRandomSeed() });\n\t}, []);\n\n\treturn (\n\t\t<div className=\"generateMapSection\">\n\t\t\t<p key={'Map Size Label'}>Map Size</p>\n\t\t\t<div>{props.selectedMap ? props.selectedMap.size : null}</div>\n\t\t\t<Dropdown\n\t\t\t\tkey={'selectMapSize'}\n\t\t\t\tstyle={{ width: '3rem', height: '2rem', textAlign: 'center', padding: '0 1.25rem 0 0.5rem' }}\n\t\t\t\toptions={getMapSizeOptions()}\n\t\t\t\tclassName=\"mapSizeOption\"\n\t\t\t\tplaceholder={`${props.gameState.size}x${props.gameState.size}`}\n\t\t\t\tonHover={() => null}\n\t\t\t\tonChange={(item) => {\n\t\t\t\t\tprops.setGameState({ ...props.gameState, size: item.value });\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<p key={'Map Seed Label'}>Map Seed</p>\n\t\t\t<div className=\"mapSeedOptionRow\">\n\t\t\t\t<input\n\t\t\t\t\tkey=\"mapSeedInput\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"mapSeedInput\"\n\t\t\t\t\tid=\"mapSeedInput\"\n\t\t\t\t\tdefaultValue={props.gameState.seed}\n\t\t\t\t\tonChange={(e) => props.setGameState({ ...props.gameState, seed: e.target.value })}\n\t\t\t\t\tstyle={{ width: '8rem', textAlign: 'center' }}\n\t\t\t\t/>\n\t\t\t\t<div\n\t\t\t\t\tkey=\"rerollSeedBtn\"\n\t\t\t\t\tclassName=\"rerollSeedBtn\"\n\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tprops.setGameState({ ...props.gameState, seed: getRandomSeed() });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<span className=\"diceSymbol\">⚄</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"pathFindingOptionRow\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tclassName=\"pathFindingCheckbox\"\n\t\t\t\t\tonChange={(e) => props.setGameState({ ...props.gameState, pathFinding: !e.target.checked })}\n\t\t\t\t/>\n\t\t\t\t<p className=\"pathFindingLabel\">Disable Map Generation Path Finding</p>\n\t\t\t\t<div className=\"pathFindingQuestionBox\">?</div>\n\t\t\t\t<div className=\"pathFindingExplanation\">\n\t\t\t\t\tDisables use of breadth first search algorithm in map generation. Can increase performance on old\n\t\t\t\t\tbrowsers/PCs. Maps may be lessed balanced.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"pathFindingOptionRow\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tclassName=\"pathFindingCheckbox\"\n\t\t\t\t\tonChange={(e) => props.setGameState({ ...props.gameState, balloonCloud: !e.target.checked })}\n\t\t\t\t/>\n\t\t\t\t<p className=\"pathFindingLabel\">Disable Win Screen Balloon Cloud</p>\n\t\t\t\t<div className=\"pathFindingQuestionBox\">?</div>\n\t\t\t\t<div className=\"pathFindingExplanation\">\n\t\t\t\t\tDisables the balloon cloud effect at the end of a game win. Can increase performance on old\n\t\t\t\t\tbrowsers/PCs.\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<WaveButton\n\t\t\t\tkey={'generateMapBtn'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.generateMap();\n\t\t\t\t}}\n\t\t\t\ttext={'Generate Map'}\n\t\t\t/>\n\t\t\t<ReturnToMainMenuBtn {...props} />\n\t\t</div>\n\t);\n};\n\nexport default StartMapScreen;\n","import React from 'react';\nimport ReturnToMainMenuBtn from './returnToMainMenuBtn';\n\nexport const AboutScreen = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<p>This game was created with React.</p>\n\t\t\t<p>\n\t\t\t\t<a href=\"https://github.com/morgan-sam/Train-Tracks-React\">Source Code</a>\n\t\t\t</p>\n\t\t\t<p>Samuel Morgan - 2020</p>\n\t\t\t<ReturnToMainMenuBtn {...props} />\n\t\t</div>\n\t);\n};\n\nexport default AboutScreen;\n","import React from 'react';\nimport WaveButton from '../components/waveButton';\n\nexport const MainMenuScreen = (props) => {\n\treturn (\n\t\t<div className=\"mainMenuScreen\" key=\"mainMenuScreen\">\n\t\t\t<WaveButton\n\t\t\t\tclassName=\"startGameBtn\"\n\t\t\t\tkey={'startGameBtn'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.setCurrentScreen('startMap');\n\t\t\t\t}}\n\t\t\t\ttext={'Start Game'}\n\t\t\t/>\n\t\t\t<WaveButton\n\t\t\t\tclassName=\"loadSavedGameBtn\"\n\t\t\t\tkey={'loadSavedGameBtn'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.setCurrentScreen('loadMap');\n\t\t\t\t}}\n\t\t\t\ttext={'Load Saved Map'}\n\t\t\t/>\n\t\t\t<WaveButton\n\t\t\t\tclassName=\"howToPlayPageBtn\"\n\t\t\t\tkey={'howToPlayPageBtn'}\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tprops.setCurrentScreen('howToPlay');\n\t\t\t\t}}\n\t\t\t\ttext={'How To Play'}\n\t\t\t/>\n\t\t\t<WaveButton\n\t\t\t\tclassName=\"aboutBtn\"\n\t\t\t\tkey={'aboutBtn'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.setCurrentScreen('about');\n\t\t\t\t}}\n\t\t\t\ttext={'About'}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default MainMenuScreen;\n","import React, { useEffect, useState } from 'react';\nimport Game from './game';\nimport LoadMapScreen from '../render/loadMapScreen';\nimport HowToPlayScreen from '../render/howToPlayScreen';\nimport StartMapScreen from '../render/startMapScreen';\nimport AboutScreen from '../render/aboutScreen';\nimport { generateNewMap } from '../generation/generateMap';\nimport MainMenuScreen from '../render/mainMenuScreen';\n\nimport { getRandomSeed } from '../utility/utilityFunctions';\n\nexport const App = () => {\n\tconst [ gameState, setGameState ] = useState({\n\t\tsize: 8,\n\t\tseed: getRandomSeed(),\n\t\tmapObject: null,\n\t\tpathFinding: true,\n\t\tactive: false,\n\t\tballoonCloud: true\n\t});\n\tconst [ currentScreen, setCurrentScreen ] = useState('mainMenu');\n\n\tfunction generateMap() {\n\t\tconst pathFindingDisabled = !gameState.pathFinding;\n\t\tconst mapObject = generateNewMap(gameState.size, gameState.size, gameState.seed, pathFindingDisabled);\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tmapObject,\n\t\t\tactive: true\n\t\t});\n\t}\n\n\tfunction inGameNewMap() {\n\t\tconst seed = getRandomSeed();\n\t\tconst pathFindingDisabled = !gameState.pathFinding;\n\t\tconst mapObject = generateNewMap(gameState.size, gameState.size, seed, pathFindingDisabled);\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tseed,\n\t\t\tmapObject\n\t\t});\n\t}\n\n\tfunction quitGame() {\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tmapObject: null,\n\t\t\tseed: getRandomSeed(),\n\t\t\tactive: false\n\t\t});\n\t\tsetCurrentScreen('mainMenu');\n\t}\n\n\tfunction switchToScreen() {\n\t\tconst props = {\n\t\t\tcurrentScreen,\n\t\t\tsetCurrentScreen,\n\t\t\tgameState,\n\t\t\tsetGameState,\n\t\t\tinGameNewMap,\n\t\t\tgenerateMap,\n\t\t\tquitGame\n\t\t};\n\t\tswitch (currentScreen) {\n\t\t\tcase 'mainMenu':\n\t\t\t\treturn <MainMenuScreen {...props} />;\n\t\t\tcase 'startMap':\n\t\t\t\treturn <StartMapScreen {...props} />;\n\t\t\tcase 'loadMap':\n\t\t\t\treturn <LoadMapScreen {...props} />;\n\t\t\tcase 'howToPlay':\n\t\t\t\treturn <HowToPlayScreen {...props} />;\n\t\t\tcase 'about':\n\t\t\t\treturn <AboutScreen {...props} />;\n\t\t\tcase 'game':\n\t\t\t\treturn <Game {...props} />;\n\t\t\tdefault:\n\t\t\t\treturn <MainMenuScreen {...props} />;\n\t\t}\n\t}\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (gameState.mapObject !== null && gameState.active) {\n\t\t\t\tsetCurrentScreen('game');\n\t\t\t}\n\t\t},\n\t\t[ gameState.mapObject, gameState.active ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst mapSeedInput = document.getElementById('mapSeedInput');\n\t\t\tif (mapSeedInput) mapSeedInput.value = gameState.seed;\n\t\t},\n\t\t[ gameState.seed ]\n\t);\n\n\treturn (\n\t\t<div key={'appScreen'} className=\"appScreen\">\n\t\t\t<div key={'menuScreen'} className=\"menuScreen\">\n\t\t\t\t<h1 key={'title'} className=\"gameTitle\">\n\t\t\t\t\tTrain Tracks\n\t\t\t\t</h1>\n\t\t\t\t{switchToScreen()}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './js/components/app';\nimport './css/reset.css';\nimport './css/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/curvedtrack.513c0cf6.png\";","module.exports = __webpack_public_path__ + \"static/media/straighttrack.9d34a133.png\";"],"sourceRoot":""}