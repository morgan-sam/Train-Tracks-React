{"version":3,"sources":["img/curvedtrack.png","img/straighttrack.png","js/components/WhiteSquareBackground.jsx","js/styles/tileCornerBtn.js","js/styles/tileAxisBtn.js","js/components/TileButtons.jsx","js/styles/tileCenterBtn.js","js/trackFunctions/railTypeProcessing.js","js/styles/square.js","js/components/MapTile.jsx","js/trackFunctions/railImageProcessing.js","js/components/HeadingTile.jsx","js/components/EmptyTile.jsx","js/components/TransparentTile.jsx","js/utility/utilityFunctions.js","js/trackFunctions/trackParsing.js","js/events/mouse.js","js/components/Board.jsx","js/trackFunctions/trackPlacement.js","js/utility/directionsConversions.js","js/trackFunctions/railDragEvent.js","js/trackFunctions/trackUtilities.js","js/utility/colorFunctions.js","js/components/MapAmbientBackground.jsx","js/components/Map.jsx","js/components/SaveCutout.jsx","js/styles/waveButton.js","js/components/WaveButton.jsx","js/components/MapSeedCopyButton.jsx","js/trackFunctions/addHintTrack.js","js/components/OptionsButtons.jsx","js/utility/localStorage.js","js/components/SaveMapDisplay.jsx","js/components/WinDisplayBackground.jsx","js/components/GameWinDisplay.jsx","js/generation/icon/generateMapIcon.js","js/styles/game.js","js/components/Game.jsx","js/components/Dropdown.jsx","js/screen/deleteMapConfirmScreen.jsx","js/components/ReturnToMainMenuBtn.jsx","js/screen/loadMapScreen.jsx","js/generation/map/generateStartEndPoints.js","js/generation/map/genericGenMapFunctions.js","js/generation/map/checkIfPossibleToReachTargetIterative.js","js/generation/map/generateDefaultTileIndices.js","js/generation/map/mutateMoveArray/removeExitMove.js","js/generation/map/mutateMoveArray/removeAroundExitMoves.js","js/generation/map/mutateMoveArray/removeSealingMoves.js","js/generation/map/mutateMoveArray/removeHookMoves.js","js/generation/map/mutateMoveArray/removeMovesWithLessTilesFromExit.js","js/generation/map/generateMap.js","js/screen/howToPlayScreen.jsx","js/components/DifficultySlider.jsx","js/screen/startMapScreen.jsx","js/screen/aboutScreen.jsx","js/screen/mainMenuScreen.jsx","js/components/Screen.jsx","js/generation/icon/generateUnknownTrackIcon.js","js/generation/icon/generateCrossTrackIcon.js","js/data/defaultState.js","js/components/App.jsx","index.js"],"names":["module","exports","WhiteSquareBackground","props","className","style","position","top","left","height","width","background","zIndex","cornerStyles","BOX_DIM_REM","borderWidth","axisStyles","bottom","right","CornerButton","cornerStyle","cornerType","selectedCornerStyle","opacity","borderStyle","getCornerStyle","tileRemSize","corner","AxisButton","axisStyle","axisType","defaultStyle","WebkitTransform","MozTransform","OTransform","msTransform","transform","transformOrigin","selectedAxisStyle","getAxisStyle","edge","CentreButton","centerStyle","borderRadius","TileButtons","map","el","i","key","convertDirectionTupleToRailTypes","dirArr","previousTileRailType","currentHoverTileRailType","length","convertRailTypeToTrackImage","railType","trackData","trackType","straighttrack","trackRotation","curvedtrack","convertButtonClassToRailType","e","target","classList","contains","getSquareStyle","classname","minHeight","minWidth","display","getSquareCursor","cursor","Square","squareStyling","railImages","useState","hoverTrack","setHoverTrack","getMouseEventObject","tile","currentTarget","id","split","x","parseInt","tileClass","getTileClassFromEvent","mouseButton","buttons","includes","unknownRailImage","trackImage","backgroundImage","setHoverTrackImage","unknown","cross","highlighted","filter","transition","setDefaultTrackImage","backgroundEnabled","coordinate","toString","onContextMenu","preventDefault","onMouseOver","mouseEventObject","hoverStartEvent","squareHoverStart","onMouseLeave","onMouseDown","leftClickEvent","rightClickEvent","bothClickEvent","squareMouseDown","onMouseUp","button","leftReleaseEvent","rightReleaseEvent","squareMouseUp","boxStyling","trackText","HeadingTile","border","alignItems","justifyContent","fillState","WebkitTextFillColor","WebkitTextStrokeColor","convertFillStateToStyle","headerLabel","EmptyTile","emptyTileStyle","TransparentTile","transparentTileStyle","randomIntFromInterval","min","max","Math","floor","random","findIndexOfArrayInMatrix","array","matrix","index","compareArrays","arr1","arr2","arrEqual","every","v","isNonEmptyArray","Array","isArray","removeDuplicateArraysFromMatrix","loopIndex","removeNonDuplicateArraysFromMatrix","removeArraysFromMatrix","arrays","forEach","arr","getRandomSeed","pow","convertRemToPx","rem","parseFloat","getComputedStyle","document","documentElement","fontSize","checkIfArrayIsInMatrix","count","Boolean","randomArrayEntry","halveArray","halfIndex","slice","getAllDefaultTiles","trainTrackMap","defaultTileArr","tracks","defaultTrack","push","getRailTypeOfPlacedTile","placedTracks","getPlacedRailTrackCount","getCorrectTileCount","winning","correctTile","placed","emptyMouseEventsObject","dragArray","rightClickDragValue","Board","defaultHighlights","solutionVisible","saveBoxCutOut","renderMapTile","y","railImage","MapTile","activeMouseEventsObject","staticTile","defaultRailType","mouseEvents","placeCompletedMapTrack","defaultTile","renderCompleteTrack","placeGameActiveMapTrack","checkIfTileIsDefault","renderDefaultTrack","placeUserPlacedTrack","trackDefaultTile","getRowColumnFillstate","axis","defaultTiles","axisNum","placedTrackCount","tilesOnAxis","mapWidth","headerLabels","mapHeight","gameComplete","placeColumnHeader","placeRowHeader","placeMainMapTile","getCombinedArrayOfNewAndOldTiles","newTiles","tilesToPlace","filterNewTilesOfDefaultTiles","mapTracks","alreadyPlacedTiles","filterAlreadyPlacedTracksOfNewTiles","newTile","mapTile","nonConflictingPlacedTracks","track","placedTrackConflict","findDirectionFromMove","currentMove","lastMove","moveDirection","moveCalc","differenceBetweenTwoMoves","moveOne","moveTwo","getTilesInEachDirection","currentTile","generatedTiles","tilesInEachDirection","sign","ceil","directionTiles","getStartingDirection","start","parameters","possibleStartDirections","getPossibleStartDirections","getEndingDirection","end","possibleEndDirections","getPossibleEndDirections","possibleDirections","standardDrag","directions","convertPathToDirectionArray","initialDrag","currentMapInfo","connectedAdjacentTracks","getConnectedAdjacentTracks","doDragTilesContainTracks","draggingFromExistingTiles","draggingFromAdjacentConnectedTile","dragConnections","getDragTilesConnectedTiles","getTrackDirectionPath","convertDirectionsArrayToRailTypes","dragDirection","moveArr","direction","convertMoveArrayToDirections","dragPath","directionToFirstTile","railTypeArray","directionTuple","tileRailType","reversedDragArray","reverse","getSingleDragTilesConnection","dragRailType","getRailTypeOfTile","dragFacingTracks","connections","railTypes","checkIfTwoRailTypesConnected","tiles","tracksOnMap","firstTileTaken","secondTileTaken","connectedTracks","connectedTiles","coordinates","initialTile","adjacentTracks","adjacentTiles","axisMax","getAdjacentTiles","trackCoordinates","getAdjacentTracks","getTileArrayData","tileArray","tileArrayData","adj","ROYGBIV_HEX_CODES","generateRandomRGBColor","minValue","r","g","b","colorToWhiteArray","hexColor","numberOfShades","colorData","colorOneArray","convertHexToRgbArray","colorTwoArray","createColorMatrixByStep","convertRgbArrayToHex","replace","match","Number","rgbArray","value","join","colorMatrix","colorStepValues","getColorStepValues","iteration","color","colorToColorArray","colorOne","colorTwo","roygbivArray","rainbowPart","flat","MapAmbientBackground","colorSelected","themeColor","available","selected","backgroundShapes","visualEffects","colorArray","numberOfShapes","backgroundShapeStyle","backgroundColor","animation","lightenedColor","Map","setPlacedTracks","setGameWon","savePopUp","setCurrentMapInfo","useRef","currentHoverTile","previousHoverTile","setRightClickDragValue","tileValue","current","determineRemoveOrPlaceX","removePlacedTrack","placeTile","checkIfHoverToAdjacent","hoverAdjacent","hoverWhileHoldingLeftMouseButton","items","concat","draggedTilesToPlace","truncatedDragArray","railDragEvent","placeMultipleTiles","hoverWhileHoldingRightMouseButton","hoverWhileHoldingBothMouseButtons","determineIfToPlaceT","a","allTilesOnMap","checkIfGameComplete","filteredTracks","correctTileCount","defaultTileCount","placedRailTrackCount","checkIfPlacedTilesAllCorrect","useEffect","defaultTracks","o","undefined","checkIfHoverTileChanged","updateHoverTileState","gridTemplateColumns","gridTemplateRows","SaveCutout","alt","draggable","src","rectangleParameters","rectangleCount","startRotation","rotationOffset","this","startTransition","endTransition","transitionOffset","cubicBezierFunction","WaveButton","onClick","text","bounceDelay","clickDelay","hovered","setHoveredState","buttonPressed","setPressedState","bounceTimer","clickTimer","btnDefaultStyle","overflow","outline","boxShadow","btnPressedStyle","rectangleStyle","textStyle","whiteBackground","getWaveButtonStyles","endRotation","rectangleArray","recCount","blueRecColors","purpleRecColors","curRecStyle","createRectangleArray","btnStyle","setTimeout","clearTimeout","MapSeedCopyButton","navigator","clipboard","writeText","seed","getRandomNonPlacedTrack","placedTracksArray","placedRailTypesArray","unplacedTracks","replaceOldTrackInArray","newTrack","OptionsButtons","gameState","setDisplay","inGameNewMap","quitGame","mapObject","newTrackArray","randomTrack","addHintTrack","winPopUp","saveMapToLocal","mapToSave","localMaps","JSON","parse","window","localStorage","getItem","newMapArray","setItem","stringify","getLocalStorageMaps","deleteLocalSavedMap","deleteMapSeed","deleteAllLocalSavedMaps","SaveMapDisplay","mapSaveName","setMapSaveName","onChange","name","WinDisplayBackground","balloonContainer","delay","balloonStyle","animationDelay","GameWinDisplay","generateMapIcon","complete","options","headers","dimensions","cutOut","generateCanvas","canvas","image","toDataURL","generateMapBackground","remSize","getTrackImages","Promise","all","loadImage","generateCanvasObject","createElement","context","getContext","gridMapWidth","gridMapHeight","iconTileWidth","iconTileHeight","straightTrackImage","curvedTrackImage","iconTile","gridMap","straight","curved","canvasObj","drawWhiteBackground","drawAllTracks","drawGrid","cutOutBackgroundBox","imgURL","resolve","reject","img","Image","onload","onerror","fillStyle","fillRect","rotation","getRotationFromRailType","save","translate","rotate","PI","drawImage","restore","drawRotatedImage","drawStraightImage","drawHeaderBox","strokeRect","drawObj","drawHeaderBoxBackground","drawHeaderBoxText","font","textAlign","textBaseline","fillText","getHeaderBoxText","headerText","clearRect","boxWidth","boxHeight","getGameMapContainerStyle","mapSize","marginBottom","WebkitUserSelect","MozUserSelect","msUserSelect","userSelect","boxSizing","Game","mapSeed","gameWon","commonProps","size","Dropdown","placeholder","onHover","listOpen","setListOpen","defaultValue","setDefaultValue","hoveredOption","setHoveredOption","containerStyle","lineHeight","listItemStyle","borderTop","addEventListener","whileDropdownOpenClick","removeEventListener","optionSelected","item","optionHovered","dropDownList","renderDropDownList","DeleteMapConfirmScreen","deleteModeOnAll","mapIcon","quitToLoadScreen","ReturnToMainMenuBtn","setCurrentScreen","renderSavedMapsDropdownValues","dropDownValues","LoadMapScreen","screenState","setScreenState","setMapIcon","displaySavedGameMapIcon","setGameState","active","getEdgeCoordinatesClockwiseOrder","getLegalMoves","genMap","adjacentMoves","legalMoves","removeOutOfBoundsMoves","removeMovesToVisitedTiles","moves","fill","checkIfPossibleToReachTargetIterative","move","currentMoves","apply","modifyDefinitiveIndices","definitiveIndices","mapInfo","mapLength","difficulty","helperIndices","getHelperIndices","indices","shuffled","temp","remaining","shuffleArray","keys","indexOf","getStartAndEndIndices","allTiles","getAllTwoByTwoDefaultIndices","defaultCoordinates","iterateThroughEachPossibleSquare","defaultIndices","removeDefaultTilesWithMoreThanOneAdjacent","Set","nonDefaultTrackTiles","getSquareDefaultCoordinates","currentDefaultTiles","moreThanOneAdj","getAdjacentDefaultTileCount","adjTiles","offset","squares","splitMapIntoSquares","fullSquares","filterForFullSquares","getRandomNonDuplicateCoordinatesFromMatrix","square","checkIfSquareIsFull","arrayOfMatrices","matricesUnique","mat","commonArrays","combinedArrays","findCommonArraysOfAllMatrices","getTwoByTwoSquare","removeExitMove","removeAroundExitMoves","checkIfMoveIsAroundExitTile","tilesAroundExit","chooseSurroundOrAdjacentExitTiles","moveIsAdjExit","checkIfTilesAdjacent","getTilesSurroundingExit","getTilesAdjacentAndExit","getSurroundingTiles","removeSealingMoves","checkIfMapCovered","checkIfMoveSeals","modifier","mapCoverage","newGenMapObj","nextLegalMoves","removeHookMoves","checkIfMoveWillBeHook","prospectiveMove","lastThreeTiles","getLastSpecifiedAmountOfTiles","prospectiveLastFourTiles","getSeriesOfDirectionsFromMoveArray","checkIfMoveArrayFormsHook","unshift","numberOfTiles","moveArray","movesFormHook","removeMovesWithLessTilesFromExit","moveWithMore","getMovesWithMoreTilesAwayFromExit","pathLengths","getMinimumDistanceToExit","getIndicesOfLargestElementsInArray","largestValue","largestIndices","generateNewMap","passedParameters","generateMapTiles","dirs","directionsToTrackRailType","currentMoveDir","getDirectionOfEachMove","defaultTilesIndices","optionalIndices","mandatoryIndices","generateDefaultTileIndices","generateMapHeaders","isDefaultTrack","edges","splice","generateStartEndPoints","mapComplete","nextMove","newMove","checkIfOnlyLegalMoveIsExit","mutateMoveArray","endCoordinate","moveMutateFunctions","mutatedMoveArray","currentFunc","mapHeaders","HowToPlayScreen","mobileView","console","log","maps","setMaps","emptyMap","completeMap","empty","getMaps","DifficultySlider","hover","setHover","labelDefaultStyle","labelHoverStyle","labelStyle","type","getMapSizeOptions","mapSizeOptions","StartMapScreen","padding","setThemeColor","SLIDER_WIDTH_REM","defaultChecked","setVisualEffects","checked","generateMap","AboutScreen","href","MainMenuScreen","Screen","currentScreen","screen","getScreenDisplay","generateUnknownTrackIcon","tilePixelSize","clearCircle","radius","beginPath","arc","clip","generateCrossTrackIcon","clearCross","rect","defaultGameState","App","innerHeight","innerWidth","setDimensions","setMobileView","gameParameters","mapSeedInput","getElementById","screenProps","handleResize","ReactDOM","render"],"mappings":"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","file":"static/js/main.57df904d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/curvedtrack.513c0cf6.png\";","module.exports = __webpack_public_path__ + \"static/media/straighttrack.9d34a133.png\";","import React from 'react';\n\nexport const WhiteSquareBackground = (props) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={'white-background'}\n\t\t\tstyle={{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '0',\n\t\t\t\tleft: '0',\n\t\t\t\theight: '100%',\n\t\t\t\twidth: '100%',\n\t\t\t\tbackground: 'white',\n\t\t\t\tzIndex: '-2'\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default WhiteSquareBackground;\n","export const getCornerStyle = (BOX_DIM_REM, cornerType) => {\n\tconst defaultStyle = {\n\t\tzIndex: '1',\n\t\topacity: '0',\n\t\theight: '0',\n\t\twidth: '0',\n\t\tborderStyle: 'solid',\n\t\tposition: 'absolute'\n\t};\n\tconst selectedCornerStyle = cornerStyles(BOX_DIM_REM)[cornerType];\n\treturn { ...defaultStyle, ...selectedCornerStyle };\n};\n\nconst cornerStyles = (BOX_DIM_REM) => {\n\treturn {\n\t\t'top-left': {\n\t\t\ttop: '0',\n\t\t\tleft: '0',\n\t\t\tborderWidth: `0 0 ${BOX_DIM_REM / 2}rem ${BOX_DIM_REM / 2}rem`\n\t\t},\n\t\t'top-right': {\n\t\t\ttop: '0',\n\t\t\tleft: `${BOX_DIM_REM / 2}rem`,\n\t\t\tborderWidth: `0 ${BOX_DIM_REM / 2}rem ${BOX_DIM_REM / 2}rem 0`\n\t\t},\n\n\t\t'bottom-left': {\n\t\t\ttop: `${BOX_DIM_REM / 2}rem`,\n\t\t\tleft: '0',\n\t\t\tborderWidth: `${BOX_DIM_REM / 2}rem 0 0 ${BOX_DIM_REM / 2}rem`\n\t\t},\n\n\t\t'bottom-right': {\n\t\t\ttop: `${BOX_DIM_REM / 2}rem`,\n\t\t\tleft: `${BOX_DIM_REM / 2}rem`,\n\t\t\tborderWidth: `${BOX_DIM_REM / 2}rem ${BOX_DIM_REM / 2}rem 0 0`\n\t\t}\n\t};\n};\n","export const getAxisStyle = (BOX_DIM_REM, axisType) => {\n\tconst defaultStyle = {\n\t\topacity: '0',\n\t\tposition: 'absolute',\n\t\theight: `${BOX_DIM_REM / 2 * 0.707106781}rem`,\n\t\twidth: `${BOX_DIM_REM / 2 * 0.707106781}rem`,\n\t\tzIndex: '1',\n\t\tWebkitTransform: 'rotate(45deg) translate(-50%, -50%)',\n\t\tMozTransform: 'rotate(45deg) translate(-50%, -50%)',\n\t\tOTransform: 'rotate(45deg) translate(-50%, -50%)',\n\t\tmsTransform: 'rotate(45deg) translate(-50%, -50%)',\n\t\ttransform: 'rotate(45deg) translate(-50%, -50%)',\n\t\ttransformOrigin: 'top left'\n\t};\n\tconst selectedAxisStyle = axisStyles()[axisType];\n\treturn { ...defaultStyle, ...selectedAxisStyle };\n};\n\nconst axisStyles = () => {\n\treturn {\n\t\ttop: {\n\t\t\ttop: '25%',\n\t\t\tleft: '50%'\n\t\t},\n\n\t\tleft: {\n\t\t\ttop: '50%',\n\t\t\tleft: '25%'\n\t\t},\n\n\t\tbottom: {\n\t\t\ttop: '75%',\n\t\t\tleft: '50%'\n\t\t},\n\n\t\tright: {\n\t\t\ttop: '50%',\n\t\t\tleft: '75%'\n\t\t}\n\t};\n};\n","import React from 'react';\nimport { getCornerStyle } from 'js/styles/tileCornerBtn';\nimport { getAxisStyle } from 'js/styles/tileAxisBtn';\nimport { getCenterStyle } from 'js/styles/tileCenterBtn';\n\nconst CornerButton = (props) => {\n\tconst cornerStyle = getCornerStyle(props.tileRemSize, props.corner);\n\treturn <div className={`cornerButton ${props.corner}`} style={cornerStyle} />;\n};\n\nconst AxisButton = (props) => {\n\tconst axisStyle = getAxisStyle(props.tileRemSize, props.edge);\n\treturn <div className={`axisButton ${props.edge}`} style={axisStyle} />;\n};\n\nconst CentreButton = (props) => {\n\tconst centerStyle = getCenterStyle(props.tileRemSize);\n\treturn <div className={`centreButton`} style={centerStyle} />;\n};\n\nexport const TileButtons = (props) => {\n\tconst corners = [ 'top-left', 'top-right', 'bottom-left', 'bottom-right' ];\n\tconst edges = [ 'top', 'right', 'bottom', 'left' ];\n\treturn [\n\t\tcorners.map((el, i) => <CornerButton key={`corner:${i}`} corner={el} tileRemSize={props.tileRemSize} />),\n\t\tedges.map((el, i) => <AxisButton key={`edge:${i}`} edge={el} tileRemSize={props.tileRemSize} />),\n\t\t<CentreButton key={'center'} tileRemSize={props.tileRemSize} />\n\t];\n};\n\nexport default TileButtons;\n","export const getCenterStyle = (BOX_DIM_REM) => {\n\treturn {\n\t\topacity: '0',\n\t\tposition: 'absolute',\n\t\ttop: '50%',\n\t\tleft: '50%',\n\t\ttransform: 'translate(-50%, -50%)',\n\t\theight: `${BOX_DIM_REM / 5 * 2}rem`,\n\t\twidth: `${BOX_DIM_REM / 5 * 2}rem`,\n\t\tzIndex: '1',\n\t\tborderRadius: '5rem'\n\t};\n};\n","import curvedtrack from 'img/curvedtrack.png';\nimport straighttrack from 'img/straighttrack.png';\n\nexport const convertDirectionTupleToRailTypes = (dirArr) => {\n\tlet previousTileRailType, currentHoverTileRailType;\n\n\tif (dirArr.length === 1) {\n\t\tif (dirArr[0] % 2 === 0) previousTileRailType = 'vertical';\n\t\tif (dirArr[0] % 2 === 1) previousTileRailType = 'horizontal';\n\n\t\tcurrentHoverTileRailType = previousTileRailType;\n\t}\n\tif (dirArr.length === 2) {\n\t\tif (dirArr[0] % 2 === 0 && dirArr[1] % 2 === 0) previousTileRailType = 'vertical';\n\t\tif (dirArr[0] % 2 === 1 && dirArr[1] % 2 === 1) previousTileRailType = 'horizontal';\n\n\t\tif ((dirArr[0] === 0 && dirArr[1] === 1) || (dirArr[0] === 3 && dirArr[1] === 2))\n\t\t\tpreviousTileRailType = 'bottomRightCorner';\n\t\tif ((dirArr[0] === 1 && dirArr[1] === 2) || (dirArr[0] === 0 && dirArr[1] === 3))\n\t\t\tpreviousTileRailType = 'bottomLeftCorner';\n\t\tif ((dirArr[0] === 2 && dirArr[1] === 3) || (dirArr[0] === 1 && dirArr[1] === 0))\n\t\t\tpreviousTileRailType = 'topLeftCorner';\n\t\tif ((dirArr[0] === 3 && dirArr[1] === 0) || (dirArr[0] === 2 && dirArr[1] === 1))\n\t\t\tpreviousTileRailType = 'topRightCorner';\n\n\t\tcurrentHoverTileRailType = dirArr[1] % 2 === 0 ? 'vertical' : 'horizontal';\n\t}\n\treturn [ previousTileRailType, currentHoverTileRailType ];\n};\n\nexport const convertRailTypeToTrackImage = (railType) => {\n\tlet trackData;\n\tswitch (railType) {\n\t\tcase 'vertical':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: straighttrack,\n\t\t\t\ttrackRotation: 0\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'horizontal':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: straighttrack,\n\t\t\t\ttrackRotation: 90\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'bottomLeftCorner':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: curvedtrack,\n\t\t\t\ttrackRotation: 0\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'topLeftCorner':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: curvedtrack,\n\t\t\t\ttrackRotation: 90\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'topRightCorner':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: curvedtrack,\n\t\t\t\ttrackRotation: 180\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'bottomRightCorner':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: curvedtrack,\n\t\t\t\ttrackRotation: 270\n\t\t\t};\n\t\t\tbreak;\n\t\tcase '?':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: railType,\n\t\t\t\ttrackRotation: 'none'\n\t\t\t};\n\t\t\tbreak;\n\t\tcase 'X':\n\t\t\ttrackData = {\n\t\t\t\ttrackType: railType,\n\t\t\t\ttrackRotation: 'none'\n\t\t\t};\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttrackData = { trackType: 'none', trackRotation: 'none' };\n\t}\n\treturn trackData;\n};\n\nexport const convertButtonClassToRailType = (e) => {\n\tlet railType;\n\tif (e.target.classList.contains('axisButton')) {\n\t\tif (e.target.classList.contains('top') || e.target.classList.contains('bottom')) {\n\t\t\trailType = 'vertical';\n\t\t}\n\t\tif (e.target.classList.contains('right') || e.target.classList.contains('left')) {\n\t\t\trailType = 'horizontal';\n\t\t}\n\t}\n\tif (e.target.classList.contains('cornerButton')) {\n\t\tif (e.target.classList.contains('top-left')) railType = 'topLeftCorner';\n\t\tif (e.target.classList.contains('top-right')) railType = 'topRightCorner';\n\t\tif (e.target.classList.contains('bottom-left')) railType = 'bottomLeftCorner';\n\t\tif (e.target.classList.contains('bottom-right')) railType = 'bottomRightCorner';\n\t}\n\tif (e.target.classList.contains('centreButton')) {\n\t\trailType = '?';\n\t}\n\treturn railType;\n};\n\nexport const checkIfTwoRailTypesConnected = (direction, railTypes) => {\n\tswitch (direction) {\n\t\tcase 0:\n\t\t\tif (\n\t\t\t\t((railTypes[0] === 'vertical' ||\n\t\t\t\t\trailTypes[0] === 'topLeftCorner' ||\n\t\t\t\t\trailTypes[0] === 'topRightCorner') &&\n\t\t\t\t\trailTypes[1] === 'vertical') ||\n\t\t\t\t(railTypes[1] === 'bottomLeftCorner' || railTypes[1] === 'bottomRightCorner')\n\t\t\t)\n\t\t\t\treturn true;\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tif (\n\t\t\t\t(railTypes[0] === 'horizontal' ||\n\t\t\t\t\trailTypes[0] === 'topRightCorner' ||\n\t\t\t\t\trailTypes[0] === 'bottomRightCorner') &&\n\t\t\t\t(railTypes[1] === 'horizontal' ||\n\t\t\t\t\trailTypes[1] === 'topLeftCorner' ||\n\t\t\t\t\trailTypes[1] === 'bottomLeftCorner')\n\t\t\t)\n\t\t\t\treturn true;\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif (\n\t\t\t\t((railTypes[0] === 'vertical' ||\n\t\t\t\t\trailTypes[0] === 'bottomLeftCorner' ||\n\t\t\t\t\trailTypes[0] === 'bottomRightCorner') &&\n\t\t\t\t\trailTypes[1] === 'vertical') ||\n\t\t\t\t(railTypes[1] === 'topLeftCorner' || railTypes[1] === 'topRightCorner')\n\t\t\t)\n\t\t\t\treturn true;\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tif (\n\t\t\t\t(railTypes[0] === 'horizontal' ||\n\t\t\t\t\trailTypes[0] === 'topLeftCorner' ||\n\t\t\t\t\trailTypes[0] === 'bottomLeftCorner') &&\n\t\t\t\t(railTypes[1] === 'horizontal' ||\n\t\t\t\t\trailTypes[1] === 'topRightCorner' ||\n\t\t\t\t\trailTypes[1] === 'bottomRightCorner')\n\t\t\t)\n\t\t\t\treturn true;\n\t\t\tbreak;\n\t\tdefault:\n\t}\n\treturn false;\n};\n\nexport const checkIfAdjacentTileConnected = (position, railType) => {\n\tif (position === 0) {\n\t\tif (railType === 'vertical' || railType === 'bottomLeftCorner' || railType === 'bottomRightCorner') {\n\t\t\treturn true;\n\t\t}\n\t}\n\tif (position === 3) {\n\t\tif (railType === 'horizontal' || railType === 'bottomRightCorner' || railType === 'topRightCorner') {\n\t\t\treturn true;\n\t\t}\n\t}\n\tif (position === 2) {\n\t\tif (railType === 'vertical' || railType === 'topLeftCorner' || railType === 'topRightCorner') {\n\t\t\treturn true;\n\t\t}\n\t}\n\tif (position === 1) {\n\t\tif (railType === 'horizontal' || railType === 'topLeftCorner' || railType === 'bottomLeftCorner') {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\n","export const getSquareStyle = (BOX_DIM_REM, classname) => {\n\treturn {\n\t\tminHeight: `${BOX_DIM_REM}rem`,\n\t\tminWidth: `${BOX_DIM_REM}rem`,\n\t\tdisplay: 'flex',\n\t\tposition: 'relative',\n\t\ttop: '0',\n\t\tleft: '0',\n\t\theight: `${BOX_DIM_REM}rem`,\n\t\twidth: `${BOX_DIM_REM}rem`,\n\t\t...getSquareCursor(classname)\n\t};\n};\n\nconst getSquareCursor = (classname) => {\n\tif (classname === 'mapTile') return { cursor: 'cell' };\n\telse if (classname === 'defaultTrack') return { cursor: 'auto' };\n};\n","import React, { useState } from 'react';\nimport WhiteSquareBackground from 'js/components/WhiteSquareBackground';\nimport TileButtons from 'js/components/TileButtons';\nimport { convertButtonClassToRailType } from 'js/trackFunctions/railTypeProcessing';\nimport { setHoverTrackImage, setPlacedTrackImage, setDefaultTrackImage } from 'js/trackFunctions/railImageProcessing';\nimport { getSquareStyle } from 'js/styles/square';\n\nexport const Square = (props) => {\n\tconst [ hoverTrack, setHoverTrack ] = useState(null);\n\n\t///////////// SQUARE - MOUSE EVENTS FUNCTIONS /////////////\n\n\tconst getMouseEventObject = (e) => {\n\t\tconst mouseEventObject = {\n\t\t\ttile: e.currentTarget.id.split(',').map((x) => parseInt(x)),\n\t\t\trailType: convertButtonClassToRailType(e),\n\t\t\ttileClass: getTileClassFromEvent(e),\n\t\t\tmouseButton: e.buttons\n\t\t};\n\t\treturn mouseEventObject;\n\t};\n\n\tconst squareHoverStart = (e) => {\n\t\tconst mouseEventObject = getMouseEventObject(e);\n\t\tprops.hoverStartEvent(mouseEventObject);\n\t\tif (e.buttons === 0) setHoverTrack(mouseEventObject.railType);\n\t};\n\n\tconst squareHoverEnd = (e) => setHoverTrack(null);\n\n\tconst squareMouseDown = (e) => {\n\t\tconst mouseEventObject = getMouseEventObject(e);\n\t\tif (mouseEventObject.mouseButton === 1) props.leftClickEvent(mouseEventObject);\n\t\tif (mouseEventObject.mouseButton === 2) props.rightClickEvent(mouseEventObject);\n\t\tif (mouseEventObject.mouseButton === 3) props.bothClickEvent(mouseEventObject);\n\t};\n\n\tconst squareMouseUp = (e) => {\n\t\tconst mouseEventObject = getMouseEventObject(e);\n\t\tif (e.button === 0) props.leftReleaseEvent(mouseEventObject);\n\t\tif (e.button === 2) props.rightReleaseEvent();\n\t};\n\n\t///////////// SQUARE - CLASSNAME CONVERSION FUNCTIONS /////////////\n\n\tconst getTileClassFromEvent = (e) => {\n\t\tconst classList = e.currentTarget.className;\n\t\tif (classList.includes('mapTile')) return 'mapTile';\n\t\telse if (classList.includes('defaultTrack')) return 'defaultTrack';\n\t\telse return null;\n\t};\n\n\t///////////// SQUARE - RENDER FUNCTIONS /////////////\n\n\tlet squareStyling, trackText, boxStyling;\n\n\tif (!props.trackData && hoverTrack) squareStyling = setHoverTrackImage(hoverTrack, props.railImages.unknown);\n\n\tif (props.className === 'mapTile' && props.trackData)\n\t\tsquareStyling = setPlacedTrackImage(props.trackData, props.railImages);\n\n\tif (\n\t\t(props.trackData && props.className === 'defaultTrack') ||\n\t\t(props.trackData && props.className === 'completeTrack')\n\t)\n\t\tsquareStyling = setDefaultTrackImage(props.trackData, props.highlighted);\n\n\tlet backgroundEnabled = true;\n\tif (props.className === 'mapTile') {\n\t\tif (props.trackData) backgroundEnabled = props.trackData.trackType.length !== 1;\n\t\telse if (hoverTrack) backgroundEnabled = hoverTrack !== '?';\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tid={props.coordinate.toString()}\n\t\t\tstyle={getSquareStyle(props.tileRemSize, props.className)}\n\t\t\tclassName={`square ${props.className}`}\n\t\t\tonContextMenu={(e) => e.preventDefault()}\n\t\t\tonMouseOver={(e) => squareHoverStart(e)}\n\t\t\tonMouseLeave={(e) => squareHoverEnd(e)}\n\t\t\tonMouseDown={(e) => squareMouseDown(e)}\n\t\t\tonMouseUp={(e) => squareMouseUp(e)}\n\t\t>\n\t\t\t<div className={`tile-button-container`} style={boxStyling}>\n\t\t\t\t<TileButtons {...props} />\n\t\t\t</div>\n\t\t\t<div className={'tile-display'} style={squareStyling}>\n\t\t\t\t{trackText}\n\t\t\t</div>\n\t\t\t{backgroundEnabled && <WhiteSquareBackground {...props} />}\n\t\t</div>\n\t);\n};\n\nexport default Square;\n","import { convertRailTypeToTrackImage } from 'js/trackFunctions/railTypeProcessing';\n\nexport const setHoverTrackImage = (hoverTrack, unknownRailImage) => {\n\tlet squareStyling;\n\tconst trackImage = convertRailTypeToTrackImage(hoverTrack);\n\tif (trackImage.trackType !== '?') {\n\t\tsquareStyling = {\n\t\t\tbackgroundImage: `url(${trackImage.trackType})`,\n\t\t\ttransform: `rotate(${trackImage.trackRotation}deg)`,\n\t\t\topacity: 0.5\n\t\t};\n\t} else {\n\t\tsquareStyling = {\n\t\t\tbackgroundImage: `url(${unknownRailImage})`,\n\t\t\topacity: 1\n\t\t};\n\t}\n\treturn squareStyling;\n};\n\nexport const setPlacedTrackImage = (trackData, railImages) => {\n\tlet squareStyling;\n\tif (trackData.trackType !== '?' && trackData.trackType !== 'X') {\n\t\tsquareStyling = {\n\t\t\tbackgroundImage: `url(${trackData.trackType})`,\n\t\t\ttransform: `rotate(${trackData.trackRotation}deg)`,\n\t\t\topacity: 1\n\t\t};\n\t} else if (trackData.trackType === '?') {\n\t\tsquareStyling = {\n\t\t\tbackgroundImage: `url(${railImages.unknown})`,\n\t\t\topacity: 1\n\t\t};\n\t} else {\n\t\tsquareStyling = {\n\t\t\tbackgroundImage: `url(${railImages.cross})`,\n\t\t\topacity: 1\n\t\t};\n\t}\n\treturn squareStyling;\n};\n\nexport const setDefaultTrackImage = (trackData, highlighted) => {\n\tlet squareStyling;\n\tsquareStyling = {\n\t\tbackgroundImage: `url(${trackData.trackType})`,\n\t\ttransform: `rotate(${trackData.trackRotation}deg)`,\n\t\topacity: 1,\n\t\tfilter: highlighted ? 'hue-rotate(200deg) saturate(10)' : 'none',\n\t\ttransition: 'filter 1s ease-in-out'\n\t};\n\treturn squareStyling;\n};\n","import React from 'react';\nimport { getSquareStyle } from 'js/styles/square';\n\nexport const HeadingTile = (props) => {\n\tconst convertFillStateToStyle = (fillState) => {\n\t\tswitch (fillState) {\n\t\t\tcase 'underfilled':\n\t\t\t\treturn {\n\t\t\t\t\tWebkitTextFillColor: 'white',\n\t\t\t\t\tWebkitTextStrokeColor: 'black'\n\t\t\t\t};\n\t\t\tcase 'full':\n\t\t\t\treturn {\n\t\t\t\t\tWebkitTextFillColor: 'green',\n\t\t\t\t\tWebkitTextStrokeColor: 'white'\n\t\t\t\t};\n\t\t\tcase 'overfilled':\n\t\t\t\treturn {\n\t\t\t\t\tWebkitTextFillColor: 'red',\n\t\t\t\t\tWebkitTextStrokeColor: 'white'\n\t\t\t\t};\n\t\t\tdefault:\n\t\t\t\treturn {\n\t\t\t\t\tWebkitTextFillColor: 'white',\n\t\t\t\t\tWebkitTextStrokeColor: 'black'\n\t\t\t\t};\n\t\t}\n\t}\n\n\tconst headerTextBoxStyle = {\n\t\twidth: '100%',\n\t\theight: '100%',\n\t\tborder: '1px solid black',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center'\n\t};\n\n\treturn (\n\t\t<div style={getSquareStyle(props.tileRemSize)} className={`square`} onContextMenu={(e) => e.preventDefault()}>\n\t\t\t<div style={headerTextBoxStyle}>\n\t\t\t\t<p className=\"boxLabel\" style={convertFillStateToStyle(props.fillState)}>\n\t\t\t\t\t{props.headerLabel}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default HeadingTile;\n","import React from 'react';\nimport { getSquareStyle } from 'js/styles/square';\n\nexport const EmptyTile = (props) => {\n\tconst emptyTileStyle = {\n\t\t...getSquareStyle(props.tileRemSize)\n\t};\n\tconst squareStyling = {\n\t\tborder: '1px solid black',\n\t\tzIndex: '1'\n\t};\n\treturn (\n\t\t<div style={emptyTileStyle}>\n\t\t\t<div className={'tile-display'} style={squareStyling} />\n\t\t</div>\n\t);\n};\n\nexport default EmptyTile;\n","import React from 'react';\nimport { getSquareStyle } from 'js/styles/square';\n\nexport const TransparentTile = (props) => {\n\tconst transparentTileStyle = {\n\t\t...getSquareStyle(props.tileRemSize),\n\t\tzIndex: '-2',\n\t\topacity: '0'\n\t};\n\n\treturn <div style={transparentTileStyle} />;\n};\n\nexport default TransparentTile;\n","///UTILITY FUNCTIONS\n\nexport const randomIntFromInterval = (min, max) => {\n\treturn Math.floor(Math.random() * (max - min + 1) + min); // min and max included\n};\n\nexport const removeArrayValue = (array, value) => {\n\tif (isNonEmptyArray(array)) {\n\t\tconst index = array.indexOf(value);\n\t\tif (index > -1) {\n\t\t\tarray.splice(index, 1);\n\t\t}\n\t\treturn array;\n\t} else {\n\t\treturn null;\n\t}\n};\n\nexport const findIndexOfArrayInMatrix = (array, matrix) => {\n\tlet index = -1;\n\tfor (let i = 0; i < matrix.length; i++) {\n\t\tif (compareArrays(array, matrix[i])) index = i;\n\t}\n\treturn index;\n};\n\nexport const compareArrays = (arr1, arr2) => {\n\tlet arrEqual = false;\n\tif (arr1.length === arr2.length) {\n\t\tarrEqual = arr1.every((v, i) => v === arr2[i]);\n\t}\n\treturn arrEqual;\n};\n\nexport const getIndexOfLongestArrayInMatrix = (matrix) => {\n\tlet index = -1;\n\tlet curMaxLength = 0;\n\tfor (let i = 0; i < matrix.length; i++) {\n\t\tif (matrix[i].length > curMaxLength) {\n\t\t\tindex = i;\n\t\t\tcurMaxLength = matrix[i].length;\n\t\t}\n\t}\n\treturn index;\n};\n\nexport const isNonEmptyArray = (array) => {\n\t//return false if equal to [] or data type other than array\n\treturn Array.isArray(array) && array.length > 0;\n};\n\nexport const print = (value) => {\n\tconsole.log(JSON.parse(JSON.stringify(value)));\n};\n\nexport const removeDuplicateArraysFromMatrix = (matrix) => {\n\treturn matrix.filter((el, loopIndex) => {\n\t\tconst elIndex = findIndexOfArrayInMatrix(el, matrix);\n\t\tif (loopIndex === elIndex) return true;\n\t\telse return false;\n\t});\n};\n\nexport const removeNonDuplicateArraysFromMatrix = (matrix) => {\n\treturn matrix.filter((el, loopIndex) => {\n\t\tconst elIndex = findIndexOfArrayInMatrix(el, matrix);\n\t\tif (loopIndex === elIndex) return false;\n\t\telse return true;\n\t});\n};\n\nexport const removeArraysFromMatrix = (arrays, matrix) => {\n\tarrays.forEach((arr) => {\n\t\tmatrix = matrix.filter((el) => !compareArrays(el, arr));\n\t});\n\treturn matrix;\n};\n\nexport const getRandomSeed = () => {\n\treturn Math.floor(Math.random() * Math.pow(10, 15));\n};\n\nexport const convertRemToPx = (rem) => {\n\treturn rem * parseFloat(getComputedStyle(document.documentElement).fontSize);\n};\n\nexport const checkIfArrayIsInMatrix = (array, matrix) => {\n\tconst count = matrix.filter((el) => compareArrays(array, el));\n\treturn Boolean(count.length);\n};\n\nexport const findCommonArraysOfAllMatrices = (arrayOfMatrices) => {\n\tconst matricesUnique = arrayOfMatrices.map((mat) => removeDuplicateArraysFromMatrix(mat));\n\tlet commonArrays = matricesUnique[0];\n\tfor (let i = 0; i < matricesUnique.length - 1; i++) {\n\t\tlet combinedArrays = [ ...commonArrays, ...matricesUnique[i + 1] ];\n\t\tcommonArrays = removeNonDuplicateArraysFromMatrix(combinedArrays);\n\t}\n\treturn commonArrays;\n};\n\nexport const randomArrayEntry = (array) => {\n\treturn array[randomIntFromInterval(0, array.length - 1)];\n};\n\nexport const shiftPushArray = (array, items) => {\n\treturn array.slice(items.length).concat(items);\n};\n\nexport const halveArray = (array) => {\n\tconst halfIndex = Math.floor(array.length / 2);\n\treturn array.slice(0, halfIndex);\n};\n\nexport const shuffleArray = (array) => {\n\tlet remaining = array.length;\n\tlet temp, index;\n\twhile (remaining) {\n\t\tindex = Math.floor(Math.random() * remaining);\n\t\tremaining--;\n\t\ttemp = array[remaining];\n\t\tarray[remaining] = array[index];\n\t\tarray[index] = temp;\n\t}\n\n\treturn array;\n};\n","import { compareArrays } from 'js/utility/utilityFunctions';\n\nexport const getAllDefaultTiles = (trainTrackMap) => {\n\tlet defaultTileArr = [];\n\ttrainTrackMap.tracks.forEach((el) => {\n\t\tif (el.defaultTrack) defaultTileArr.push(el);\n\t});\n\treturn defaultTileArr;\n};\n\nexport const getRailTypeOfPlacedTile = (coordinate, placedTracks) => {\n\tlet railType = null;\n\tplacedTracks.forEach((el) => {\n\t\tif (el.tile[0] === coordinate[0] && el.tile[1] === coordinate[1]) railType = el.railType;\n\t});\n\treturn railType;\n};\n\nexport const checkIfPlacedTilesAllCorrect = (trainTrackMap, placedTracks) => {\n\tconst correctTileCount = getCorrectTileCount(trainTrackMap, placedTracks);\n\tconst defaultTileCount = getAllDefaultTiles(trainTrackMap).length;\n\tconst placedRailTrackCount = getPlacedRailTrackCount(placedTracks);\n\tif (\n\t\tcorrectTileCount === trainTrackMap.tracks.length &&\n\t\ttrainTrackMap.tracks.length === placedRailTrackCount + defaultTileCount\n\t) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\n\nconst getPlacedRailTrackCount = (placedTracks) => {\n\tconst placedTiles = placedTracks;\n\tconst placedRailTrackCount = placedTiles.filter((el) => el.railType !== 'X').length;\n\treturn placedRailTrackCount;\n};\n\nconst getCorrectTileCount = (trainTrackMap, placedTracks) => {\n\treturn trainTrackMap.tracks.filter((winning) => {\n\t\tlet correctTile = winning.defaultTrack;\n\t\tplacedTracks.forEach((placed) => {\n\t\t\tif (compareArrays(winning.tile, placed.tile) && winning.railType === placed.railType) correctTile = true;\n\t\t});\n\t\treturn correctTile;\n\t}).length;\n};\n","export const emptyMouseEventsObject = {\n\tleftClickEvent: () => null,\n\trightClickEvent: () => null,\n\tbothClickEvent: () => null,\n\tleftReleaseEvent: () => null,\n\trightReleaseEvent: () => null,\n\thoverStartEvent: () => null,\n\tdragArray: null,\n\trightClickDragValue: null\n};\n","import React, { useState, useEffect } from 'react';\n\nimport MapTile from 'js/components/MapTile';\nimport HeadingTile from 'js/components/HeadingTile';\nimport EmptyTile from 'js/components/EmptyTile';\nimport TransparentTile from 'js/components/TransparentTile';\n\nimport { convertRailTypeToTrackImage } from 'js/trackFunctions/railTypeProcessing';\nimport { getAllDefaultTiles } from 'js/trackFunctions/trackParsing';\n\nimport { emptyMouseEventsObject } from 'js/events/mouse';\n\nexport const Board = (props) => {\n\tconst { defaultHighlights, solutionVisible, saveBoxCutOut } = props.display;\n\n\tconst renderMapTile = (x, y, railImage, solutionVisible) => {\n\t\treturn (\n\t\t\t<MapTile\n\t\t\t\tclassName=\"mapTile\"\n\t\t\t\ttileRemSize={props.tileRemSize}\n\t\t\t\trailImages={props.railImages}\n\t\t\t\tkey={`${x},${y}`}\n\t\t\t\tcoordinate={[ x, y ]}\n\t\t\t\tsolutionVisible={solutionVisible}\n\t\t\t\ttrackData={railImage}\n\t\t\t\t{...props.activeMouseEventsObject}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst staticTile = (x, y, defaultRailType, highlighted, mouseEvents) => {\n\t\treturn (\n\t\t\t<MapTile\n\t\t\t\tclassName=\"defaultTrack\"\n\t\t\t\ttileRemSize={props.tileRemSize}\n\t\t\t\tkey={`${x},${y}`}\n\t\t\t\tcoordinate={[ x, y ]}\n\t\t\t\thighlighted={highlighted}\n\t\t\t\ttrackData={convertRailTypeToTrackImage(defaultRailType)}\n\t\t\t\t{...mouseEvents}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst renderDefaultTrack = (x, y, defaultRailType, highlighted) =>\n\t\tstaticTile(x, y, defaultRailType, highlighted, props.activeMouseEventsObject);\n\n\tconst renderCompleteTrack = (x, y, defaultRailType, highlighted) =>\n\t\tstaticTile(x, y, defaultRailType, highlighted, emptyMouseEventsObject);\n\n\t///////////// MAP - MAP COMPONENT GENERATION FUNCTIONS /////////////\n\n\tconst placeColumnHeader = (trainTrackMap, x, y) => {\n\t\tconst headerLabel = trainTrackMap.headerLabels.x[x];\n\t\tconst fillState = props.gameComplete ? 'full' : getRowColumnFillstate('x', x);\n\t\treturn (\n\t\t\t<HeadingTile\n\t\t\t\tkey={`${x},${y}`}\n\t\t\t\theaderLabel={headerLabel}\n\t\t\t\tfillState={fillState}\n\t\t\t\ttileRemSize={props.tileRemSize}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst placeRowHeader = (trainTrackMap, x, y) => {\n\t\tconst headerLabel = trainTrackMap.headerLabels.y[y];\n\t\tconst fillState = props.gameComplete ? 'full' : getRowColumnFillstate('y', y);\n\t\treturn (\n\t\t\t<HeadingTile\n\t\t\t\tkey={`${x},${y}`}\n\t\t\t\theaderLabel={headerLabel}\n\t\t\t\tfillState={fillState}\n\t\t\t\ttileRemSize={props.tileRemSize}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst placeCompletedMapTrack = (trainTrackMap, x, y) => {\n\t\tlet defaultTile;\n\t\tlet highlighted = false;\n\t\ttrainTrackMap.tracks.forEach((el) => {\n\t\t\tif (el.tile[0] === x && el.tile[1] === y) {\n\t\t\t\tdefaultTile = el.railType;\n\t\t\t\tif (defaultHighlights && el.defaultTrack) highlighted = true;\n\t\t\t}\n\t\t});\n\t\tif (defaultTile) return renderCompleteTrack(x, y, defaultTile, highlighted);\n\t\telse return <EmptyTile coordinate={[ x, y ]} key={`${x},${y}`} tileRemSize={props.tileRemSize} />;\n\t};\n\n\tconst placeUserPlacedTrack = (x, y) => {\n\t\tlet railImage;\n\t\tprops.placedTracks.forEach((el) => {\n\t\t\tif (el.tile[0] === x && el.tile[1] === y) railImage = convertRailTypeToTrackImage(el.railType);\n\t\t});\n\t\tif (railImage) return renderMapTile(x, y, railImage);\n\t\telse return renderMapTile(x, y, null);\n\t};\n\n\tconst placeGameActiveMapTrack = (trainTrackMap, x, y) => {\n\t\tconst defaultTile = checkIfTileIsDefault(trainTrackMap, x, y);\n\t\tif (defaultTile) return renderDefaultTrack(x, y, defaultTile, defaultHighlights);\n\t\telse return placeUserPlacedTrack(x, y);\n\t};\n\tconst placeMainMapTile = (trainTrackMap, x, y) => {\n\t\tif (props.gameComplete || solutionVisible) return placeCompletedMapTrack(trainTrackMap, x, y);\n\t\telse return placeGameActiveMapTrack(trainTrackMap, x, y);\n\t};\n\n\tconst checkIfTileIsDefault = (trainTrackMap, x, y) => {\n\t\tlet trackDefaultTile = null;\n\t\ttrainTrackMap.tracks.forEach((el) => {\n\t\t\tif (el.tile[0] === x && el.tile[1] === y && el.defaultTrack) trackDefaultTile = el.railType;\n\t\t});\n\t\treturn trackDefaultTile;\n\t};\n\n\tconst getRowColumnFillstate = (axis, index) => {\n\t\tlet fillState = 'underfilled';\n\t\tconst defaultTiles = getAllDefaultTiles(props.trainTrackMap);\n\t\tlet axisNum = axis === 'x' ? 0 : 1;\n\n\t\tlet placedTrackCount = defaultTiles.filter((el) => el.tile[axisNum] === index).length;\n\t\tconst tilesOnAxis = props.trainTrackMap.tracks.filter((el) => el.tile[axisNum] === index).length;\n\t\tprops.placedTracks.forEach((el) => {\n\t\t\tif (el.tile[axisNum] === index && el.railType !== 'X') placedTrackCount++;\n\t\t});\n\n\t\tif (tilesOnAxis < placedTrackCount) fillState = 'overfilled';\n\t\telse if (tilesOnAxis === placedTrackCount) fillState = 'full';\n\t\treturn fillState;\n\t};\n\n\tconst mapWidth = props.trainTrackMap.headerLabels.x.length;\n\tconst mapHeight = props.trainTrackMap.headerLabels.y.length;\n\n\tconst mapBoard = [ ...Array((mapWidth + 1) * (mapHeight + 1)) ].map((el, i) => {\n\t\tconst x = i % (mapWidth + 1);\n\t\tconst y = Math.floor(i / (mapHeight + 1)) - 1;\n\t\tif (y === -1) return placeColumnHeader(props.trainTrackMap, x, y);\n\t\telse if (x === mapWidth) return placeRowHeader(props.trainTrackMap, x, y);\n\t\telse if (saveBoxCutOut) return <TransparentTile key={`${x},${y}`} tileRemSize={props.tileRemSize} />;\n\t\telse return placeMainMapTile(props.trainTrackMap, x, y);\n\t});\n\n\treturn mapBoard;\n};\n\nexport default Board;\n","import { compareArrays } from 'js/utility/utilityFunctions';\n\nexport const getCombinedArrayOfNewAndOldTiles = (newTiles, map) => {\n\tconst tilesToPlace = filterNewTilesOfDefaultTiles(newTiles, map.mapTracks);\n\tconst alreadyPlacedTiles = filterAlreadyPlacedTracksOfNewTiles(tilesToPlace, map.placedTracks);\n\treturn [ ...tilesToPlace, ...alreadyPlacedTiles ];\n};\n\nconst filterNewTilesOfDefaultTiles = (newTiles, mapTracks) => {\n\tconst filteredTiles = newTiles.filter((newTile) => {\n\t\tconst defaultOverlapTiles = mapTracks.filter(\n\t\t\t(mapTile) => compareArrays(newTile.tile, mapTile.tile) && mapTile.defaultTrack\n\t\t);\n\t\treturn defaultOverlapTiles.length === 0;\n\t});\n\treturn filteredTiles;\n};\n\nconst filterAlreadyPlacedTracksOfNewTiles = (newTiles, placedTracks) => {\n\tlet nonConflictingPlacedTracks = [];\n\tplacedTracks.forEach((track) => {\n\t\tlet placedTrackConflict = false;\n\t\tnewTiles.forEach((el) => {\n\t\t\tif (compareArrays(track.tile, el.tile)) placedTrackConflict = true;\n\t\t});\n\t\tif (!placedTrackConflict) nonConflictingPlacedTracks.push(track);\n\t});\n\treturn nonConflictingPlacedTracks;\n};\n","import { randomIntFromInterval, compareArrays } from 'js/utility/utilityFunctions';\n\nexport const findDirectionFromMove = (currentMove, lastMove) => {\n\tlet moveDirection;\n\tconst moveCalc = differenceBetweenTwoMoves(currentMove, lastMove);\n\tif (compareArrays(moveCalc, [ 0, -1 ])) moveDirection = 0; //= 'up';\n\tif (compareArrays(moveCalc, [ 1, 0 ])) moveDirection = 1; //= 'right';\n\tif (compareArrays(moveCalc, [ 0, 1 ])) moveDirection = 2; //= 'down';\n\tif (compareArrays(moveCalc, [ -1, 0 ])) moveDirection = 3; //= 'left';\n\treturn moveDirection;\n};\n\nconst differenceBetweenTwoMoves = (moveOne, moveTwo) => {\n\treturn [ moveOne[0] - moveTwo[0], moveOne[1] - moveTwo[1] ];\n}\n\nexport const directionsToTrackRailType = (dirs) => {\n\tlet railTypeArray = [];\n\tfor (let i = 0; i < dirs.length; i++) {\n\t\tif ((dirs[i] === 0 && dirs[i + 1] === 0) || (dirs[i] === 2 && dirs[i + 1] === 2))\n\t\t\trailTypeArray.push('vertical');\n\t\tif ((dirs[i] === 1 && dirs[i + 1] === 1) || (dirs[i] === 3 && dirs[i + 1] === 3))\n\t\t\trailTypeArray.push('horizontal');\n\t\tif ((dirs[i] === 2 && dirs[i + 1] === 1) || (dirs[i] === 3 && dirs[i + 1] === 0))\n\t\t\trailTypeArray.push('topRightCorner');\n\t\tif ((dirs[i] === 3 && dirs[i + 1] === 2) || (dirs[i] === 0 && dirs[i + 1] === 1))\n\t\t\trailTypeArray.push('bottomRightCorner');\n\t\tif ((dirs[i] === 0 && dirs[i + 1] === 3) || (dirs[i] === 1 && dirs[i + 1] === 2))\n\t\t\trailTypeArray.push('bottomLeftCorner');\n\t\tif ((dirs[i] === 1 && dirs[i + 1] === 0) || (dirs[i] === 2 && dirs[i + 1] === 3))\n\t\t\trailTypeArray.push('topLeftCorner');\n\t}\n\treturn railTypeArray;\n};\n\nexport const getTilesInEachDirection = (currentTile, generatedTiles) => {\n\tlet tilesInEachDirection = [];\n\tfor (let i = 0; i < 4; i++) {\n\t\tlet sign = Math.ceil((i % 3) / 2) * 2 + 1; //\n\t\tlet lineTiles = generatedTiles.filter((tile) => tile[i % 2] === currentTile[i % 2]);\n\t\tlet directionTiles = lineTiles.filter((tile) => tile[(i + 1) % 2] * -sign < currentTile[(i + 1) % 2] * -sign);\n\t\ttilesInEachDirection.push(directionTiles);\n\t}\n\treturn tilesInEachDirection;\n};\n\nexport const getDirectionOfEachMove = (allTiles, parameters) => {\n\tlet directions = [];\n\tdirections.push(getStartingDirection(allTiles[0], parameters));\n\tfor (let i = 0; i < allTiles.length - 1; i++) {\n\t\tlet currentMoveDir = findDirectionFromMove(allTiles[i + 1], allTiles[i]);\n\t\tdirections.push(currentMoveDir);\n\t}\n\tdirections.push(getEndingDirection(allTiles[allTiles.length - 1], parameters));\n\treturn directions;\n};\n\nconst getStartingDirection = (start, parameters) => {\n\tconst possibleStartDirections = getPossibleStartDirections(start, parameters);\n\treturn possibleStartDirections[randomIntFromInterval(0, possibleStartDirections.length - 1)];\n}\n\nconst getEndingDirection = (end, parameters) => {\n\tconst possibleEndDirections = getPossibleEndDirections(end, parameters);\n\treturn possibleEndDirections[randomIntFromInterval(0, possibleEndDirections.length - 1)];\n}\n\nconst getPossibleStartDirections = (start, parameters) => {\n\tconst { mapWidth, mapHeight } = parameters;\n\tlet possibleDirections = [];\n\tif (start[0] === 0) possibleDirections.push(1); // comes in from left\n\tif (start[1] === 0) possibleDirections.push(2); // comes in from top\n\tif (start[0] === mapWidth - 1) possibleDirections.push(3); // comes in from right\n\tif (start[1] === mapHeight - 1) possibleDirections.push(0); // comes in from bottom\n\treturn possibleDirections;\n}\n\nconst getPossibleEndDirections = (end, parameters) => {\n\tconst { mapWidth, mapHeight } = parameters;\n\tlet possibleDirections = [];\n\tif (end[0] === 0) possibleDirections.push(3); // leaves via left\n\tif (end[1] === 0) possibleDirections.push(0); // leaves via top\n\tif (end[0] === mapWidth - 1) possibleDirections.push(1); // leaves via right\n\tif (end[1] === mapHeight - 1) possibleDirections.push(2); // leaves via bottom\n\treturn possibleDirections;\n}\n","import {\n\tconvertDirectionTupleToRailTypes,\n\tcheckIfTwoRailTypesConnected,\n\tcheckIfAdjacentTileConnected\n} from 'js/trackFunctions/railTypeProcessing';\nimport { findDirectionFromMove } from 'js/utility/directionsConversions.js';\nimport { getAdjacentTracks, convertMoveArrayToDirections } from 'js/trackFunctions/trackUtilities';\nimport { randomArrayEntry, isNonEmptyArray, compareArrays } from 'js/utility/utilityFunctions';\n\nexport const railDragEvent = (dragArray, currentMapInfo) => {\n\tconst truncatedDragArray = dragArray.slice(1);\n\tif (dragArray[0] === null) return initialDrag(truncatedDragArray, currentMapInfo);\n\telse return standardDrag(dragArray);\n};\n\nconst standardDrag = (dragArray) => {\n\tconst directions = convertPathToDirectionArray(dragArray);\n\tconst railTypes = convertDirectionTupleToRailTypes(directions);\n\treturn railTypes.map((el, i) => {\n\t\treturn { tile: dragArray[i + 1], railType: el };\n\t});\n};\n\nconst initialDrag = (dragArray, currentMapInfo) => {\n\tconst connectedAdjacentTracks = getConnectedAdjacentTracks(dragArray[0], currentMapInfo);\n\tconst existingTilesBoo = doDragTilesContainTracks(dragArray, currentMapInfo);\n\tif (existingTilesBoo) return draggingFromExistingTiles(dragArray, currentMapInfo);\n\telse if (isNonEmptyArray(connectedAdjacentTracks))\n\t\treturn draggingFromAdjacentConnectedTile(dragArray, connectedAdjacentTracks);\n\telse return standardDrag([ null, ...dragArray ]);\n};\n\nconst draggingFromExistingTiles = (dragArray, currentMapInfo) => {\n\tconst dragConnections = getDragTilesConnectedTiles(dragArray, currentMapInfo);\n\tconst directions = getTrackDirectionPath(dragConnections, dragArray);\n\tconst railTypeArray = convertDirectionsArrayToRailTypes(directions);\n\treturn railTypeArray.map((el, i) => {\n\t\treturn { tile: dragArray[i], railType: el };\n\t});\n};\n\nconst getTrackDirectionPath = (dragConnections, dragArray) => {\n\tconst dragDirection = convertMoveArrayToDirections(dragArray)[0];\n\tlet dragPath = [];\n\tif (dragConnections[0]) {\n\t\tconst directionToFirstTile = (dragConnections[0].position + 2) % 4;\n\t\tdragPath.push(directionToFirstTile);\n\t} else dragPath.push(dragDirection);\n\tdragPath.push(dragDirection);\n\tif (dragConnections[1]) dragPath.push(dragConnections[1].position);\n\telse dragPath.push(dragDirection);\n\treturn dragPath;\n};\n\nconst convertDirectionsArrayToRailTypes = (directions) => {\n\tlet railTypeArray = [];\n\tfor (let i = 0; i < directions.length - 1; i++) {\n\t\tconst directionTuple = [ directions[i], directions[i + 1] ];\n\t\tconst tileRailType = convertDirectionTupleToRailTypes(directionTuple)[0];\n\t\trailTypeArray.push(tileRailType);\n\t}\n\treturn railTypeArray;\n};\n\nconst getDragTilesConnectedTiles = (dragArray, currentMapInfo) => {\n\tconst reversedDragArray = dragArray.slice().reverse();\n\tconst firstConnections = getSingleDragTilesConnection(dragArray, currentMapInfo);\n\tconst secondConnections = getSingleDragTilesConnection(reversedDragArray, currentMapInfo);\n\treturn [ firstConnections, secondConnections ];\n};\n\nconst getSingleDragTilesConnection = (dragArray, currentMapInfo) => {\n\tconst dragRailType = getRailTypeOfTile(dragArray[0], currentMapInfo);\n\tif (dragRailType) {\n\t\tlet dragFacingTracks = getConnectedAdjacentTracks(dragArray[0], currentMapInfo);\n\t\tdragFacingTracks = dragFacingTracks.filter((el) => !compareArrays(el.tile, dragArray[1]));\n\t\tconst connections = dragFacingTracks.filter((el) =>\n\t\t\tcheckIfTwoRailTypesConnected(el.position, [ dragRailType, el.railType ])\n\t\t);\n\t\treturn randomArrayEntry(connections);\n\t} else return null;\n};\n\nconst getRailTypeOfTile = (coordinate, currentMapInfo) => {\n\tconst tiles = currentMapInfo.tracksOnMap.filter((el) => compareArrays(coordinate, el.tile));\n\tif (isNonEmptyArray(tiles)) return tiles[0].railType;\n\telse return null;\n};\n\nconst doDragTilesContainTracks = (dragArray, currentMapInfo) => {\n\tconst firstTileTaken = currentMapInfo.tracksOnMap.filter((el) => compareArrays(el.tile, dragArray[0])).length;\n\tconst secondTileTaken = currentMapInfo.tracksOnMap.filter((el) => compareArrays(el.tile, dragArray[1])).length;\n\treturn Boolean(firstTileTaken + secondTileTaken > 0);\n};\n\nconst draggingFromAdjacentConnectedTile = (dragArray, connectedTracks) => {\n\tconst connectedTiles = connectedTracks.map((el) => el.tile);\n\tconst randAdj = randomArrayEntry(connectedTiles);\n\tconst coordinates = [ randAdj, dragArray[0], dragArray[1] ];\n\treturn standardDrag(coordinates);\n};\n\nconst getConnectedAdjacentTracks = (initialTile, currentMapInfo) => {\n\tconst adjacentTracks = getAdjacentTracks(initialTile, currentMapInfo);\n\tconst adjacentTrackData = getTileArrayData(adjacentTracks, currentMapInfo.tracksOnMap);\n\treturn adjacentTrackData.filter((el) => checkIfAdjacentTileConnected(el.position, el.railType));\n};\n\nconst getTileArrayData = (tileArray, tracksOnMap) => {\n\tlet tileArrayData = [];\n\ttileArray.forEach((adj) => {\n\t\ttracksOnMap.forEach((mapTile) => {\n\t\t\tif (compareArrays(adj.tile, mapTile.tile))\n\t\t\t\ttileArrayData.push({\n\t\t\t\t\ttile: mapTile.tile,\n\t\t\t\t\trailType: mapTile.railType,\n\t\t\t\t\tposition: adj.position\n\t\t\t\t});\n\t\t});\n\t});\n\treturn tileArrayData;\n};\n\nconst convertPathToDirectionArray = (array) => {\n\tlet directions = [];\n\tfor (let i = 0; i < array.length - 1; i++) {\n\t\tif (array[i] !== null && array[i + 1] !== null) directions.push(findDirectionFromMove(array[i + 1], array[i]));\n\t}\n\treturn directions;\n};\n","import { checkIfArrayIsInMatrix } from 'js/utility/utilityFunctions';\nimport { findDirectionFromMove } from 'js/utility/directionsConversions';\n\nconst getAdjacentTiles = (coordinate, axisMax) => {\n\tlet adjacentTiles = [];\n\tif (coordinate[1] > 0) adjacentTiles.push({ tile: [ coordinate[0], coordinate[1] - 1 ], position: 0 });\n\tif (coordinate[0] < axisMax.x) adjacentTiles.push({ tile: [ coordinate[0] + 1, coordinate[1] ], position: 1 });\n\tif (coordinate[1] < axisMax.y) adjacentTiles.push({ tile: [ coordinate[0], coordinate[1] + 1 ], position: 2 });\n\tif (coordinate[0] > 0) adjacentTiles.push({ tile: [ coordinate[0] - 1, coordinate[1] ], position: 3 });\n\treturn adjacentTiles;\n}\n\nexport const getAdjacentTracks = (coordinate, currentMapInfo) => {\n\tconst adjacentTiles = getAdjacentTiles(coordinate, currentMapInfo.axisMax);\n\tconst trackCoordinates = currentMapInfo.tracksOnMap.map((el) => el.tile);\n\treturn adjacentTiles.filter((arr) => checkIfArrayIsInMatrix(arr.tile, trackCoordinates));\n};\n\nexport const convertMoveArrayToDirections = (moveArr) => {\n\tlet directions = [];\n\tfor (let i = 0; i < moveArr.length - 1; i++) {\n\t\tconst direction = findDirectionFromMove(moveArr[i + 1], moveArr[i]);\n\t\tdirections.push(direction);\n\t}\n\treturn directions;\n};\n","import { randomIntFromInterval } from 'js/utility/utilityFunctions';\nconst ROYGBIV_HEX_CODES = [ '#ff0000', '#ffa500', '#ffff00', '#008000', '#0000ff', '#4b0082', '#ee82ee' ];\n\nexport const generateRandomRGBColor = () => {\n\tlet minValue = 100;\n\tconst modAmount = 0.8;\n\tconst r = randomIntFromInterval(minValue, 255);\n\tr > 255 - minValue / 2 ? (minValue *= modAmount) : (minValue /= modAmount);\n\tconst g = randomIntFromInterval(minValue, 255);\n\tg > 255 - minValue / 2 ? (minValue *= modAmount) : (minValue /= modAmount);\n\tconst b = randomIntFromInterval(minValue, 255);\n\treturn `rgb(${[ r, g, b ]})`;\n};\n\nexport const colorToWhiteArray = (hexColor, numberOfShades) => {\n\tconst colorArray = convertHexToRgbArray(hexColor);\n\tconst colorData = {\n\t\tcolorOneArray: colorArray,\n\t\tcolorTwoArray: [ 255, 255, 255 ],\n\t\tnumberOfShades: Math.ceil(numberOfShades)\n\t};\n\tconst colorMatrix = createColorMatrixByStep(colorData);\n\treturn colorMatrix.map((el) => convertRgbArrayToHex(el));\n};\n\nexport const convertHexToRgbArray = (hexColor) => {\n\tconst parseStringAsArray = hexColor.replace('#', '').match(/.{1,2}/g);\n\treturn parseStringAsArray.map((el) => parseInt(Number(`0x${el}`), 10));\n};\n\nexport const convertRgbArrayToHex = (rgbArray) => {\n\tconst hexCode = rgbArray\n\t\t.map((el) => {\n\t\t\tconst value = el.toString(16);\n\t\t\tif (value.length === 1) return '0' + value;\n\t\t\telse return value;\n\t\t})\n\t\t.join('');\n\treturn '#' + hexCode;\n};\n\nconst getColorStepValues = (colorData) => {\n\tconst { colorOneArray, colorTwoArray, numberOfShades } = colorData;\n\treturn colorOneArray.map((el, i) => (colorTwoArray[i] - el) / (numberOfShades - 1));\n};\n\nconst createColorMatrixByStep = (colorData) => {\n\tconst { colorOneArray, numberOfShades } = colorData;\n\tlet colorMatrix = [];\n\tconst colorStepValues = getColorStepValues(colorData);\n\tfor (let iteration = 0; iteration < numberOfShades; iteration++) {\n\t\tconst color = colorOneArray.map((el, index) => Math.floor(el + iteration * colorStepValues[index]));\n\t\tcolorMatrix.push(color);\n\t}\n\treturn colorMatrix;\n};\n\nconst colorToColorArray = (colorOne, colorTwo, numberOfShades) => {\n\tconst colorOneArray = convertHexToRgbArray(colorOne);\n\tconst colorTwoArray = convertHexToRgbArray(colorTwo);\n\tconst colorData = {\n\t\tcolorOneArray,\n\t\tcolorTwoArray,\n\t\tnumberOfShades: Math.ceil(numberOfShades)\n\t};\n\tconst colorMatrix = createColorMatrixByStep(colorData);\n\treturn colorMatrix.map((el) => convertRgbArrayToHex(el));\n};\n\nexport const roygbivArray = () => {\n\tlet roygbivArray = [];\n\tfor (let i = 0; i < ROYGBIV_HEX_CODES.length - 1; i++) {\n\t\tconst rainbowPart = colorToColorArray(ROYGBIV_HEX_CODES[i], ROYGBIV_HEX_CODES[i + 1], 100);\n\t\troygbivArray.push(rainbowPart);\n\t}\n\troygbivArray = roygbivArray.flat();\n\treturn roygbivArray;\n};\n","import React from 'react';\nimport { colorToWhiteArray } from 'js/utility/colorFunctions';\n\nexport const MapAmbientBackground = (props) => {\n\tconst colorSelected = props.themeColor.available[props.themeColor.selected];\n\tlet backgroundShapes = [];\n\tif (props.visualEffects) {\n\t\tconst numberOfShapes = 20;\n\t\tconst colorArray = colorToWhiteArray(colorSelected, numberOfShapes + 1);\n\t\tfor (let i = 0; i < numberOfShapes; i++) {\n\t\t\tconst backgroundShapeStyle = {\n\t\t\t\tbackgroundColor: colorArray[i],\n\t\t\t\tanimation: `spin ${15 + 0.25 * (i + 1)}s infinite linear`,\n\t\t\t\theight: `${100 - 4 * i}%`,\n\t\t\t\twidth: `${100 - 4 * i}%`\n\t\t\t};\n\t\t\tbackgroundShapes.push(<div key={i} className=\"mapBackgroundShape\" style={backgroundShapeStyle} />);\n\t\t}\n\t} else {\n\t\tconst lightenedColor = colorToWhiteArray(colorSelected, 10)[6];\n\t\tbackgroundShapes.push(<div style={{ width: '100%', height: '100%', backgroundColor: lightenedColor }} />);\n\t}\n\treturn <div className=\"mapBackgroundContainer\">{backgroundShapes}</div>;\n};\n\nexport default MapAmbientBackground;\n","import React, { useRef, useEffect, useState } from 'react';\nimport Board from 'js/components/Board';\n\nimport { compareArrays, isNonEmptyArray, shiftPushArray } from 'js/utility/utilityFunctions';\nimport { getCombinedArrayOfNewAndOldTiles } from 'js/trackFunctions/trackPlacement';\nimport { railDragEvent } from 'js/trackFunctions/railDragEvent';\nimport { getRailTypeOfPlacedTile, checkIfPlacedTilesAllCorrect } from 'js/trackFunctions/trackParsing';\n\nimport MapAmbientBackground from 'js/components/MapAmbientBackground.jsx';\n\nexport const Map = (props) => {\n\tconst { trainTrackMap, placedTracks, setPlacedTracks, setGameWon, savePopUp, themeColor, visualEffects } = props;\n\n\tconst [ currentMapInfo, setCurrentMapInfo ] = useState([]);\n\tconst dragArray = useRef([ null, null, null ]);\n\tconst rightClickDragValue = useRef();\n\n\tconst currentHoverTile = useRef([ null, null ]);\n\tconst previousHoverTile = useRef();\n\n\t///////////// MAP - MOUSE EVENTS FUNCTIONS /////////////\n\n\tconst leftClickEvent = (mouseEventObject) => (dragArray.current = [ null, null, mouseEventObject.tile ]);\n\n\tconst rightClickEvent = (mouseEventObject) => {\n\t\tsetRightClickDragValue(mouseEventObject);\n\t\tdetermineRemoveOrPlaceX(mouseEventObject);\n\t};\n\n\tconst bothClickEvent = (mouseEventObject) => determineIfToPlaceT(mouseEventObject);\n\n\tconst setRightClickDragValue = (mouseEventObject) => {\n\t\tconst tileValue = getRailTypeOfPlacedTile(mouseEventObject.tile, placedTracks);\n\t\trightClickDragValue.current = tileValue === null ? 'X' : 'DELETE';\n\t};\n\n\tconst determineRemoveOrPlaceX = (mouseEventObject) => {\n\t\tif (mouseEventObject.tileClass === 'mapTile') {\n\t\t\tif (getRailTypeOfPlacedTile(mouseEventObject.tile, placedTracks)) removePlacedTrack(mouseEventObject.tile);\n\t\t\telse placeTile(mouseEventObject.tile, rightClickDragValue.current);\n\t\t}\n\t};\n\n\tconst leftReleaseEvent = (mouseEventObject) => {\n\t\tif (dragArray.current.filter((o) => o).length === 1 && mouseEventObject.tileClass === 'mapTile') {\n\t\t\tplaceTile(mouseEventObject.tile, mouseEventObject.railType);\n\t\t\tdragArray.current = [];\n\t\t}\n\t};\n\n\tconst rightReleaseEvent = () => (rightClickDragValue.current = undefined);\n\n\tconst checkIfHoverTileChanged = (mouseEventObject) =>\n\t\t!compareArrays(mouseEventObject.tile, currentHoverTile.current);\n\n\tconst updateHoverTileState = (mouseEventObject) => {\n\t\tpreviousHoverTile.current = currentHoverTile.current;\n\t\tcurrentHoverTile.current = mouseEventObject.tile;\n\t};\n\n\tconst hoverStartEvent = (mouseEventObject) => {\n\t\tif (checkIfHoverTileChanged(mouseEventObject)) {\n\t\t\tupdateHoverTileState(mouseEventObject);\n\t\t\tif (mouseEventObject.mouseButton === 1 && checkIfHoverToAdjacent())\n\t\t\t\thoverWhileHoldingLeftMouseButton(mouseEventObject);\n\t\t\tif (mouseEventObject.mouseButton === 2) hoverWhileHoldingRightMouseButton(mouseEventObject);\n\t\t\tif (mouseEventObject.mouseButton === 3) hoverWhileHoldingBothMouseButtons(mouseEventObject);\n\t\t}\n\t};\n\n\tconst checkIfHoverToAdjacent = () => {\n\t\tlet hoverAdjacent = true;\n\t\tif (currentHoverTile.current[0] > previousHoverTile.current[0] + 1) hoverAdjacent = false;\n\t\tif (currentHoverTile.current[0] < previousHoverTile.current[0] - 1) hoverAdjacent = false;\n\t\tif (currentHoverTile.current[1] > previousHoverTile.current[1] + 1) hoverAdjacent = false;\n\t\tif (currentHoverTile.current[1] < previousHoverTile.current[1] - 1) hoverAdjacent = false;\n\t\treturn hoverAdjacent;\n\t};\n\n\tconst hoverWhileHoldingLeftMouseButton = (mouseEventObject) => {\n\t\tif (isNonEmptyArray(dragArray.current)) {\n\t\t\tdragArray.current = shiftPushArray(dragArray.current, [ mouseEventObject.tile ]);\n\t\t\tconst draggedTilesToPlace = railDragEvent(dragArray.current, currentMapInfo);\n\t\t\tplaceMultipleTiles(draggedTilesToPlace);\n\t\t}\n\t};\n\n\tconst hoverWhileHoldingRightMouseButton = (mouseEventObject) => {\n\t\tif (rightClickDragValue.current === 'X') {\n\t\t\tif (mouseEventObject.tileClass === 'mapTile') placeTile(mouseEventObject.tile, rightClickDragValue.current);\n\t\t} else if (rightClickDragValue.current === 'DELETE') removePlacedTrack(mouseEventObject.tile);\n\t};\n\n\tconst hoverWhileHoldingBothMouseButtons = (mouseEventObject) => determineIfToPlaceT(mouseEventObject);\n\n\tconst determineIfToPlaceT = (mouseEventObject) => {\n\t\tconst { tile, mouseButton, tileClass } = mouseEventObject;\n\t\tif (mouseButton === 3 && tileClass === 'mapTile') placeTile(tile, '?');\n\t};\n\n\t///////////// MAP - TRACK PLACEMENT FUNCTIONS /////////////\n\n\tconst placeTile = (coordinate, value) => {\n\t\tconst trackSquareInfo = {\n\t\t\ttile: coordinate,\n\t\t\trailType: value\n\t\t};\n\t\tplaceMultipleTiles([ trackSquareInfo ]);\n\t};\n\n\tconst placeMultipleTiles = async (newTiles) => {\n\t\tconst allTilesOnMap = getCombinedArrayOfNewAndOldTiles(newTiles, {\n\t\t\tmapTracks: trainTrackMap.tracks,\n\t\t\tplacedTracks: placedTracks\n\t\t});\n\t\tawait setPlacedTracks(allTilesOnMap);\n\t\tawait checkIfGameComplete();\n\t};\n\n\tconst removePlacedTrack = async (trackCoordinates) => {\n\t\tconst filteredTracks = placedTracks.filter((track) => {\n\t\t\treturn !(track.tile[0] === trackCoordinates[0] && track.tile[1] === trackCoordinates[1]);\n\t\t});\n\t\tawait setPlacedTracks(filteredTracks);\n\t\tawait checkIfGameComplete();\n\t};\n\n\t///////////// ///////////// /////////////\n\n\tconst checkIfGameComplete = () => {\n\t\tconst placedTilesAllCorrect = checkIfPlacedTilesAllCorrect(trainTrackMap, placedTracks);\n\t\tif (placedTilesAllCorrect) setGameWon(true);\n\t};\n\n\tuseEffect(() => checkIfGameComplete(), [ placedTracks ]);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst defaultTracks = trainTrackMap.tracks.filter((el) => el.defaultTrack);\n\t\t\tconst filteredTracks = placedTracks.filter((el) => el.railType !== 'X');\n\t\t\tsetCurrentMapInfo({\n\t\t\t\ttracksOnMap: [ ...defaultTracks, ...filteredTracks ],\n\t\t\t\taxisMax: { x: trainTrackMap.headerLabels.x.length, y: trainTrackMap.headerLabels.y.length }\n\t\t\t});\n\t\t},\n\t\t[ placedTracks ]\n\t);\n\n\t///////////// MAP - MOUSE EVENTS OBJECTS /////////////\n\n\tconst activeMouseEventsObject = {\n\t\tleftClickEvent: !savePopUp ? leftClickEvent : () => null,\n\t\trightClickEvent: !savePopUp ? rightClickEvent : () => null,\n\t\tbothClickEvent: !savePopUp ? bothClickEvent : () => null,\n\t\tleftReleaseEvent: !savePopUp ? leftReleaseEvent : () => null,\n\t\trightReleaseEvent: !savePopUp ? rightReleaseEvent : () => null,\n\t\thoverStartEvent: !savePopUp ? hoverStartEvent : () => null\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"map\"\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'grid',\n\t\t\t\tgridTemplateColumns: `repeat(${trainTrackMap.headerLabels.x.length + 1}, 1fr)`,\n\t\t\t\tgridTemplateRows: `repeat(${trainTrackMap.headerLabels.y.length + 1}, 1fr)`\n\t\t\t}}\n\t\t>\n\t\t\t<Board {...props} activeMouseEventsObject={activeMouseEventsObject} />\n\t\t\t<MapAmbientBackground themeColor={themeColor} visualEffects={visualEffects} />\n\t\t</div>\n\t);\n};\n\nexport default Map;\n","import React from 'react';\n\nexport const SaveCutout = (props) => {\n\tconst { display, tileRemSize } = props;\n\tconst saveBoxCutOut = display.saveBoxCutOut;\n\treturn (\n\t\t<img\n\t\t\talt=\"\"\n\t\t\tdraggable=\"false\"\n\t\t\tsrc={saveBoxCutOut}\n\t\t\tclassName=\"saveBoxMapCutout\"\n\t\t\tstyle={{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: `${tileRemSize}rem`,\n\t\t\t\tleft: '0px',\n\t\t\t\tborder: saveBoxCutOut ? '1px solid black' : 'none'\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default SaveCutout;\n","export const getWaveButtonStyles = (hovered) => {\n\treturn {\n\t\tbtnDefaultStyle: {\n\t\t\tposition: 'relative',\n\t\t\toverflow: 'hidden',\n\t\t\tcursor: 'pointer',\n\t\t\tbackground: 'none',\n\t\t\tzIndex: '0',\n\t\t\tborderRadius: '1rem',\n\t\t\tborder: '1px #ccc solid',\n\t\t\toutline: 'none',\n\t\t\ttransition: '0.3s',\n\t\t\ttop: '0px',\n\t\t\tboxShadow: '0px 5px 0px 2px #eee'\n\t\t},\n\n\t\tbtnPressedStyle: {\n\t\t\ttransition: '0.1s',\n\t\t\ttop: '10px',\n\t\t\tboxShadow: 'none'\n\t\t},\n\n\t\trectangleStyle: {\n\t\t\ttop: '0%',\n\t\t\tleft: '-30%',\n\t\t\theight: '350%',\n\t\t\twidth: '70rem',\n\t\t\tposition: 'absolute',\n\t\t\tzIndex: '-1',\n\t\t\tborderRadius: '50rem'\n\t\t},\n\n\t\ttextStyle: {\n\t\t\tzIndex: '1',\n\t\t\tcolor: hovered ? 'white' : 'black',\n\t\t\ttransition: hovered ? 'color 1s cubic-bezier(0,2.53,.53,-1.51)' : `color 0s`\n\t\t},\n\n\t\twhiteBackground: {\n\t\t\tzIndex: '-2',\n\t\t\ttop: '0',\n\t\t\tleft: '0',\n\t\t\tposition: 'absolute',\n\t\t\theight: '100%',\n\t\t\twidth: '100%',\n\t\t\tbackgroundColor: 'white'\n\t\t}\n\t};\n};\n\nexport const rectangleParameters = {\n\trectangleCount: 5,\n\tstartRotation: 30,\n\trotationOffset: 2,\n\tget endRotation() {\n\t\treturn -15 + this.rectangleCount * this.rotationOffset;\n\t},\n\tstartTransition: 1.5,\n\tendTransition: 3,\n\ttransitionOffset: 0.1,\n\tcubicBezierFunction: 'cubic-bezier(0,1.84,0,.32)'\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport { colorToWhiteArray } from 'js/utility/colorFunctions';\nimport { getWaveButtonStyles, rectangleParameters } from 'js/styles/waveButton';\n\nconst WaveButton = ({ className, onClick, text, bounceDelay = 200, clickDelay = 500 }) => {\n\tconst [ hovered, setHoveredState ] = useState(false);\n\tconst [ buttonPressed, setPressedState ] = useState(false);\n\tconst bounceTimer = useRef();\n\tconst clickTimer = useRef();\n\n\tconst { btnDefaultStyle, btnPressedStyle, rectangleStyle, textStyle, whiteBackground } = getWaveButtonStyles(\n\t\thovered\n\t);\n\n\tconst {\n\t\trectangleCount,\n\t\tstartRotation,\n\t\trotationOffset,\n\t\tendRotation,\n\t\tstartTransition,\n\t\tendTransition,\n\t\ttransitionOffset,\n\t\tcubicBezierFunction\n\t} = rectangleParameters;\n\n\tconst createRectangleArray = (recCount) => {\n\t\tlet rectangleArray = [];\n\t\tconst blueRecColors = colorToWhiteArray('#5bb1cd', recCount * 1.2);\n\t\tconst purpleRecColors = colorToWhiteArray('#800080', recCount * 1.2);\n\t\tfor (let i = 0; i < recCount; i++) {\n\t\t\tconst curRecStyle = {\n\t\t\t\tbackground: `linear-gradient(1turn,${blueRecColors[blueRecColors.length - i - 1]},${purpleRecColors[\n\t\t\t\t\tpurpleRecColors.length - i - 1\n\t\t\t\t]})`,\n\t\t\t\ttransform: hovered\n\t\t\t\t\t? `rotate(${endRotation + rotationOffset * i}deg) skewY(0deg)`\n\t\t\t\t\t: `rotate(${startRotation + rotationOffset * i}deg) skewY(45deg)`,\n\t\t\t\ttransition: hovered\n\t\t\t\t\t? `all ${startTransition + transitionOffset * i}s ${cubicBezierFunction}`\n\t\t\t\t\t: `all ${endTransition}s ${cubicBezierFunction}`\n\t\t\t};\n\t\t\trectangleArray.push(\n\t\t\t\t<div key={i} style={{ ...rectangleStyle, ...curRecStyle }} className=\"rectangle\" id={`rec${i}`} />\n\t\t\t);\n\t\t}\n\t\treturn rectangleArray;\n\t};\n\n\tconst rectangleArray = createRectangleArray(rectangleCount);\n\tconst btnStyle = buttonPressed ? { ...btnDefaultStyle, ...btnPressedStyle } : btnDefaultStyle;\n\n\treturn (\n\t\t<button\n\t\t\tstyle={btnStyle}\n\t\t\tclassName={className}\n\t\t\tonMouseOver={() => setHoveredState(true)}\n\t\t\tonMouseLeave={() => (!buttonPressed ? setHoveredState(false) : null)}\n\t\t\tonClick={() => {\n\t\t\t\tsetPressedState(true);\n\t\t\t\tbounceTimer.current = setTimeout(() => {\n\t\t\t\t\tsetPressedState(false);\n\t\t\t\t\treturn clearTimeout(bounceTimer.current);\n\t\t\t\t}, bounceDelay);\n\t\t\t\tclickTimer.current = setTimeout(() => {\n\t\t\t\t\tonClick();\n\t\t\t\t\treturn clearTimeout(clickTimer.current);\n\t\t\t\t}, clickDelay);\n\t\t\t}}\n\t\t>\n\t\t\t{rectangleArray}\n\t\t\t<div style={textStyle}>{text}</div>\n\t\t\t<div style={whiteBackground} />\n\t\t</button>\n\t);\n};\n\nexport default WaveButton;\n","import React from 'react';\nimport WaveButton from 'js/components/WaveButton';\n\nexport const MapSeedCopyButton = (props) => {\n\treturn (\n\t\t<div className=\"mapSeedOptionContainer\">\n\t\t\t<WaveButton\n\t\t\t\tstyle={{ zIndex: '4' }}\n\t\t\t\tclassName=\"mapSeedBtn\"\n\t\t\t\tkey=\"mapSeedBtn\"\n\t\t\t\tonClick={() => navigator.clipboard.writeText(props.seed)}\n\t\t\t\ttext={'🌱'}\n\t\t\t/>\n\t\t\t<div className=\"mapSeedExplanation\">\n\t\t\t\t<span>Copy map seed to clipboard</span>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default MapSeedCopyButton;\n","import {\n\tfindIndexOfArrayInMatrix,\n\trandomArrayEntry,\n\tisNonEmptyArray,\n\tcompareArrays\n} from 'js/utility/utilityFunctions';\n\nexport const addHintTrack = (mapTracks, placedTracks) => {\n\tconst randomTrack = getRandomNonPlacedTrack(mapTracks, placedTracks);\n\treturn replaceOldTrackInArray(randomTrack, placedTracks);\n};\n\nconst getRandomNonPlacedTrack = (mapTracks, placedTracks) => {\n\tconst placedTracksArray = placedTracks.map((el) => el.tile);\n\tconst placedRailTypesArray = placedTracks.map((el) => el.railType);\n\tconst unplacedTracks = [ ...mapTracks ].filter((el) => {\n\t\tif (el.defaultTrack) return false;\n\t\tconst index = findIndexOfArrayInMatrix(el.tile, placedTracksArray);\n\t\tif (index === -1) return true;\n\t\treturn placedRailTypesArray[index] !== el.railType;\n\t});\n\tif (isNonEmptyArray(unplacedTracks)) return randomArrayEntry(unplacedTracks);\n\telse return null;\n};\n\nconst replaceOldTrackInArray = (newTrack, tracks) => {\n\tif (!newTrack) return tracks;\n\tconst filteredTracks = tracks.filter((el) => !compareArrays(newTrack.tile, el.tile));\n\treturn [ ...filteredTracks, newTrack ];\n};\n","import React, { useRef } from 'react';\nimport WaveButton from 'js/components/WaveButton';\nimport MapSeedCopyButton from 'js/components/MapSeedCopyButton';\nimport { addHintTrack } from 'js/trackFunctions/addHintTrack';\n\nexport const OptionsButtons = (props) => {\n\tconst { gameState, placedTracks, setGameWon, setPlacedTracks, setDisplay, display, inGameNewMap, quitGame } = props;\n\n\tconst seed = gameState.seed;\n\tconst tracks = gameState.mapObject.tracks;\n\n\treturn (\n\t\t<div className=\"inGameOptions\">\n\t\t\t<div className=\"topRowInGameButtons\">\n\t\t\t\t<WaveButton\n\t\t\t\t\tkey={'addHintTrackButton'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tconst newTrackArray = addHintTrack(tracks, placedTracks);\n\t\t\t\t\t\tsetPlacedTracks(newTrackArray);\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Add Hint Track'}\n\t\t\t\t\tclickDelay={50}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tkey={'highlightDefaultTilesBtn'}\n\t\t\t\t\tonClick={() => setDisplay({ ...display, defaultHighlights: !display.defaultHighlights })}\n\t\t\t\t\ttext={display.defaultHighlights ? 'Hide Default Tiles' : 'Show Default Tiles'}\n\t\t\t\t\tclickDelay={50}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tkey={'showMapSolutionBtn'}\n\t\t\t\t\tonClick={() => setDisplay({ ...display, solutionVisible: !display.solutionVisible })}\n\t\t\t\t\ttext={display.solutionVisible ? 'Hide Map Solution' : 'Show Map Solution'}\n\t\t\t\t\tclickDelay={200}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"bottomRowInGameButtons\">\n\t\t\t\t<WaveButton\n\t\t\t\t\tkey={'resetMapBtn'}\n\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\tsetGameWon(false);\n\t\t\t\t\t\tsetPlacedTracks([]);\n\t\t\t\t\t\tsetDisplay({ ...display, winPopUp: false, solutionVisible: false });\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Reset Map'}\n\t\t\t\t\tclickDelay={100}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tkey={'saveMapBtn'}\n\t\t\t\t\tonClick={() => setDisplay({ ...display, savePopUp: true, winPopUp: false })}\n\t\t\t\t\ttext={'Save Map'}\n\t\t\t\t\tclickDelay={100}\n\t\t\t\t/>\n\t\t\t\t<MapSeedCopyButton seed={seed} />\n\t\t\t\t<WaveButton\n\t\t\t\t\tkey={'newMapBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetGameWon(false);\n\t\t\t\t\t\tsetPlacedTracks([]);\n\t\t\t\t\t\tsetDisplay({ ...display, winPopUp: false, solutionVisible: false });\n\t\t\t\t\t\tinGameNewMap();\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'New Map'}\n\t\t\t\t\tclickDelay={200}\n\t\t\t\t/>\n\n\t\t\t\t<WaveButton key={'quitBtn'} onClick={() => quitGame()} text={'Quit Game'} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default OptionsButtons;\n","import { isNonEmptyArray } from 'js/utility/utilityFunctions';\n\nexport const saveMapToLocal = async (mapToSave) => {\n\tlet localMaps = JSON.parse(window.localStorage.getItem('savedMaps'));\n\tif (isNonEmptyArray(localMaps)) {\n\t\tconst newMapArray = [ ...localMaps, mapToSave ];\n\t\tawait window.localStorage.setItem('savedMaps', JSON.stringify(newMapArray));\n\t} else {\n\t\tawait window.localStorage.setItem('savedMaps', JSON.stringify([ mapToSave ]));\n\t}\n};\n\nexport const getLocalStorageMaps = () => {\n\tlet localMaps = JSON.parse(window.localStorage.getItem('savedMaps'));\n\tif (!isNonEmptyArray(localMaps)) localMaps = [];\n\treturn localMaps;\n};\n\nexport const deleteLocalSavedMap = async (deleteMapSeed) => {\n\tconst localMaps = getLocalStorageMaps();\n\tconst newMapArray = localMaps.filter((el) => el.seed !== deleteMapSeed);\n\tawait window.localStorage.setItem('savedMaps', JSON.stringify(newMapArray));\n};\n\nexport const deleteAllLocalSavedMaps = async () => {\n\tawait window.localStorage.setItem('savedMaps', JSON.stringify([]));\n};\n","import React, { useState } from 'react';\nimport { saveMapToLocal } from 'js/utility/localStorage';\nimport WaveButton from 'js/components/WaveButton';\n\nexport const SaveMapDisplay = (props) => {\n\tconst { display, setDisplay, gameState } = props;\n\tconst [ mapSaveName, setMapSaveName ] = useState(null);\n\treturn (\n\t\t<div key={'saveMapDisplay'} className=\"saveMapDisplay\" onContextMenu={(e) => e.preventDefault()}>\n\t\t\t<p>Enter a name to save map as:</p>\n\t\t\t<button\n\t\t\t\tkey={'closeSaveMapDisplay'}\n\t\t\t\tclassName={'closePopUpWindow'}\n\t\t\t\tonClick={() => setDisplay({ ...display, savePopUp: false })}\n\t\t\t>\n\t\t\t\tX\n\t\t\t</button>\n\t\t\t<input\n\t\t\t\tkey={'saveNameInputBox'}\n\t\t\t\tclassName={'saveNameInputBox'}\n\t\t\t\tonChange={(e) => setMapSaveName(e.target.value)}\n\t\t\t/>\n\t\t\t<WaveButton\n\t\t\t\tkey={'confirmSaveMapBtn'}\n\t\t\t\tclassName={'confirmSaveMapBtn'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsaveMapToLocal({ name: mapSaveName, ...gameState });\n\t\t\t\t\tsetMapSaveName(null);\n\t\t\t\t\tsetDisplay({ ...display, savePopUp: false });\n\t\t\t\t}}\n\t\t\t\ttext={'Save Map'}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default SaveMapDisplay;\n","import React from 'react';\nimport { randomIntFromInterval } from 'js/utility/utilityFunctions';\nimport { generateRandomRGBColor, colorToWhiteArray } from 'js/utility/colorFunctions';\n\nexport const WinDisplayBackground = (props) => {\n\tlet balloonContainer = [];\n\tconst colorSelected = props.themeColor.available[props.themeColor.selected];\n\tif (props.visualEffects) {\n\t\tconst balloonCount = 300;\n\t\tfor (let i = 0; i < balloonCount; i++) {\n\t\t\tconst color = generateRandomRGBColor();\n\t\t\tconst left = props.visualEffects ? randomIntFromInterval(-20, 100) : 50;\n\t\t\tconst delay = props.visualEffects ? randomIntFromInterval(0, 10000) : 0;\n\t\t\tconst balloonStyle = {\n\t\t\t\tleft: `${left}%`,\n\t\t\t\tbackgroundColor: color,\n\t\t\t\tcolor: color,\n\t\t\t\topacity: 0,\n\t\t\t\tanimationDelay: `${delay}ms`\n\t\t\t};\n\t\t\tballoonContainer.push(\n\t\t\t\t<div key={i} className=\"balloon\" style={balloonStyle}>\n\t\t\t\t\t<div key={`balloonString${i}`} className={'balloonString'}>\n\t\t\t\t\t\t؁\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t} else {\n\t\tconst lightenedColor = colorToWhiteArray(colorSelected, 10)[8];\n\t\tballoonContainer.push(<div style={{ width: '100%', height: '100%', backgroundColor: lightenedColor }} />);\n\t}\n\treturn balloonContainer;\n};\n\nexport default WinDisplayBackground;\n","import React from 'react';\nimport 'css/balloon.css';\nimport WinDisplayBackground from 'js/components/WinDisplayBackground';\n\nexport const GameWinDisplay = (props) => {\n\tconst { display, setDisplay, visualEffects, themeColor } = props;\n\treturn (\n\t\t<div key={'gameWinDisplay'} className=\"winDisplay\" onContextMenu={(e) => e.preventDefault()}>\n\t\t\t<h2 key={'winText'} className=\"winText\">\n\t\t\t\tYou Win!\n\t\t\t</h2>\n\t\t\t<button\n\t\t\t\tkey={'closeWinDisplay'}\n\t\t\t\tclassName={'closePopUpWindow'}\n\t\t\t\tonClick={() => setDisplay({ ...display, winPopUp: false })}\n\t\t\t>\n\t\t\t\tX\n\t\t\t</button>\n\t\t\t<div key={'balloonContainer'} className={'balloonContainer'}>\n\t\t\t\t<WinDisplayBackground visualEffects={visualEffects} themeColor={themeColor} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default GameWinDisplay;\n","import curvedtrack from 'img/curvedtrack.png';\nimport straighttrack from 'img/straighttrack.png';\nimport { convertRemToPx } from 'js/utility/utilityFunctions';\n\nexport const generateMapIcon = async (mapObject, complete) => {\n\tconst options = {\n\t\theaders: true,\n\t\tcomplete,\n\t\tdimensions: 250,\n\t\tcutOut: false\n\t};\n\tconst canvas = await generateCanvas(mapObject, options);\n\tconst image = canvas.toDataURL('image/png');\n\treturn image;\n};\n\nexport const generateMapBackground = async (mapObject, remSize) => {\n\tconst options = {\n\t\theaders: false,\n\t\tcomplete: false,\n\t\tdimensions: convertRemToPx(remSize) * mapObject.headerLabels.x.length,\n\t\tcutOut: true\n\t};\n\tconst canvas = await generateCanvas(mapObject, options);\n\tconst image = canvas.toDataURL('image/png');\n\treturn image;\n};\n\nconst getRotationFromRailType = (railType) => {\n\tlet rotation;\n\tswitch (railType) {\n\t\tcase 'horizontal':\n\t\t\trotation = 90;\n\t\t\tbreak;\n\t\tcase 'topLeftCorner':\n\t\t\trotation = 90;\n\t\t\tbreak;\n\t\tcase 'topRightCorner':\n\t\t\trotation = 180;\n\t\t\tbreak;\n\t\tcase 'bottomRightCorner':\n\t\t\trotation = 270;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\trotation = 0;\n\t}\n\treturn rotation;\n};\n\nconst getTrackImages = async () => {\n\treturn await Promise.all([ loadImage(straighttrack), loadImage(curvedtrack) ]);\n};\n\nconst generateCanvasObject = async (mapObject, options) => {\n\tlet canvas = document.createElement('canvas');\n\tlet context = canvas.getContext('2d');\n\n\tcanvas.width = options.dimensions;\n\tcanvas.height = options.dimensions;\n\n\tconst mapWidth = mapObject.headerLabels.x.length;\n\tconst mapHeight = mapObject.headerLabels.y.length;\n\tconst gridMapWidth = mapWidth + options.headers;\n\tconst gridMapHeight = mapHeight + options.headers;\n\tconst iconTileWidth = canvas.width / gridMapWidth;\n\tconst iconTileHeight = canvas.height / gridMapHeight;\n\tconst [ straightTrackImage, curvedTrackImage ] = await getTrackImages();\n\n\treturn {\n\t\tcanvas,\n\t\tcontext,\n\t\ticonTile: {\n\t\t\twidth: iconTileWidth,\n\t\t\theight: iconTileHeight\n\t\t},\n\t\tmap: {\n\t\t\twidth: mapWidth,\n\t\t\theight: mapHeight\n\t\t},\n\t\tgridMap: {\n\t\t\twidth: gridMapWidth,\n\t\t\theight: gridMapHeight\n\t\t},\n\t\ttrackImage: {\n\t\t\tstraight: straightTrackImage,\n\t\t\tcurved: curvedTrackImage\n\t\t},\n\t\toptions\n\t};\n};\n\nconst generateCanvas = async (mapObject, options) => {\n\tlet canvasObj = await generateCanvasObject(mapObject, options);\n\tcanvasObj.context = drawWhiteBackground(canvasObj);\n\tcanvasObj.context = drawAllTracks(mapObject, canvasObj);\n\tcanvasObj.context = drawGrid(mapObject, canvasObj);\n\tif (options.cutOut) canvasObj.context = cutOutBackgroundBox(canvasObj);\n\n\treturn canvasObj.canvas;\n};\n\nconst loadImage = (imgURL) => {\n\treturn new Promise((resolve, reject) => {\n\t\tlet img = new Image();\n\t\timg.onload = () => resolve(img);\n\t\timg.onerror = reject;\n\t\timg.src = imgURL;\n\t});\n};\n\nconst drawRotatedImage = (el, canvasObj) => {\n\tconst { context, options } = canvasObj;\n\tconst { width, height } = canvasObj.iconTile;\n\tconst { straight, curved } = canvasObj.trackImage;\n\tlet rotation = getRotationFromRailType(el.railType);\n\tcontext.save();\n\tcontext.translate(el.tile[0] * width + width / 2, (el.tile[1] + options.headers) * height + height / 2);\n\tcontext.rotate(rotation * (Math.PI / 180));\n\tcontext.drawImage(\n\t\tel.railType === 'vertical' || el.railType === 'horizontal' ? straight : curved,\n\t\t-width / 2,\n\t\t-height / 2,\n\t\twidth,\n\t\theight\n\t);\n\tcontext.restore();\n\treturn context;\n};\n\nconst drawStraightImage = (el, canvasObj) => {\n\tconst { context, options } = canvasObj;\n\tconst { width, height } = canvasObj.iconTile;\n\tconst { straight, curved } = canvasObj.trackImage;\n\tcontext.drawImage(\n\t\tel.railType === 'vertical' || el.railType === 'horizontal' ? straight : curved,\n\t\tel.tile[0] * width,\n\t\t(el.tile[1] + options.headers) * height,\n\t\twidth,\n\t\theight\n\t);\n\treturn context;\n};\n\nconst drawWhiteBackground = (canvasObj) => {\n\tconst { canvas, context } = canvasObj;\n\tcontext.fillStyle = 'white';\n\tcontext.fillRect(0, 0, canvas.width, canvas.height);\n\treturn context;\n};\n\nconst drawAllTracks = (mapObject, canvasObj) => {\n\tlet { options, context } = canvasObj;\n\tmapObject.tracks.forEach((el) => {\n\t\tif (options.complete || el.defaultTrack) {\n\t\t\tif (\n\t\t\t\tel.railType === 'horizontal' ||\n\t\t\t\tel.railType === 'topLeftCorner' ||\n\t\t\t\tel.railType === 'topRightCorner' ||\n\t\t\t\tel.railType === 'bottomRightCorner'\n\t\t\t) {\n\t\t\t\tcontext = drawRotatedImage(el, canvasObj);\n\t\t\t} else {\n\t\t\t\tcontext = drawStraightImage(el, canvasObj);\n\t\t\t}\n\t\t}\n\t});\n\treturn context;\n};\n\nconst drawGrid = (mapObject, canvasObj) => {\n\tlet { context, gridMap, iconTile, options, map } = canvasObj;\n\tfor (let i = 0; i < gridMap.width * gridMap.height; i++) {\n\t\tlet x = i % gridMap.width;\n\t\tlet y = Math.floor(i / gridMap.height);\n\t\tif (options.headers && (x === map.width || y === 0)) {\n\t\t\tconst drawObj = {\n\t\t\t\ttile: { x, y },\n\t\t\t\tmapObject\n\t\t\t};\n\t\t\tcontext = drawHeaderBox(drawObj, canvasObj);\n\t\t}\n\t\tcontext.fillStyle = 'black';\n\t\tcontext.strokeRect(x * iconTile.width, y * iconTile.height, iconTile.width, iconTile.height);\n\t}\n\treturn context;\n}\n\nconst drawHeaderBox = (drawObj, canvasObj) => {\n\tlet context = canvasObj.context;\n\tlet mapWidth = canvasObj.map.width;\n\tconst { x, y } = drawObj.tile;\n\tcontext = drawHeaderBoxBackground(drawObj.tile, canvasObj);\n\tif ((y === 0 && x !== mapWidth) || (x === mapWidth && y !== 0)) context = drawHeaderBoxText(drawObj, canvasObj);\n\treturn context;\n}\n\nconst drawHeaderBoxBackground = (tile, canvasObj) => {\n\tlet { context, iconTile } = canvasObj;\n\tconst { x, y } = tile;\n\tcontext.fillStyle = '#FFE4B5';\n\tcontext.fillRect(x * iconTile.width, y * iconTile.height, iconTile.width, iconTile.height);\n\treturn context;\n}\n\nconst drawHeaderBoxText = (drawObj, canvasObj) => {\n\tlet { context, iconTile } = canvasObj;\n\tconst { x, y } = drawObj.tile;\n\tcontext.fillStyle = 'black';\n\tcontext.font = '1.5rem Georgia';\n\tcontext.textAlign = 'center';\n\tcontext.textBaseline = 'middle';\n\tcontext.fillText(getHeaderBoxText(drawObj, canvasObj), (x + 0.5) * iconTile.width, (y + 0.5) * iconTile.height);\n\treturn context;\n}\n\nconst getHeaderBoxText = (drawObj, canvasObj) => {\n\tconst mapWidth = canvasObj.map.width;\n\tconst mapObject = drawObj.mapObject;\n\tconst { x, y } = drawObj.tile;\n\tlet headerText = 'ERROR';\n\tif (y === 0 && x !== mapWidth) headerText = mapObject.headerLabels.x[x];\n\tif (x === mapWidth && y !== 0) headerText = mapObject.headerLabels.y[y - 1];\n\treturn headerText;\n}\n\nconst cutOutBackgroundBox = (canvasObj) => {\n\tlet { context, iconTile, map } = canvasObj;\n\tconst boxWidth = 250;\n\tconst boxHeight = 150;\n\tcontext.clearRect(\n\t\t(map.width + 1) * iconTile.width / 2 - boxWidth / 2,\n\t\t(map.height - 1) * iconTile.height / 2 - boxHeight / 2,\n\t\tboxWidth,\n\t\tboxHeight\n\t);\n\tcontext.strokeRect(\n\t\t(map.width + 1) * iconTile.width / 2 - boxWidth / 2,\n\t\t(map.height - 1) * iconTile.height / 2 - boxHeight / 2,\n\t\tboxWidth,\n\t\tboxHeight\n\t);\n\treturn context;\n}\n","export const getGameMapContainerStyle = (mapSize, tileRemSize) => {\n\treturn {\n\t\tdisplay: 'inline-block',\n\t\tposition: 'relative',\n\t\tzIndex: '0',\n\t\tmarginBottom: '1rem',\n\t\tWebkitUserSelect: 'none',\n\t\tMozUserSelect: 'none',\n\t\tmsUserSelect: 'none',\n\t\tuserSelect: 'none',\n\t\tboxSizing: 'border-box',\n\t\tposition: 'relative',\n\t\twidth: `${(mapSize + 1) * tileRemSize}rem`,\n\t\theight: `${(mapSize + 1) * tileRemSize}rem`\n\t};\n};\n","import React, { useEffect, useState } from 'react';\nimport 'css/game.css';\n\nimport Map from 'js/components/Map';\nimport SaveCutout from 'js/components/SaveCutout';\nimport OptionsButtons from 'js/components/OptionsButtons';\nimport SaveMapDisplay from 'js/components/SaveMapDisplay';\nimport GameWinDisplay from 'js/components/GameWinDisplay';\n\nimport { generateMapBackground } from 'js/generation/icon/generateMapIcon';\nimport { getGameMapContainerStyle } from 'js/styles/game';\n\nexport const Game = (props) => {\n\tconst { gameState, tileRemSize, visualEffects, themeColor, mapSeed, railImages, inGameNewMap, quitGame } = props;\n\n\tconst [ gameWon, setGameWon ] = useState(false);\n\tconst [ placedTracks, setPlacedTracks ] = useState([]);\n\n\tconst [ display, setDisplay ] = useState({\n\t\twinPopUp: false,\n\t\tsavePopUp: false,\n\t\tsaveBoxCutOut: null,\n\t\tdefaultHighlights: false,\n\t\tsolutionVisible: false\n\t});\n\n\tuseEffect(\n\t\t() => {\n\t\t\t(async () => {\n\t\t\t\tif (display.savePopUp) {\n\t\t\t\t\tsetDisplay({\n\t\t\t\t\t\t...display,\n\t\t\t\t\t\tsaveBoxCutOut: await generateMapBackground(gameState.mapObject, tileRemSize)\n\t\t\t\t\t});\n\t\t\t\t} else setDisplay({ ...display, saveBoxCutOut: null });\n\t\t\t})();\n\t\t},\n\t\t[ display.savePopUp ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (gameWon) setDisplay({ ...display, winPopUp: true });\n\t\t},\n\t\t[ gameWon ]\n\t);\n\n\tconst commonProps = {\n\t\tplacedTracks,\n\t\tsetPlacedTracks,\n\t\tvisualEffects,\n\t\tdisplay,\n\t\tsetGameWon\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div style={getGameMapContainerStyle(gameState.size, tileRemSize)}>\n\t\t\t\t{display.winPopUp && <GameWinDisplay {...{ display, setDisplay, visualEffects, themeColor }} />}\n\t\t\t\t{display.savePopUp && <SaveMapDisplay {...{ display, setDisplay, gameState }} />}\n\t\t\t\t<Map\n\t\t\t\t\t{...{\n\t\t\t\t\t\ttileRemSize,\n\t\t\t\t\t\trailImages,\n\t\t\t\t\t\tthemeColor\n\t\t\t\t\t}}\n\t\t\t\t\ttrainTrackMap={gameState.mapObject}\n\t\t\t\t\t{...commonProps}\n\t\t\t\t/>\n\t\t\t\t<SaveCutout {...{ display, tileRemSize }} />\n\t\t\t</div>\n\t\t\t<OptionsButtons\n\t\t\t\t{...{\n\t\t\t\t\tsetDisplay,\n\t\t\t\t\tgameState,\n\t\t\t\t\tinGameNewMap,\n\t\t\t\t\tquitGame\n\t\t\t\t}}\n\t\t\t\t{...commonProps}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default Game;\n","import React, { useEffect, useState } from 'react';\n\nconst Dropdown = ({ style, placeholder, options, onChange, onHover, className }) => {\n\tconst [ listOpen, setListOpen ] = useState(false);\n\tconst [ defaultValue, setDefaultValue ] = useState(placeholder);\n\tconst [ hoveredOption, setHoveredOption ] = useState(null);\n\n\tconst containerStyle = {\n\t\tbackground: '#fff',\n\t\tborder: '1px #aaa solid',\n\t\tlineHeight: style.height,\n\t\t...style,\n\t\tposition: 'relative',\n\t\tWebkitUserSelect: 'none',\n\t\tMozUserSelect: 'none',\n\t\tmsUserSelect: 'none',\n\t\tuserSelect: 'none',\n\t\tborderRadius: listOpen ? '1rem 1rem 0 0' : '1rem',\n\t\tboxShadow: '0px 5px 0px 2px #eee',\n\t\tcursor: 'pointer'\n\t};\n\n\tconst listItemStyle = {\n\t\t...containerStyle,\n\t\tborderTop: 'none'\n\t};\n\n\tconst renderDropDownList = (options) => {\n\t\tlet dropDownList = [];\n\t\toptions.forEach((item, i) => {\n\t\t\tdropDownList.push(\n\t\t\t\t<div\n\t\t\t\t\tclassName={'dropdown'}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t...listItemStyle,\n\t\t\t\t\t\tbackground: hoveredOption === i ? '#9999FF' : '#fff',\n\t\t\t\t\t\tcolor: hoveredOption === i ? 'white' : 'black',\n\t\t\t\t\t\tborderRadius: i === options.length - 1 ? '0 0 1rem 1rem' : '0'\n\t\t\t\t\t}}\n\t\t\t\t\tkey={`dropdownOption${i}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\toptionSelected(item);\n\t\t\t\t\t\tsetDefaultValue(item.display);\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseOver={() => {\n\t\t\t\t\t\toptionHovered(item.mapObject);\n\t\t\t\t\t\tsetHoveredOption(i);\n\t\t\t\t\t}}\n\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\toptionHovered(null);\n\t\t\t\t\t\tsetHoveredOption(null);\n\t\t\t\t\t}}\n\t\t\t\t\tonContextMenu={(e) => e.preventDefault()}\n\t\t\t\t>\n\t\t\t\t\t{item.display}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t\treturn dropDownList;\n\t};\n\n\tconst renderDropdownArrow = () => {\n\t\tconst arrowStyling = { fontSize: '0.75rem', position: 'absolute', right: '5%' };\n\t\treturn <span style={arrowStyling}>▼</span>;\n\t};\n\n\tuseEffect(() => {\n\t\tif (listOpen) {\n\t\t\tdocument.addEventListener('mousedown', whileDropdownOpenClick);\n\t\t} else {\n\t\t\tdocument.removeEventListener('mousedown', whileDropdownOpenClick);\n\t\t}\n\t\treturn () => document.removeEventListener('mousedown', whileDropdownOpenClick);\n\t});\n\n\tconst whileDropdownOpenClick = (e) => {\n\t\tif (e.target.className === 'dropdown') {\n\t\t\treturn;\n\t\t}\n\t\tsetListOpen(false);\n\t\tonHover(false);\n\t};\n\n\tconst optionSelected = (item, mapObject) => {\n\t\tonChange(item, mapObject);\n\t\tsetListOpen(false);\n\t};\n\n\tconst optionHovered = (item) => onHover(item);\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<div\n\t\t\t\tclassName={'dropdown'}\n\t\t\t\tstyle={{ ...containerStyle, backgroundColor: '#fff' }}\n\t\t\t\tonMouseDown={(e) => {\n\t\t\t\t\tif (e.buttons === 1) setListOpen(!listOpen);\n\t\t\t\t}}\n\t\t\t\tonContextMenu={(e) => e.preventDefault()}\n\t\t\t>\n\t\t\t\t{defaultValue}\n\t\t\t\t{renderDropdownArrow()}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: 'absolute'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{listOpen ? renderDropDownList(options) : null}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport 'css/confirmDeleteScreen.css';\nimport WaveButton from 'js/components/WaveButton';\nimport { deleteLocalSavedMap, deleteAllLocalSavedMaps } from 'js/utility/localStorage';\n\nexport const DeleteMapConfirmScreen = (props) => {\n\treturn (\n\t\t<div className=\"deleteConfirmScreen\">\n\t\t\t<h3 className=\"deleteConfirmLabel\">\n\t\t\t\tAre you sure you want to delete {props.deleteModeOnAll ? 'ALL saved maps?' : 'the following saved map?'}\n\t\t\t</h3>\n\t\t\t<img\n\t\t\t\talt=\"\"\n\t\t\t\tsrc={props.deleteModeOnAll ? null : props.mapIcon}\n\t\t\t\tstyle={{ display: props.deleteModeOnAll ? 'none' : 'block' }}\n\t\t\t\tclassName=\"confirmDeleteIcon\"\n\t\t\t/>\n\t\t\t<div className=\"deleteButtons\">\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"confirmDeleteBtn\"\n\t\t\t\t\tkey={'confirmDeleteBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (props.deleteModeOnAll) deleteAllLocalSavedMaps();\n\t\t\t\t\t\telse deleteLocalSavedMap(props.gameState.seed);\n\t\t\t\t\t\tprops.quitToLoadScreen();\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Confirm'}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"cancelDeleteBtn\"\n\t\t\t\t\tkey={'cancelDeleteBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.quitToLoadScreen();\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Cancel'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DeleteMapConfirmScreen;\n","import React from 'react';\nimport WaveButton from 'js/components/WaveButton';\n\nexport const ReturnToMainMenuBtn = (props) => {\n\treturn (\n\t\t<WaveButton\n\t\t\tclassName=\"returnToMainMenuBtn\"\n\t\t\tkey={'returnToMainMenuBtn'}\n\t\t\tonClick={() => {\n\t\t\t\tprops.setCurrentScreen('mainMenu');\n\t\t\t}}\n\t\t\ttext={'Return To Main Menu'}\n\t\t/>\n\t);\n};\n\nexport default ReturnToMainMenuBtn;\n","import React, { useState } from 'react';\nimport WaveButton from 'js/components/WaveButton';\nimport Dropdown from 'js/components/Dropdown';\nimport DeleteMapConfirmScreen from 'js/screen/deleteMapConfirmScreen.jsx';\nimport { generateMapIcon } from 'js/generation/icon/generateMapIcon';\nimport ReturnToMainMenuBtn from 'js/components/ReturnToMainMenuBtn.jsx';\n\nimport { getLocalStorageMaps } from 'js/utility/localStorage';\n\nconst renderSavedMapsDropdownValues = () => {\n\tconst localMaps = getLocalStorageMaps();\n\tlet dropDownValues = [];\n\tlocalMaps.forEach(async (el) => {\n\t\tdropDownValues.push({\n\t\t\tdisplay: el.name,\n\t\t\tseed: el.seed,\n\t\t\tsize: el.size,\n\t\t\tmapObject: el.mapObject\n\t\t});\n\t});\n\n\treturn dropDownValues;\n}\n\nexport const LoadMapScreen = (props) => {\n\tconst [ screenState, setScreenState ] = useState('load');\n\tconst [ mapIcon, setMapIcon ] = useState(null);\n\n\tconst displaySavedGameMapIcon = async (mapObject) => {\n\t\tsetMapIcon(mapObject ? await generateMapIcon(mapObject, false) : null);\n\t};\n\n\tif (screenState === 'load') {\n\t\treturn (\n\t\t\t<div className=\"menu loadMapScreen\">\n\t\t\t\t<Dropdown\n\t\t\t\t\tclassName=\"loadMapDropdown\"\n\t\t\t\t\tstyle={{ width: '12rem', height: '2rem' }}\n\t\t\t\t\tplaceholder={'Select a map'}\n\t\t\t\t\toptions={renderSavedMapsDropdownValues()}\n\t\t\t\t\tonChange={(item) => {\n\t\t\t\t\t\tconst { display, ...mapObject } = item;\n\t\t\t\t\t\tprops.setGameState({ ...props.gameState, ...mapObject });\n\t\t\t\t\t}}\n\t\t\t\t\tonHover={(mapObject) => {\n\t\t\t\t\t\tif (mapObject !== null) displaySavedGameMapIcon(mapObject);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<img\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tsrc={mapIcon}\n\t\t\t\t\tclassName=\"mapIcon\"\n\t\t\t\t\tstyle={{ border: mapIcon ? '0.15rem #aaa solid' : 'none' }}\n\t\t\t\t/>\n\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"loadSaveMapBtn\"\n\t\t\t\t\tkey={'loadSaveMapBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (props.gameState.mapObject) props.setGameState({ ...props.gameState, active: true });\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Load Map'}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"deleteSaveMapBtn\"\n\t\t\t\t\tkey={'deleteSaveMapBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (mapIcon) setScreenState('deleteOne');\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Delete Map'}\n\t\t\t\t/>\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"deleteAllSavedMapsBtn\"\n\t\t\t\t\tkey={'deleteAllSavedMapsBtn'}\n\t\t\t\t\tonClick={() => setScreenState('deleteAll')}\n\t\t\t\t\ttext={'Delete All Maps'}\n\t\t\t\t/>\n\t\t\t\t<ReturnToMainMenuBtn {...props} />\n\t\t\t</div>\n\t\t);\n\t} else {\n\t\tconst deleteModeOnAll = screenState === 'deleteOne' ? false : true;\n\t\treturn (\n\t\t\t<DeleteMapConfirmScreen\n\t\t\t\t{...props}\n\t\t\t\tmapIcon={mapIcon}\n\t\t\t\tdeleteModeOnAll={deleteModeOnAll}\n\t\t\t\tquitToLoadScreen={() => {\n\t\t\t\t\tsetMapIcon(null);\n\t\t\t\t\tsetScreenState('load');\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n};\n\nexport default LoadMapScreen;\n","export const generateStartEndPoints = (parameters) => {\n\tlet edges = getEdgeCoordinatesClockwiseOrder(parameters);\n\tlet startCoordinate = edges.splice(Math.floor(Math.random() * edges.length), 1)[0];\n\tlet endCoordinate = edges.splice(Math.floor(Math.random() * edges.length), 1)[0];\n\treturn [ startCoordinate, endCoordinate ];\n};\n\nconst getEdgeCoordinatesClockwiseOrder = (parameters) => {\n\tconst { mapWidth, mapHeight } = parameters;\n\tlet coordinates = [];\n\tfor (let x = 0; x < mapWidth - 1; x++) coordinates.push([ x, 0 ]); //top\n\tfor (let y = 0; y < mapHeight - 1; y++) coordinates.push([ mapWidth - 1, y ]); //right\n\tfor (let x = mapWidth - 1; x > 0; x--) coordinates.push([ x, mapHeight - 1 ]); //bottom\n\tfor (let y = mapHeight - 1; y > 0; y--) coordinates.push([ 0, y ]); //left\n\treturn coordinates;\n}\n","import { removeArraysFromMatrix } from 'js/utility/utilityFunctions.js';\n\nexport const getLegalMoves = (coordinate, genMap) => {\n\tconst adjacentMoves = getAdjacentTiles(coordinate);\n\tlet legalMoves = removeOutOfBoundsMoves(adjacentMoves, genMap.parameters);\n\tlegalMoves = removeMovesToVisitedTiles(legalMoves, genMap.tiles);\n\treturn legalMoves;\n};\n\nexport const removeOutOfBoundsMoves = (moves, parameters) => {\n\tconst { mapWidth, mapHeight } = parameters;\n\treturn moves.filter((el) => el[0] >= 0 && el[1] >= 0 && el[0] < mapWidth && el[1] < mapHeight);\n};\n\nexport const removeMovesToVisitedTiles = (moves, tiles) => {\n\treturn removeArraysFromMatrix(tiles, moves);\n};\n\nexport const getAdjacentTiles = (coordinate) => {\n\treturn Array(4).fill(coordinate).map((el, i) => [ el[0] + (i - 1) % 2, el[1] + (i - 2) % 2 ]);\n};\n","import { getLegalMoves } from 'js/generation/map/genericGenMapFunctions.js';\nimport { removeDuplicateArraysFromMatrix, checkIfArrayIsInMatrix } from 'js/utility/utilityFunctions.js';\n\nexport const checkIfPossibleToReachTargetIterative = (move, genMap) => {\n\tconst { mapWidth, mapHeight } = genMap.parameters;\n\tlet tiles = [ ...genMap.tiles ];\n\tlet currentMoves = [ move ]; // convert array to matrix of length 1\n\tfor (let i = 0; i < mapWidth * mapHeight; i++) {\n\t\tlet legalMoves = currentMoves.map((el) => {\n\t\t\treturn getLegalMoves(el, { ...genMap, tiles });\n\t\t});\n\t\tlegalMoves = [].concat.apply([], legalMoves);\n\t\tcurrentMoves.forEach((move) => tiles.push(move));\n\t\tcurrentMoves = [];\n\t\tif (legalMoves.length === 0) break;\n\t\tlegalMoves = removeDuplicateArraysFromMatrix(legalMoves);\n\t\tlegalMoves.forEach((move) => currentMoves.push(move));\n\t}\n\tconst possible = checkIfArrayIsInMatrix(genMap.end, tiles);\n\treturn possible;\n};\n","import {\n\trandomIntFromInterval,\n\tfindIndexOfArrayInMatrix,\n\tremoveDuplicateArraysFromMatrix,\n\tremoveArraysFromMatrix,\n\tfindCommonArraysOfAllMatrices,\n\thalveArray,\n\tshuffleArray\n} from 'js/utility/utilityFunctions';\nimport { getAdjacentTiles } from 'js/generation/map/genericGenMapFunctions';\n\n// Definitive indices are required for a single solution without trial and error\nexport const generateDefaultTileIndices = (allTiles, parameters) => {\n\tconst definitiveIndices = getAllTwoByTwoDefaultIndices(allTiles, parameters);\n\tconst mapInfo = { mapLength: allTiles.length, difficulty: parameters.difficulty };\n\tconst optionalIndices = modifyDefinitiveIndices(definitiveIndices, mapInfo);\n\tconst mandatoryIndices = getStartAndEndIndices(allTiles);\n\treturn [ ...new Set([ ...optionalIndices, ...mandatoryIndices ]) ];\n};\n\nconst modifyDefinitiveIndices = (definitiveIndices, mapInfo) => {\n\tconst { mapLength, difficulty } = mapInfo;\n\tconst helperIndices = getHelperIndices(definitiveIndices, mapLength);\n\tif (difficulty === 1) return [ ...definitiveIndices, ...helperIndices ];\n\tif (difficulty === 2) return [ ...definitiveIndices, ...halveArray(helperIndices) ];\n\tif (difficulty === 3) return definitiveIndices;\n\tif (difficulty === 4) return halveArray(definitiveIndices);\n\tif (difficulty === 5) return [];\n};\n\nconst getHelperIndices = (indices, mapLength) => {\n\tconst all = [ ...Array(mapLength).keys() ];\n\tconst possible = all.filter((el) => indices.indexOf(el) === -1);\n\tconst shuffled = shuffleArray(possible);\n\treturn halveArray(shuffled);\n};\n\nconst getStartAndEndIndices = (allTiles) => {\n\treturn [ 0, allTiles.length - 1 ];\n};\n\nconst getAllTwoByTwoDefaultIndices = (allTiles, parameters) => {\n\tlet defaultCoordinates = iterateThroughEachPossibleSquare(allTiles, parameters);\n\tdefaultCoordinates = removeDefaultTilesWithMoreThanOneAdjacent(defaultCoordinates);\n\tconst defaultIndices = defaultCoordinates.map((el) => findIndexOfArrayInMatrix(el, allTiles));\n\treturn [ ...new Set(defaultIndices) ];\n};\nconst iterateThroughEachPossibleSquare = (allTiles, parameters) => {\n\tlet nonDefaultTrackTiles = allTiles;\n\tlet defaultCoordinates = [];\n\tfor (let y = 0; y < 2; y++) {\n\t\tfor (let x = 0; x < 2; x++) {\n\t\t\tconst offset = { x, y };\n\t\t\tconst coordinates = getSquareDefaultCoordinates(nonDefaultTrackTiles, offset, parameters);\n\t\t\tdefaultCoordinates.push(coordinates);\n\t\t\tnonDefaultTrackTiles = removeArraysFromMatrix(coordinates, allTiles);\n\t\t}\n\t}\n\treturn [].concat(...defaultCoordinates);\n};\n\nconst removeDefaultTilesWithMoreThanOneAdjacent = (defaultCoordinates) => {\n\tlet currentDefaultTiles = [ ...defaultCoordinates ];\n\treturn defaultCoordinates.filter((tile) => {\n\t\tconst adjDefTileCount = getAdjacentDefaultTileCount(tile, currentDefaultTiles);\n\t\tconst moreThanOneAdj = adjDefTileCount > 1;\n\t\tif (moreThanOneAdj) currentDefaultTiles = removeArraysFromMatrix([ tile ], currentDefaultTiles);\n\t\treturn !moreThanOneAdj;\n\t});\n};\n\nconst getAdjacentDefaultTileCount = (tile, currentDefaultTiles) => {\n\tconst adjTiles = getAdjacentTiles(tile);\n\tconst nonDefTiles = removeArraysFromMatrix(currentDefaultTiles, adjTiles);\n\treturn 4 - nonDefTiles.length;\n};\n\nconst getSquareDefaultCoordinates = (nonDefaultTrackTiles, offset, parameters) => {\n\tconst squares = splitMapIntoSquares(offset, parameters);\n\tconst fullSquares = filterForFullSquares(nonDefaultTrackTiles, squares);\n\tconst defaultCoordinates = getRandomNonDuplicateCoordinatesFromMatrix(fullSquares);\n\treturn defaultCoordinates;\n};\n\nconst getRandomNonDuplicateCoordinatesFromMatrix = (matrix) => {\n\tconst coordinates = matrix.map((el) => el[randomIntFromInterval(0, el.length - 1)]);\n\treturn removeDuplicateArraysFromMatrix(coordinates);\n};\n\nconst filterForFullSquares = (allTiles, squares) => {\n\treturn squares.filter((square) => checkIfSquareIsFull(square, allTiles));\n};\n\nconst checkIfSquareIsFull = (square, allTiles) => {\n\treturn findCommonArraysOfAllMatrices([ square, allTiles ]).length === 4;\n};\n\nconst splitMapIntoSquares = (offset, parameters) => {\n\tconst { mapWidth, mapHeight } = parameters;\n\tlet squares = [];\n\tfor (let y = offset.y; y < mapHeight - 1 - offset.y; y += 2) {\n\t\tfor (let x = offset.x; x < mapWidth - 1 - offset.x; x += 2) {\n\t\t\tsquares.push(getTwoByTwoSquare(x, y));\n\t\t}\n\t}\n\treturn squares;\n};\n\nconst getTwoByTwoSquare = (x, y) => {\n\tlet square = [];\n\tfor (let b = 0; b < 2; b++) {\n\t\tfor (let a = 0; a < 2; a++) {\n\t\t\tsquare.push([ a + x, b + y ]);\n\t\t}\n\t}\n\treturn square;\n};\n","import { compareArrays } from 'js/utility/utilityFunctions';\n\nexport const removeExitMove = (legalMoves, genMap) => {\n\tlegalMoves = legalMoves.filter((move) => !compareArrays(move, genMap.end));\n\treturn legalMoves;\n};\n","import { compareArrays, findIndexOfArrayInMatrix } from 'js/utility/utilityFunctions';\nimport { removeOutOfBoundsMoves, getAdjacentTiles } from 'js/generation/map/genericGenMapFunctions';\n\nexport const removeAroundExitMoves = (legalMoves, genMap) => {\n\tlegalMoves = legalMoves.filter((move) => !checkIfMoveIsAroundExitTile(move, genMap));\n\treturn legalMoves;\n};\n\nconst checkIfMoveIsAroundExitTile = (move, genMap) => {\n\tconst tilesAroundExit = chooseSurroundOrAdjacentExitTiles(move, genMap);\n\tlet moveIsAdjExit = false;\n\ttilesAroundExit.forEach((tile) => {\n\t\tif (compareArrays(move, tile)) moveIsAdjExit = true;\n\t});\n\treturn moveIsAdjExit;\n};\n\nconst chooseSurroundOrAdjacentExitTiles = (move, genMap) => {\n\tif (checkIfTilesAdjacent(move, genMap)) {\n\t\treturn getTilesSurroundingExit(genMap);\n\t} else {\n\t\treturn getTilesAdjacentAndExit(genMap);\n\t}\n};\n\nconst checkIfTilesAdjacent = (tile, genMap) => {\n\tconst adjacentTiles = getTilesAdjacentAndExit(genMap);\n\tconst tileIsAdjacent = findIndexOfArrayInMatrix(tile, adjacentTiles) !== -1;\n\treturn tileIsAdjacent;\n};\n\nconst getTilesSurroundingExit = (genMap) => {\n\tconst adjacentTiles = getSurroundingTiles(genMap.end);\n\treturn removeOutOfBoundsMoves(adjacentTiles, genMap.parameters);\n};\n\nconst getSurroundingTiles = (coordinate) => {\n\tlet tileArray = [];\n\tfor (let a = -1; a <= 1; a++) {\n\t\tfor (let b = -1; b <= 1; b++) {\n\t\t\ttileArray.push([ coordinate[0] + a, coordinate[1] + b ]);\n\t\t}\n\t}\n\treturn tileArray;\n};\n\nconst getTilesAdjacentAndExit = (genMap) => {\n\tconst adjacentTiles = getAdjacentTiles(genMap.end);\n\treturn removeOutOfBoundsMoves(adjacentTiles, genMap.parameters);\n};\n","import { getLegalMoves } from 'js/generation/map/genericGenMapFunctions';\nimport { checkIfPossibleToReachTargetIterative } from 'js/generation/map/checkIfPossibleToReachTargetIterative';\n\nexport const removeSealingMoves = (legalMoves, genMap) => {\n\tif (!checkIfMapCovered(genMap, 0.5)) {\n\t\tlegalMoves = legalMoves.filter((move) => !checkIfMoveSeals(move, genMap));\n\t}\n\treturn legalMoves;\n};\n\nconst checkIfMapCovered = (genMap, modifier) => {\n\tconst { mapWidth, mapHeight } = genMap.parameters;\n\tconst mapCoverage = modifier * mapWidth * mapHeight;\n\treturn genMap.tiles.length >= mapCoverage;\n};\n\nconst checkIfMoveSeals = (move, genMap) => {\n\tconst newGenMapObj = { ...genMap, tiles: [ ...genMap.tiles, move ] };\n\tconst nextLegalMoves = getLegalMoves(move, genMap);\n\tfor (let i = 0; i < nextLegalMoves.length; i++) {\n\t\tif (!checkIfPossibleToReachTargetIterative(nextLegalMoves[i], newGenMapObj)) return true;\n\t}\n\treturn false;\n};\n","import { compareArrays } from 'js/utility/utilityFunctions';\nimport { findDirectionFromMove } from 'js/utility/directionsConversions.js';\n\nexport const removeHookMoves = (legalMoves, genMap) => {\n\tif (genMap.tiles.length > 2) {\n\t\tlegalMoves = legalMoves.filter((move) => !checkIfMoveWillBeHook(move, genMap.tiles));\n\t}\n\treturn legalMoves;\n};\n\nconst checkIfMoveWillBeHook = (prospectiveMove, generatedTiles) => {\n\tconst lastThreeTiles = getLastSpecifiedAmountOfTiles(3, generatedTiles);\n\tconst prospectiveLastFourTiles = [ prospectiveMove, ...lastThreeTiles ];\n\tconst dirArr = getSeriesOfDirectionsFromMoveArray(prospectiveLastFourTiles);\n\tlet wasHook = checkIfMoveArrayFormsHook(dirArr);\n\treturn wasHook;\n};\n\nconst getSeriesOfDirectionsFromMoveArray = (moves) => {\n\tlet directions = [];\n\tfor (let i = 0; i < moves.length - 1; i++) {\n\t\tdirections.unshift(findDirectionFromMove(moves[i], moves[i + 1]));\n\t}\n\treturn directions;\n};\n\nconst getLastSpecifiedAmountOfTiles = (numberOfTiles, tiles) => {\n\treturn tiles.slice(Math.max(tiles.length - numberOfTiles, 0)).reverse();\n};\n\nconst checkIfMoveArrayFormsHook = (moveArray) => {\n\tlet movesFormHook = false;\n\tif (\n\t\tcompareArrays(moveArray, [ 0, 1, 2 ]) ||\n\t\tcompareArrays(moveArray, [ 1, 2, 3 ]) ||\n\t\tcompareArrays(moveArray, [ 2, 3, 0 ]) ||\n\t\tcompareArrays(moveArray, [ 3, 0, 1 ])\n\t) {\n\t\tmovesFormHook = true;\n\t}\n\tif (\n\t\tcompareArrays(moveArray, [ 3, 2, 1 ]) ||\n\t\tcompareArrays(moveArray, [ 2, 1, 0 ]) ||\n\t\tcompareArrays(moveArray, [ 1, 0, 3 ]) ||\n\t\tcompareArrays(moveArray, [ 0, 3, 2 ])\n\t) {\n\t\tmovesFormHook = true;\n\t}\n\treturn movesFormHook;\n};\n","import {\n\tisNonEmptyArray,\n\tremoveDuplicateArraysFromMatrix,\n\tcheckIfArrayIsInMatrix\n} from 'js/utility/utilityFunctions.js';\nimport { getLegalMoves } from 'js/generation/map/genericGenMapFunctions.js';\n\nexport const removeMovesWithLessTilesFromExit = (legalMoves, genMap) => {\n\tconst moveWithMore = getMovesWithMoreTilesAwayFromExit(legalMoves, genMap);\n\tif (isNonEmptyArray(moveWithMore)) return [ ...moveWithMore ];\n\telse return legalMoves;\n};\n\nconst getMovesWithMoreTilesAwayFromExit = (legalMoves, genMap) => {\n\tlet pathLengths = legalMoves.map((el) => getMinimumDistanceToExit(el, genMap));\n\tconst indices = getIndicesOfLargestElementsInArray(pathLengths);\n\tlet moves = [];\n\tfor (let i = 0; i < indices.length; i++) {\n\t\tmoves.push(legalMoves[indices[i]]);\n\t}\n\treturn moves;\n}\nconst getMinimumDistanceToExit = (move, genMap) => {\n\tconst { mapWidth, mapHeight } = genMap.parameters;\n\tlet tiles = [ ...genMap.tiles ];\n\tlet currentMoves = [ move ]; // convert array to matrix of length 1\n\tfor (let i = 0; i < mapWidth * mapHeight; i++) {\n\t\tlet legalMoves = currentMoves.map((el) => {\n\t\t\treturn getLegalMoves(el, { ...genMap, tiles });\n\t\t});\n\t\tlegalMoves = [].concat.apply([], legalMoves);\n\t\tcurrentMoves.forEach((move) => tiles.push(move));\n\t\tcurrentMoves = [];\n\t\tif (checkIfArrayIsInMatrix(genMap.end, tiles)) return i;\n\t\tlegalMoves = removeDuplicateArraysFromMatrix(legalMoves);\n\t\tlegalMoves.forEach((move) => currentMoves.push(move));\n\t}\n};\n\nconst getIndicesOfLargestElementsInArray = (array) => {\n\tconst largestValue = array[array.indexOf(Math.max(...array))];\n\tlet largestIndices = [];\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (array[i] === largestValue) largestIndices.push(i);\n\t}\n\treturn largestIndices;\n};\n","import { randomIntFromInterval, compareArrays, isNonEmptyArray } from 'js/utility/utilityFunctions';\nimport {\n\tdirectionsToTrackRailType,\n\tgetTilesInEachDirection,\n\tgetDirectionOfEachMove\n} from 'js/utility/directionsConversions.js';\n\nimport { generateStartEndPoints } from 'js/generation/map/generateStartEndPoints';\nimport { getLegalMoves } from 'js/generation/map/genericGenMapFunctions';\nimport { checkIfPossibleToReachTargetIterative } from 'js/generation/map/checkIfPossibleToReachTargetIterative';\nimport { generateDefaultTileIndices } from 'js/generation/map/generateDefaultTileIndices';\n\nimport { removeExitMove } from 'js/generation/map/mutateMoveArray/removeExitMove';\nimport { removeAroundExitMoves } from 'js/generation/map/mutateMoveArray/removeAroundExitMoves';\nimport { removeSealingMoves } from 'js/generation/map/mutateMoveArray/removeSealingMoves';\nimport { removeHookMoves } from 'js/generation/map/mutateMoveArray/removeHookMoves';\nimport { removeMovesWithLessTilesFromExit } from 'js/generation/map/mutateMoveArray/removeMovesWithLessTilesFromExit';\n\nexport const generateNewMap = (passedParameters) => {\n\tconst parameters = {\n\t\tmapWidth: passedParameters.size,\n\t\tmapHeight: passedParameters.size,\n\t\tdifficulty: passedParameters.difficulty\n\t};\n\n\tlet trainTrackMap = {\n\t\ttracks: [],\n\t\theaderLabels: []\n\t};\n\n\tconst allTiles = generateMapTiles(parameters);\n\tconst moveDirections = getDirectionOfEachMove(allTiles, parameters);\n\tconst railTypes = directionsToTrackRailType(moveDirections);\n\tconst defaultTilesIndices = generateDefaultTileIndices(allTiles, parameters);\n\n\ttrainTrackMap.headerLabels = generateMapHeaders(allTiles, parameters);\n\n\tfor (let i = 0; i < allTiles.length; i++) {\n\t\tlet isDefaultTrack = defaultTilesIndices.includes(i);\n\n\t\ttrainTrackMap.tracks.push({\n\t\t\ttile: allTiles[i],\n\t\t\trailType: railTypes[i],\n\t\t\tdefaultTrack: isDefaultTrack\n\t\t});\n\t}\n\treturn trainTrackMap;\n};\n\nconst generateMapTiles = (parameters) => {\n\tconst [ start, end ] = generateStartEndPoints(parameters);\n\n\tlet genMap = {\n\t\tstart,\n\t\tend,\n\t\ttiles: [ start ],\n\t\tcurrent: start,\n\t\tparameters\n\t};\n\n\tlet mapComplete = false;\n\n\twhile (!mapComplete) {\n\t\tlet nextMove = newMove(genMap);\n\t\tgenMap.tiles.push(nextMove);\n\t\tgenMap.current = nextMove;\n\t\tif (compareArrays(nextMove, genMap.end)) {\n\t\t\tmapComplete = true;\n\t\t}\n\t}\n\treturn genMap.tiles;\n};\n\nconst newMove = (genMap) => {\n\tlet nextMove;\n\tlet legalMoves = getLegalMoves(genMap.current, genMap);\n\n\tif (checkIfOnlyLegalMoveIsExit(legalMoves, genMap.end)) {\n\t\tnextMove = genMap.end;\n\t} else {\n\t\tlegalMoves = legalMoves.filter((move) => checkIfPossibleToReachTargetIterative(move, genMap));\n\t\tlegalMoves = mutateMoveArray(legalMoves, genMap);\n\t\tnextMove = legalMoves[randomIntFromInterval(0, legalMoves.length - 1)];\n\t}\n\treturn nextMove;\n};\n\nconst checkIfOnlyLegalMoveIsExit = (legalMoves, endCoordinate) => {\n\treturn legalMoves.length === 1 && compareArrays(legalMoves[0], endCoordinate);\n};\n\nconst mutateMoveArray = (legalMoves, genMap) => {\n\tlet moveMutateFunctions = [];\n\n\tmoveMutateFunctions.push(removeExitMove);\n\tmoveMutateFunctions.push(removeAroundExitMoves);\n\tmoveMutateFunctions.push(removeSealingMoves);\n\tmoveMutateFunctions.push(removeHookMoves);\n\tmoveMutateFunctions.push(removeMovesWithLessTilesFromExit);\n\n\tfor (let i = 0; i < moveMutateFunctions.length; i++) {\n\t\tlet currentFunc = moveMutateFunctions[i];\n\t\tlet mutatedMoveArray = currentFunc(legalMoves, genMap);\n\t\tif (!isNonEmptyArray(mutatedMoveArray)) {\n\t\t\tbreak;\n\t\t} else {\n\t\t\tlegalMoves = mutatedMoveArray;\n\t\t}\n\t}\n\treturn legalMoves;\n};\n\nconst generateMapHeaders = (allTiles, parameters) => {\n\tconst { mapWidth, mapHeight } = parameters;\n\tlet mapHeaders = { x: [], y: [] };\n\tfor (let i = 0; i < mapWidth; i++) {\n\t\tmapHeaders.x.push(getTilesInEachDirection([ i, -1 ], allTiles)[2].length);\n\t}\n\tfor (let i = 0; i < mapHeight; i++) {\n\t\tmapHeaders.y.push(getTilesInEachDirection([ -1, i ], allTiles)[1].length);\n\t}\n\treturn mapHeaders;\n};\n","import React, { useEffect, useState } from 'react';\nimport 'css/howToPlayScreen.css';\nimport ReturnToMainMenuBtn from 'js/components/ReturnToMainMenuBtn.jsx';\nimport { generateNewMap } from 'js/generation/map/generateMap';\nimport { generateMapIcon } from 'js/generation/icon/generateMapIcon';\n\nexport const HowToPlayScreen = (props) => {\n\tconst { mobileView } = props;\n\tconsole.log(mobileView);\n\tconst [ maps, setMaps ] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst getMaps = async () => {\n\t\t\tconst gameParameters = { size: 6, seed: 251583746297744, difficulty: 3 };\n\t\t\tconst map = generateNewMap(gameParameters);\n\t\t\tconst emptyMap = await generateMapIcon(map, false);\n\t\t\tconst completeMap = await generateMapIcon(map, true);\n\t\t\tsetMaps({ empty: emptyMap, complete: completeMap });\n\t\t};\n\t\tgetMaps();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"howToPlayScreen\" key=\"howToPlayScreen\">\n\t\t\t<h2 className=\"howToPlayTitle\">How To Play</h2>\n\t\t\t<div className=\"howToPlayGrid\" style={{ opacity: maps ? '1' : '0' }}>\n\t\t\t\t<div className=\"howToPlayMapField\">\n\t\t\t\t\t<img className=\"howToPlayMap\" alt=\"\" src={maps.empty} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"howToPlayTextField\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tThe goal of the game is to create a train track path between the entrance and the exit of the\n\t\t\t\t\t\tboard.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tEach row and column must contain the specified amount of tracks in the corresponding header.\n\t\t\t\t\t\tHeaders display green if correct and red if overfilled.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Tracks cannot overlap. In order to win the path must be fully connected with no extra tracks.</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tDefault tiles (such as the entrance and exit) cannot be removed from the map. The higher the\n\t\t\t\t\t\tdifficulty selected, the less default tiles on the map.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"howToPlayMapField\">\n\t\t\t\t\t<img className=\"howToPlayMap\" alt=\"\" src={maps.complete} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"howToPlayTextField\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tLeft clicking places a track. Hovering over different sections of a tile will show what type of\n\t\t\t\t\t\ttrack will be placed on left click.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tRight clicking places an X mark. X marks are for labelling tiles where you know there is no\n\t\t\t\t\t\ttrack.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tPressing both mouse buttons at the same time places a dot mark. Dot marks are for labelling\n\t\t\t\t\t\ttiles where you know there is a track but are not sure which type.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>Holding down a mouse button and dragging over other tiles will place multiple tracks/markers.</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ReturnToMainMenuBtn {...props} />\n\t\t</div>\n\t);\n};\n\nexport default HowToPlayScreen;\n","import React, { useState } from 'react';\n\nexport const DifficultySlider = (props) => {\n\tconst [ hover, setHover ] = useState(false);\n\tconst SLIDER_REM_WIDTH = 5;\n\n\tconst containerStyle = {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center'\n\t};\n\n\tconst labelDefaultStyle = {\n\t\tposition: 'absolute',\n\t\theight: '1.5rem',\n\t\twidth: '1.5rem',\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center',\n\t\tborder: '1px solid #444',\n\t\tbackgroundColor: 'white',\n\t\tborderRadius: '100%',\n\t\tzIndex: '-1',\n\t\topacity: '0',\n\t\ttransition: '0.5s',\n\t\ttransform: `translate(${(props.gameState.difficulty - 3) * 67.5}%, 100%)`\n\t};\n\n\tconst labelHoverStyle = {\n\t\ttransform: `translate(${(props.gameState.difficulty - 3) * 67.5}%, 120%)`,\n\t\topacity: '1',\n\t\ttransition: '1s'\n\t};\n\n\tconst labelStyle = hover ? { ...labelDefaultStyle, ...labelHoverStyle } : labelDefaultStyle;\n\n\treturn (\n\t\t<div style={containerStyle}>\n\t\t\t<input\n\t\t\t\tclassName=\"difficultySlider\"\n\t\t\t\tonChange={(e) =>\n\t\t\t\t\tprops.setGameState({\n\t\t\t\t\t\t...props.gameState,\n\t\t\t\t\t\tdifficulty: parseInt(e.target.value)\n\t\t\t\t\t})}\n\t\t\t\ttype=\"range\"\n\t\t\t\tmin=\"1\"\n\t\t\t\tmax=\"5\"\n\t\t\t\tvalue={props.gameState.difficulty}\n\t\t\t\tstyle={{ width: `${SLIDER_REM_WIDTH}rem` }}\n\t\t\t\tonMouseOver={() => setHover(true)}\n\t\t\t\tonMouseLeave={() => setHover(false)}\n\t\t\t/>\n\t\t\t<div className=\"difficultyLabel\" style={labelStyle}>\n\t\t\t\t{props.gameState.difficulty}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default DifficultySlider;\n","import React, { useEffect } from 'react';\nimport 'css/startMapScreen.css';\nimport WaveButton from 'js/components/WaveButton';\nimport Dropdown from 'js/components/Dropdown';\nimport DifficultySlider from 'js/components/DifficultySlider';\nimport ReturnToMainMenuBtn from 'js/components/ReturnToMainMenuBtn.jsx';\nimport { getRandomSeed } from 'js/utility/utilityFunctions';\n\nconst SLIDER_WIDTH_REM = 5;\n\nconst getMapSizeOptions = () => {\n\tlet mapSizeOptions = [];\n\tfor (let i = 0; i < 3; i++) {\n\t\tconst mapSize = 6 + i * 2;\n\t\tmapSizeOptions.push({\n\t\t\tdisplay: `${mapSize}x${mapSize}`,\n\t\t\tvalue: mapSize\n\t\t});\n\t}\n\treturn mapSizeOptions;\n}\n\nexport const StartMapScreen = (props) => {\n\tuseEffect(() => {\n\t\tprops.setGameState({ ...props.gameState, seed: getRandomSeed() });\n\t}, []);\n\n\treturn (\n\t\t<div className=\"menu startMapScreen\">\n\t\t\t<div className=\"startMapOptionsContainer\">\n\t\t\t\t<p className=\"startMapOptionLabel\" key={'Map Size Label'}>\n\t\t\t\t\tMap Size\n\t\t\t\t</p>\n\t\t\t\t<Dropdown\n\t\t\t\t\tkey={'selectMapSize'}\n\t\t\t\t\tstyle={{ width: '3rem', height: '2rem', textAlign: 'center', padding: '0 1.25rem 0 0.5rem' }}\n\t\t\t\t\toptions={getMapSizeOptions()}\n\t\t\t\t\tclassName=\"mapSizeOption\"\n\t\t\t\t\tplaceholder={`${props.gameState.size}x${props.gameState.size}`}\n\t\t\t\t\tonHover={() => null}\n\t\t\t\t\tonChange={(item) => {\n\t\t\t\t\t\tprops.setGameState({ ...props.gameState, size: item.value });\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<p className=\"startMapOptionLabel\" key={'Map Seed Label'}>\n\t\t\t\t\tMap Seed\n\t\t\t\t</p>\n\t\t\t\t<div className=\"mapSeedOptionRow\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tkey=\"mapSeedInput\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"mapSeedInput\"\n\t\t\t\t\t\tid=\"mapSeedInput\"\n\t\t\t\t\t\tdefaultValue={props.gameState.seed}\n\t\t\t\t\t\tonChange={(e) => props.setGameState({ ...props.gameState, seed: e.target.value })}\n\t\t\t\t\t\tstyle={{ width: '8rem', textAlign: 'center' }}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey=\"rerollSeedBtn\"\n\t\t\t\t\t\tclassName=\"rerollSeedBtn\"\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tprops.setGameState({ ...props.gameState, seed: getRandomSeed() });\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"diceSymbol\">⚄</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<p className=\"startMapOptionLabel\">Difficulty:</p>\n\n\t\t\t\t<div className=\"startMapSliderRow\">\n\t\t\t\t\t<DifficultySlider {...props} />\n\t\t\t\t\t<div className=\"questionBox difficultyQuestionBox\">?</div>\n\t\t\t\t\t<div className=\"startOptionExplanation difficultyExplanation\">\n\t\t\t\t\t\tAdjusts the amount of default tiles in game. Difficulty 3 ensures the absolute minimum amount of\n\t\t\t\t\t\tdefault tiles required for a map that has one definitive solution.<br />\n\t\t\t\t\t\t<br />Difficulties above 3 may require trial and error and will likely have multiple possible\n\t\t\t\t\t\tsolutions (only one solution accepted).\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<p className=\"startMapOptionLabel\">Theme Color:</p>\n\t\t\t\t<div className=\"startMapSliderRow\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"colorSlider\"\n\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\tprops.setThemeColor({\n\t\t\t\t\t\t\t\t...props.themeColor,\n\t\t\t\t\t\t\t\tselected: parseInt(e.target.value)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\tmax={props.themeColor.available.length - 1}\n\t\t\t\t\t\tvalue={props.themeColor.selected}\n\t\t\t\t\t\tstyle={{ width: `${SLIDER_WIDTH_REM * 2}rem` }}\n\t\t\t\t\t/>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"colorDemoBox\"\n\t\t\t\t\t\tstyle={{ backgroundColor: props.themeColor.available[props.themeColor.selected] }}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"startOptionOptionRow\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tclassName=\"startOptionCheckbox\"\n\t\t\t\t\t\tdefaultChecked={!props.visualEffects}\n\t\t\t\t\t\tonChange={(e) => props.setVisualEffects(!e.target.checked)}\n\t\t\t\t\t/>\n\t\t\t\t\t<p className=\"startOptionRowLabel\">Disable Visual Effects</p>\n\t\t\t\t\t<div className=\"questionBox visualEffectsQuestionBox\">?</div>\n\t\t\t\t\t<div className=\"startOptionExplanation visualEffectsExplanation\">\n\t\t\t\t\t\tDisables the game background and win display visual effects.<br />\n\t\t\t\t\t\t<br />Can increase performance on old browsers/PCs.\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<WaveButton\n\t\t\t\t\tclassName=\"generateMapBtn\"\n\t\t\t\t\tkey={'generateMapBtn'}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.generateMap();\n\t\t\t\t\t}}\n\t\t\t\t\ttext={'Generate Map'}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<ReturnToMainMenuBtn {...props} />\n\t\t</div>\n\t);\n};\n\nexport default StartMapScreen;\n","import React from 'react';\nimport ReturnToMainMenuBtn from 'js/components/ReturnToMainMenuBtn.jsx';\n\nexport const AboutScreen = (props) => {\n\treturn (\n\t\t<div className=\"menu aboutScreen\">\n\t\t\t<p>This game was created with React.</p>\n\t\t\t<p>\n\t\t\t\t<a href=\"https://github.com/morgan-sam/Train-Tracks-React\">Source Code</a>\n\t\t\t</p>\n\t\t\t<p>Samuel Morgan - 2020</p>\n\t\t\t<ReturnToMainMenuBtn {...props} />\n\t\t</div>\n\t);\n};\n\nexport default AboutScreen;\n","import React from 'react';\nimport WaveButton from 'js/components/WaveButton';\n\nexport const MainMenuScreen = (props) => {\n\treturn (\n\t\t<div className=\"menu mainMenu\" key=\"mainMenuScreen\">\n\t\t\t<WaveButton\n\t\t\t\tclassName=\"startGameBtn\"\n\t\t\t\tkey={'startGameBtn'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.setCurrentScreen('startMap');\n\t\t\t\t}}\n\t\t\t\ttext={'Start Game'}\n\t\t\t/>\n\t\t\t<WaveButton\n\t\t\t\tclassName=\"loadSavedGameBtn\"\n\t\t\t\tkey={'loadSavedGameBtn'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.setCurrentScreen('loadMap');\n\t\t\t\t}}\n\t\t\t\ttext={'Load Saved Map'}\n\t\t\t/>\n\t\t\t<WaveButton\n\t\t\t\tclassName=\"howToPlayPageBtn\"\n\t\t\t\tkey={'howToPlayPageBtn'}\n\t\t\t\tonClick={async () => {\n\t\t\t\t\tprops.setCurrentScreen('howToPlay');\n\t\t\t\t}}\n\t\t\t\ttext={'How To Play'}\n\t\t\t/>\n\t\t\t<WaveButton\n\t\t\t\tclassName=\"aboutBtn\"\n\t\t\t\tkey={'aboutBtn'}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tprops.setCurrentScreen('about');\n\t\t\t\t}}\n\t\t\t\ttext={'About'}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default MainMenuScreen;\n","import React from 'react';\nimport Game from 'js/components/Game';\nimport LoadMapScreen from 'js/screen/loadMapScreen.jsx';\nimport HowToPlayScreen from 'js/screen/howToPlayScreen.jsx';\nimport StartMapScreen from 'js/screen/startMapScreen.jsx';\nimport AboutScreen from 'js/screen/aboutScreen.jsx';\nimport MainMenuScreen from 'js/screen/mainMenuScreen.jsx';\n\nexport const Screen = (props) => {\n\tconst getScreenDisplay = (screen) => {\n\t\tswitch (screen) {\n\t\t\tcase 'mainMenu':\n\t\t\t\treturn <MainMenuScreen {...props} />;\n\t\t\tcase 'startMap':\n\t\t\t\treturn <StartMapScreen {...props} />;\n\t\t\tcase 'loadMap':\n\t\t\t\treturn <LoadMapScreen {...props} />;\n\t\t\tcase 'howToPlay':\n\t\t\t\treturn <HowToPlayScreen {...props} />;\n\t\t\tcase 'about':\n\t\t\t\treturn <AboutScreen {...props} />;\n\t\t\tcase 'game':\n\t\t\t\treturn <Game {...props} />;\n\t\t\tdefault:\n\t\t\t\treturn <MainMenuScreen {...props} />;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"screen\" key={props.currentScreen}>\n\t\t\t<h1 key={'title'} className=\"gameTitle\">\n\t\t\t\tTrain Tracks\n\t\t\t</h1>\n\t\t\t{getScreenDisplay(props.currentScreen)}\n\t\t</div>\n\t);\n};\n\nexport default Screen;\n","import { convertRemToPx } from 'js/utility/utilityFunctions';\n\nexport const generateUnknownTrackIcon = (tileRemSize) => {\n\tconst tilePixelSize = convertRemToPx(tileRemSize);\n\tconst canvas = generateCanvas(tilePixelSize);\n\tconst image = canvas.toDataURL('image/png');\n\treturn image;\n};\n\nconst generateCanvas = (tilePixelSize) => {\n\tlet canvas = document.createElement('canvas');\n\n\tcanvas.width = tilePixelSize;\n\tcanvas.height = tilePixelSize;\n\tcanvas.context = drawWhiteBackground(canvas);\n\tcanvas.context = clearCircle(canvas, tilePixelSize / 3);\n\treturn canvas;\n};\n\nconst drawWhiteBackground = (canvas) => {\n\tlet context = canvas.getContext('2d');\n\tcontext.fillStyle = 'white';\n\tcontext.fillRect(0, 0, canvas.width, canvas.height);\n\treturn context;\n};\n\nconst clearCircle = (canvas, radius) => {\n\tlet context = canvas.getContext('2d');\n\tlet x = canvas.width / 2;\n\tlet y = canvas.height / 2;\n\tcontext.save();\n\tcontext.beginPath();\n\tcontext.arc(x, y, radius, 0, 2 * Math.PI, true);\n\tcontext.clip();\n\tcontext.clearRect(x - radius, y - radius, radius * 2, radius * 2);\n\tcontext.restore();\n};\n","import { convertRemToPx } from 'js/utility/utilityFunctions';\n\nexport const generateCrossTrackIcon = (tileRemSize) => {\n\tconst tilePixelSize = convertRemToPx(tileRemSize);\n\tconst canvas = generateCanvas(tilePixelSize);\n\tconst image = canvas.toDataURL('image/png');\n\treturn image;\n};\n\nconst generateCanvas = (tilePixelSize) => {\n\tlet canvas = document.createElement('canvas');\n\n\tcanvas.width = tilePixelSize;\n\tcanvas.height = tilePixelSize;\n\tcanvas.context = drawWhiteBackground(canvas);\n\tcanvas.context = clearCross(canvas);\n\treturn canvas;\n};\n\nconst drawWhiteBackground = (canvas) => {\n\tlet context = canvas.getContext('2d');\n\tcontext.fillStyle = 'white';\n\tcontext.fillRect(0, 0, canvas.width, canvas.height);\n\treturn context;\n};\n\nconst clearCross = (canvas) => {\n\tlet context = canvas.getContext('2d');\n\tlet x = canvas.width / 2;\n\tlet y = canvas.height / 2;\n\tconst cw = 5; //cross width\n\tconst cl = 50; //cross length\n\n\tcontext.save();\n\tcontext.beginPath();\n\tcontext.translate(x, y);\n\tcontext.rotate(45 * Math.PI / 180);\n\tcontext.rect(-cw / 2, -cl / 2, cw, cl);\n\tcontext.rotate(90 * Math.PI / 180);\n\tcontext.rect(-cw / 2, -cl / 2, cw, cl);\n\tcontext.clip();\n\tcontext.translate(-x, -y);\n\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n};\n","import { getRandomSeed } from 'js/utility/utilityFunctions';\n\nexport const defaultGameState = {\n\tsize: 8,\n\tseed: getRandomSeed(),\n\tdifficulty: 3,\n\tmapObject: null,\n\tactive: false,\n\tvisualEffects: true\n};\n","import React, { useEffect, useState } from 'react';\nimport Screen from 'js/components/Screen';\n\nimport { generateNewMap } from 'js/generation/map/generateMap';\nimport { generateUnknownTrackIcon } from 'js/generation/icon/generateUnknownTrackIcon';\nimport { generateCrossTrackIcon } from 'js/generation/icon/generateCrossTrackIcon';\nimport { roygbivArray } from 'js/utility/colorFunctions';\nimport { getRandomSeed } from 'js/utility/utilityFunctions';\nimport { defaultGameState } from 'js/data/defaultState';\n\nexport const App = () => {\n\tconst [ dimensions, setDimensions ] = useState({\n\t\theight: window.innerHeight,\n\t\twidth: window.innerWidth\n\t});\n\tconst [ mobileView, setMobileView ] = useState(false);\n\tconst [ gameState, setGameState ] = useState(defaultGameState);\n\tconst [ currentScreen, setCurrentScreen ] = useState('mainMenu');\n\tconst [ tileRemSize, setTileRemSize ] = useState(3.5);\n\tconst [ railImages, setRailImages ] = useState({\n\t\tunknown: generateUnknownTrackIcon(tileRemSize),\n\t\tcross: generateCrossTrackIcon(tileRemSize)\n\t});\n\tconst [ themeColor, setThemeColor ] = useState({\n\t\tavailable: roygbivArray(),\n\t\tselected: 0\n\t});\n\tconst [ visualEffects, setVisualEffects ] = useState(true);\n\n\tconst generateMap = (seed = gameState.seed) => {\n\t\tconst gameParameters = {\n\t\t\tsize: gameState.size,\n\t\t\tseed,\n\t\t\tdifficulty: gameState.difficulty\n\t\t};\n\t\tconst mapObject = generateNewMap(gameParameters);\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tseed,\n\t\t\tmapObject,\n\t\t\tactive: true\n\t\t});\n\t};\n\n\tconst inGameNewMap = () => generateMap(getRandomSeed());\n\n\tconst quitGame = () => {\n\t\tsetCurrentScreen('mainMenu');\n\t\tsetGameState({\n\t\t\t...gameState,\n\t\t\tmapObject: null,\n\t\t\tseed: getRandomSeed(),\n\t\t\tactive: false\n\t\t});\n\t};\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (gameState.mapObject !== null && gameState.active) setCurrentScreen('game');\n\t\t},\n\t\t[ gameState.mapObject, gameState.active ]\n\t);\n\n\tuseEffect(\n\t\t() => {\n\t\t\tconst mapSeedInput = document.getElementById('mapSeedInput');\n\t\t\tif (mapSeedInput) mapSeedInput.value = gameState.seed;\n\t\t},\n\t\t[ gameState.seed ]\n\t);\n\n\tconst screenProps = {\n\t\tcurrentScreen,\n\t\tsetCurrentScreen,\n\t\tgameState,\n\t\tsetGameState,\n\t\tinGameNewMap,\n\t\tgenerateMap,\n\t\tquitGame,\n\t\ttileRemSize,\n\t\trailImages,\n\t\tthemeColor,\n\t\tsetThemeColor,\n\t\tvisualEffects,\n\t\tsetVisualEffects,\n\t\tmobileView\n\t};\n\n\tconst handleResize = () => {\n\t\tsetDimensions({\n\t\t\theight: window.innerHeight,\n\t\t\twidth: window.innerWidth\n\t\t});\n\t\tsetMobileView(window.innerWidth < 600);\n\t};\n\n\tuseEffect(() => {\n\t\twindow.addEventListener('resize', handleResize);\n\t\treturn () => window.removeEventListener('resize', handleResize);\n\t});\n\n\tuseEffect(() => handleResize(), []);\n\n\treturn (\n\t\t<div key={'app'} className=\"app\">\n\t\t\t<div key={'screenContainer'} className=\"screenContainer\">\n\t\t\t\t<Screen {...screenProps} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import './js/wdyr';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'js/components/App';\nimport 'css/reset.css';\nimport 'css/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}